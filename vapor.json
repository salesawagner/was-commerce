[{
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 7331,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class Application : <Type usr=\"s:7Service9ContainerP\">Container<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 853
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 846
          }
        ],
        "key.bodylength" : 6440,
        "key.bodyoffset" : 889,
        "key.doc.column" : 20,
        "key.doc.comment" : "Core framework class. You usually create only one of these per application. Acts as your application's top-level service container.\n\n    let router = try app.make(Router.self)\n\n- note: When generating responses to requests, you should use the `Request` as your service-container.\n\nCall the `run()` method to run this `Application`'s commands. By default, this will boot an `HTTPServer` and begin serving requests.\nWhich command is run depends on the command-line arguments and flags.\n\n    try app.run()\n\nThe `Application` is responsible for calling `Provider` (and `VaporProvider`) boot methods. The `willBoot` and `didBoot` methods\nwill be called on `Application.init(...)` for both provider types. `VaporProvider`'s will have their `willRun` and `didRun` methods\ncalled on `Application.run()`",
        "key.doc.declaration" : "public final class Application : Container",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Note" : ""
          },
          {
            "Para" : "Call the `run()` method to run this `Application`’s commands. By default, this will boot an `HTTPServer` and begin serving requests. Which command is run depends on the command-line arguments and flags."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Application` is responsible for calling `Provider` (and `VaporProvider`) boot methods. The `willBoot` and `didBoot` methods will be called on `Application.init(...)` for both provider types. `VaporProvider`’s will have their `willRun` and `didRun` methods called on `Application.run()`"
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"15\" column=\"20\"><Name>Application<\/Name><USR>s:5Vapor11ApplicationC<\/USR><Declaration>public final class Application : Container<\/Declaration><CommentParts><Abstract><Para>Core framework class. You usually create only one of these per application. Acts as your application’s top-level service container.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let router = try app.make(Router.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>When generating responses to requests, you should use the <codeVoice>Request<\/codeVoice> as your service-container.<\/Para><\/Note><Para>Call the <codeVoice>run()<\/codeVoice> method to run this <codeVoice>Application<\/codeVoice>’s commands. By default, this will boot an <codeVoice>HTTPServer<\/codeVoice> and begin serving requests. Which command is run depends on the command-line arguments and flags.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try app.run()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Application<\/codeVoice> is responsible for calling <codeVoice>Provider<\/codeVoice> (and <codeVoice>VaporProvider<\/codeVoice>) boot methods. The <codeVoice>willBoot<\/codeVoice> and <codeVoice>didBoot<\/codeVoice> methods will be called on <codeVoice>Application.init(...)<\/codeVoice> for both provider types. <codeVoice>VaporProvider<\/codeVoice>’s will have their <codeVoice>willRun<\/codeVoice> and <codeVoice>didRun<\/codeVoice> methods called on <codeVoice>Application.run()<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 15,
        "key.doc.name" : "Application",
        "key.doc.type" : "Class",
        "key.doclength" : 846,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 878
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Application<\/decl.name> : <ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Container"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 6471,
        "key.name" : "Application",
        "key.namelength" : 11,
        "key.nameoffset" : 865,
        "key.offset" : 859,
        "key.parsed_declaration" : "public final class Application: Container",
        "key.parsed_scope.end" : 149,
        "key.parsed_scope.start" : 15,
        "key.runtime_name" : "_TtC4main11Application",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let config: <Type usr=\"s:7Service6ConfigV\">Config<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1071
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Config preferences and requirements for available services. Used to disambiguate which service should be used\nfor a given interface when multiple are available.",
            "key.doc.declaration" : "public let config: Config",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"18\" column=\"16\"><Name>config<\/Name><USR>s:5Vapor11ApplicationC6config7Service6ConfigVvp<\/USR><Declaration>public let config: Config<\/Declaration><CommentParts><Abstract><Para>Config preferences and requirements for available services. Used to disambiguate which service should be used for a given interface when multiple are available.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "config",
            "key.doc.type" : "Other",
            "key.doclength" : 173,
            "key.docoffset" : 894,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>config<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Service6ConfigV\">Config<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "config",
            "key.namelength" : 6,
            "key.nameoffset" : 1082,
            "key.offset" : 1078,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service9ContainerP6configAA6ConfigVvp"
              }
            ],
            "key.parsed_declaration" : "public let config: Config",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "Config",
            "key.typeusr" : "$S7Service6ConfigVD",
            "key.usr" : "s:5Vapor11ApplicationC6config7Service6ConfigVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var environment: <Type usr=\"s:7Service11EnvironmentV\">Environment<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1231
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Environment this application is running in. Determines whether certain behaviors like verbose\/debug logging are enabled.",
            "key.doc.declaration" : "public var environment: Environment",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"21\" column=\"16\"><Name>environment<\/Name><USR>s:5Vapor11ApplicationC11environment7Service11EnvironmentVvp<\/USR><Declaration>public var environment: Environment<\/Declaration><CommentParts><Abstract><Para>Environment this application is running in. Determines whether certain behaviors like verbose\/debug logging are enabled.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 21,
            "key.doc.name" : "environment",
            "key.doc.type" : "Other",
            "key.doclength" : 125,
            "key.docoffset" : 1102,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>environment<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Service11EnvironmentV\">Environment<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "environment",
            "key.namelength" : 11,
            "key.nameoffset" : 1242,
            "key.offset" : 1238,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service9ContainerP11environmentAA11EnvironmentVvp"
              }
            ],
            "key.parsed_declaration" : "public var environment: Environment",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Environment",
            "key.typeusr" : "$S7Service11EnvironmentVD",
            "key.usr" : "s:5Vapor11ApplicationC11environment7Service11EnvironmentVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let services: <Type usr=\"s:7Service8ServicesV\">Services<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1466
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Services that can be created by this application. A copy of these services will be passed to all sub-containers created\nform this application (i.e., `Request`, `Response`, etc.)",
            "key.doc.declaration" : "public let services: Services",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"25\" column=\"16\"><Name>services<\/Name><USR>s:5Vapor11ApplicationC8services7Service8ServicesVvp<\/USR><Declaration>public let services: Services<\/Declaration><CommentParts><Abstract><Para>Services that can be created by this application. A copy of these services will be passed to all sub-containers created form this application (i.e., <codeVoice>Request<\/codeVoice>, <codeVoice>Response<\/codeVoice>, etc.)<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 25,
            "key.doc.name" : "services",
            "key.doc.type" : "Other",
            "key.doclength" : 190,
            "key.docoffset" : 1272,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>services<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Service8ServicesV\">Services<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "services",
            "key.namelength" : 8,
            "key.nameoffset" : 1477,
            "key.offset" : 1473,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service9ContainerP8servicesAA8ServicesVvp"
              }
            ],
            "key.parsed_declaration" : "public let services: Services",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.typename" : "Services",
            "key.typeusr" : "$S7Service8ServicesVD",
            "key.usr" : "s:5Vapor11ApplicationC8services7Service8ServicesVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let serviceCache: <Type usr=\"s:7Service0A5CacheC\">ServiceCache<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1635
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "The `Application`'s private service cache. This cache will not be shared with any sub-containers created by this application.",
            "key.doc.declaration" : "public let serviceCache: ServiceCache",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"28\" column=\"16\"><Name>serviceCache<\/Name><USR>s:5Vapor11ApplicationC12serviceCache7Service0eD0Cvp<\/USR><Declaration>public let serviceCache: ServiceCache<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>Application<\/codeVoice>’s private service cache. This cache will not be shared with any sub-containers created by this application.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 28,
            "key.doc.name" : "serviceCache",
            "key.doc.type" : "Other",
            "key.doclength" : 130,
            "key.docoffset" : 1501,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>serviceCache<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Service0A5CacheC\">ServiceCache<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "serviceCache",
            "key.namelength" : 12,
            "key.nameoffset" : 1646,
            "key.offset" : 1642,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service9ContainerP12serviceCacheAA0aD0Cvp"
              }
            ],
            "key.parsed_declaration" : "public let serviceCache: ServiceCache",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 28,
            "key.typename" : "ServiceCache",
            "key.typeusr" : "$S7Service0A5CacheCD",
            "key.usr" : "s:5Vapor11ApplicationC12serviceCache7Service0eD0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var eventLoopGroup: <Type usr=\"s:3NIO14EventLoopGroupP\">EventLoopGroup<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1781
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The `EventLoopGroup` that we derive the event loop below from, so we can close it in `deinit`.",
            "key.doc.declaration" : "private var eventLoopGroup: EventLoopGroup",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"31\" column=\"17\"><Name>eventLoopGroup<\/Name><USR>s:5Vapor11ApplicationC14eventLoopGroup33_A335A646993FEC0951B7D3BD300C4F81LL3NIO05EventdE0_pvp<\/USR><Declaration>private var eventLoopGroup: EventLoopGroup<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>EventLoopGroup<\/codeVoice> that we derive the event loop below from, so we can close it in <codeVoice>deinit<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 31,
            "key.doc.name" : "eventLoopGroup",
            "key.doc.type" : "Other",
            "key.doclength" : 99,
            "key.docoffset" : 1678,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>eventLoopGroup<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO14EventLoopGroupP\">EventLoopGroup<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 34,
            "key.name" : "eventLoopGroup",
            "key.namelength" : 14,
            "key.nameoffset" : 1793,
            "key.offset" : 1789,
            "key.parsed_declaration" : "private var eventLoopGroup: EventLoopGroup",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 31,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "EventLoopGroup",
            "key.typeusr" : "$S3NIO14EventLoopGroup_pD",
            "key.usr" : "s:5Vapor11ApplicationC14eventLoopGroup33_A335A646993FEC0951B7D3BD300C4F81LL3NIO05EventdE0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2085
              }
            ],
            "key.bodylength" : 42,
            "key.bodyoffset" : 2118,
            "key.doc.column" : 16,
            "key.doc.comment" : "This `Application`'s event loop. This event-loop is separate from the `HTTPServer`'s event loop group and should only be used\nfor creating services during boot \/ configuration phases. Never use this event loop while responding to requests.",
            "key.doc.declaration" : "public var eventLoop: EventLoop { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"35\" column=\"16\"><Name>eventLoop<\/Name><USR>s:5Vapor11ApplicationC9eventLoop3NIO05EventD0_pvp<\/USR><Declaration>public var eventLoop: EventLoop { get }<\/Declaration><CommentParts><Abstract><Para>This <codeVoice>Application<\/codeVoice>’s event loop. This event-loop is separate from the <codeVoice>HTTPServer<\/codeVoice>’s event loop group and should only be used for creating services during boot \/ configuration phases. Never use this event loop while responding to requests.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 35,
            "key.doc.name" : "eventLoop",
            "key.doc.type" : "Other",
            "key.doclength" : 252,
            "key.docoffset" : 1829,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>eventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 69,
            "key.name" : "eventLoop",
            "key.namelength" : 9,
            "key.nameoffset" : 2096,
            "key.offset" : 2092,
            "key.overrides" : [
              {
                "key.usr" : "s:5Async11BasicWorkerP9eventLoop3NIO05EventE0_pvp"
              }
            ],
            "key.parsed_declaration" : "public var eventLoop: EventLoop",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 35,
            "key.typename" : "EventLoop",
            "key.typeusr" : "$S3NIO9EventLoop_pD",
            "key.usr" : "s:5Vapor11ApplicationC9eventLoop3NIO05EventD0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var extend: <Type usr=\"s:7Service6ExtendV\">Extend<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2227
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Use this to create stored properties in extensions.",
            "key.doc.declaration" : "public var extend: Extend",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"40\" column=\"16\"><Name>extend<\/Name><USR>s:5Vapor11ApplicationC6extend7Service6ExtendVvp<\/USR><Declaration>public var extend: Extend<\/Declaration><CommentParts><Abstract><Para>Use this to create stored properties in extensions.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 40,
            "key.doc.name" : "extend",
            "key.doc.type" : "Other",
            "key.doclength" : 56,
            "key.docoffset" : 2167,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>extend<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Service6ExtendV\">Extend<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "extend",
            "key.namelength" : 6,
            "key.nameoffset" : 2238,
            "key.offset" : 2234,
            "key.parsed_declaration" : "public var extend: Extend",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 40,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Extend",
            "key.typeusr" : "$S7Service6ExtendVD",
            "key.usr" : "s:5Vapor11ApplicationC6extend7Service6ExtendVvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: Boot",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2261
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func asyncBoot(config: <Type usr=\"s:7Service6ConfigV\">Config<\/Type> = default, environment: <Type usr=\"s:7Service11EnvironmentV\">Environment<\/Type> = default, services: <Type usr=\"s:7Service8ServicesV\">Services<\/Type> = default) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor11ApplicationC\">Application<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2834
              }
            ],
            "key.bodylength" : 111,
            "key.bodyoffset" : 2990,
            "key.doc.column" : 24,
            "key.doc.comment" : "Asynchronously creates and boots a new `Application`.\n\n- parameters:\n    - config: Configuration preferences for this service container.\n    - environment: Application's environment type (i.e., testing, production).\n                   Different environments can trigger different application behavior (for example, supressing verbose logs in production mode).\n    - services: Application's available services. A copy of these services will be passed to all sub event-loops created by this Application.",
            "key.doc.declaration" : "public static func asyncBoot(config: Config = default, environment: Environment = default, services: Services = default) -> Future<Application>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"51\" column=\"24\"><Name>asyncBoot(config:environment:services:)<\/Name><USR>s:5Vapor11ApplicationC9asyncBoot6config11environment8services3NIO15EventLoopFutureCyACG7Service6ConfigV_AL11EnvironmentVAL8ServicesVtFZ<\/USR><Declaration>public static func asyncBoot(config: Config = default, environment: Environment = default, services: Services = default) -&gt; Future&lt;Application&gt;<\/Declaration><CommentParts><Abstract><Para>Asynchronously creates and boots a new <codeVoice>Application<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>config<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Configuration preferences for this service container.<\/Para><\/Discussion><\/Parameter><Parameter><Name>environment<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Application’s environment type (i.e., testing, production). Different environments can trigger different application behavior (for example, supressing verbose logs in production mode).<\/Para><\/Discussion><\/Parameter><Parameter><Name>services<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Application’s available services. A copy of these services will be passed to all sub event-loops created by this Application.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 51,
            "key.doc.name" : "asyncBoot(config:environment:services:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Configuration preferences for this service container."
                  }
                ],
                "name" : "config"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Application’s environment type (i.e., testing, production). Different environments can trigger different application behavior (for example, supressing verbose logs in production mode)."
                  }
                ],
                "name" : "environment"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Application’s available services. A copy of these services will be passed to all sub event-loops created by this Application."
                  }
                ],
                "name" : "services"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 553,
            "key.docoffset" : 2277,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>asyncBoot<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>config<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Service6ConfigV\">Config<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Service11EnvironmentV\">Environment<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>services<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Service8ServicesV\">Services<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor11ApplicationC\">Application<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 261,
            "key.name" : "asyncBoot(config:environment:services:)",
            "key.namelength" : 112,
            "key.nameoffset" : 2853,
            "key.offset" : 2841,
            "key.parsed_declaration" : "public static func asyncBoot(config: Config = .default(), environment: Environment = .development, services: Services = .default()) -> Future<Application>",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 51,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let app: <Type usr=\"s:5Vapor11ApplicationC\">Application<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>app<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor11ApplicationC\">Application<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 52,
                "key.name" : "app",
                "key.namelength" : 3,
                "key.nameoffset" : 3003,
                "key.offset" : 2999,
                "key.parsed_declaration" : "let app = Application(config, environment, services)",
                "key.parsed_scope.end" : 52,
                "key.parsed_scope.start" : 52,
                "key.typename" : "Application",
                "key.typeusr" : "$S5Vapor11ApplicationCD",
                "key.usr" : "s:5Vapor11ApplicationC9asyncBoot6config11environment8services3NIO15EventLoopFutureCyACG7Service6ConfigV_AL11EnvironmentVAL8ServicesVtFZ3appL_ACvp"
              }
            ],
            "key.typename" : "(Application.Type) -> (Config, Environment, Services) -> EventLoopFuture<Application>",
            "key.typeusr" : "$S6config11environment8services3NIO15EventLoopFutureCy5Vapor11ApplicationCG7Service6ConfigV_AK11EnvironmentVAK8ServicesVtcD",
            "key.usr" : "s:5Vapor11ApplicationC9asyncBoot6config11environment8services3NIO15EventLoopFutureCyACG7Service6ConfigV_AL11EnvironmentVAL8ServicesVtFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(config: <Type usr=\"s:7Service6ConfigV\">Config<\/Type> = default, environment: <Type usr=\"s:7Service11EnvironmentV\">Environment<\/Type> = default, services: <Type usr=\"s:7Service8ServicesV\">Services<\/Type> = default) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 3672
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3665
              }
            ],
            "key.bodylength" : 80,
            "key.bodyoffset" : 3830,
            "key.doc.column" : 24,
            "key.doc.comment" : "Synchronously creates and boots a new `Application`.\n\n- parameters:\n    - config: Configuration preferences for this service container.\n    - environment: Application's environment type (i.e., testing, production).\n                   Different environments can trigger different application behavior (for example, suppressing verbose logs in production mode).\n    - services: Application's available services. A copy of these services will be passed to all sub event-loops created by this Application.",
            "key.doc.declaration" : "public convenience init(config: Config = default, environment: Environment = default, services: Services = default) throws",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"63\" column=\"24\"><Name>init(config:environment:services:)<\/Name><USR>s:5Vapor11ApplicationC6config11environment8servicesAC7Service6ConfigV_AG11EnvironmentVAG8ServicesVtKcfc<\/USR><Declaration>public convenience init(config: Config = default, environment: Environment = default, services: Services = default) throws<\/Declaration><CommentParts><Abstract><Para>Synchronously creates and boots a new <codeVoice>Application<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>config<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Configuration preferences for this service container.<\/Para><\/Discussion><\/Parameter><Parameter><Name>environment<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Application’s environment type (i.e., testing, production). Different environments can trigger different application behavior (for example, suppressing verbose logs in production mode).<\/Para><\/Discussion><\/Parameter><Parameter><Name>services<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Application’s available services. A copy of these services will be passed to all sub event-loops created by this Application.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 63,
            "key.doc.name" : "init(config:environment:services:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Configuration preferences for this service container."
                  }
                ],
                "name" : "config"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Application’s environment type (i.e., testing, production). Different environments can trigger different application behavior (for example, suppressing verbose logs in production mode)."
                  }
                ],
                "name" : "environment"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Application’s available services. A copy of these services will be passed to all sub event-loops created by this Application."
                  }
                ],
                "name" : "services"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 553,
            "key.docoffset" : 3108,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>config<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Service6ConfigV\">Config<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Service11EnvironmentV\">Environment<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>services<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Service8ServicesV\">Services<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 227,
            "key.name" : "init(config:environment:services:)",
            "key.namelength" : 137,
            "key.nameoffset" : 3684,
            "key.offset" : 3684,
            "key.parsed_declaration" : "public convenience init(\n    config: Config = .default(),\n    environment: Environment = .development,\n    services: Services = .default()\n) throws",
            "key.parsed_scope.end" : 70,
            "key.parsed_scope.start" : 63,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor11ApplicationCyAC7Service6ConfigV_AD11EnvironmentVAD8ServicesVtcfc\">init(_:_:_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Application.Type) -> (Config, Environment, Services) throws -> Application",
            "key.typeusr" : "$S6config11environment8services5Vapor11ApplicationC7Service6ConfigV_AG11EnvironmentVAG8ServicesVtKcD",
            "key.usr" : "s:5Vapor11ApplicationC6config11environment8servicesAC7Service6ConfigV_AG11EnvironmentVAG8ServicesVtKcfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 9,
            "key.name" : "MARK: Run",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3920
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func asyncRun() -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4840
              }
            ],
            "key.bodylength" : 726,
            "key.bodyoffset" : 4880,
            "key.doc.column" : 17,
            "key.doc.comment" : "Asynchronously runs the `Application`'s commands. This method will call the `willRun(_:)` methods of all\nregistered `VaporProvider's` before running.\n\nNormally this command will boot an `HTTPServer`. However, depending on configuration and command-line arguments\/flags, this method may run a different command.\nSee `CommandConfig` for more information about customizing the commands that this method runs.\n\n    try app.asyncRun().wait()\n\nNote: When running a server, `asyncRun()` will return when the server has finished _booting_. Use the `runningServer` property on `Application` to wait\nfor the server to close. The synchronous `run()` method will call this automatically.\n\n    try app.runningServer?.onClose().wait()\n\nAll `VaporProvider`'s `didRun(_:)` methods will be called before finishing.",
            "key.doc.declaration" : "public func asyncRun() -> Future<Void>",
            "key.doc.discussion" : [
              {
                "Para" : "Normally this command will boot an `HTTPServer`. However, depending on configuration and command-line arguments\/flags, this method may run a different command. See `CommandConfig` for more information about customizing the commands that this method runs."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "Note: When running a server, `asyncRun()` will return when the server has finished . Use the `runningServer` property on `Application` to wait for the server to close. The synchronous `run()` method will call this automatically."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "All `VaporProvider`’s `didRun(_:)` methods will be called before finishing."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"88\" column=\"17\"><Name>asyncRun()<\/Name><USR>s:5Vapor11ApplicationC8asyncRun3NIO15EventLoopFutureCyytGyF<\/USR><Declaration>public func asyncRun() -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Asynchronously runs the <codeVoice>Application<\/codeVoice>’s commands. This method will call the <codeVoice>willRun(_:)<\/codeVoice> methods of all registered <codeVoice>VaporProvider&apos;s<\/codeVoice> before running.<\/Para><\/Abstract><Discussion><Para>Normally this command will boot an <codeVoice>HTTPServer<\/codeVoice>. However, depending on configuration and command-line arguments\/flags, this method may run a different command. See <codeVoice>CommandConfig<\/codeVoice> for more information about customizing the commands that this method runs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try app.asyncRun().wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note: When running a server, <codeVoice>asyncRun()<\/codeVoice> will return when the server has finished <emphasis>booting<\/emphasis>. Use the <codeVoice>runningServer<\/codeVoice> property on <codeVoice>Application<\/codeVoice> to wait for the server to close. The synchronous <codeVoice>run()<\/codeVoice> method will call this automatically.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try app.runningServer?.onClose().wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>All <codeVoice>VaporProvider<\/codeVoice>’s <codeVoice>didRun(_:)<\/codeVoice> methods will be called before finishing.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 88,
            "key.doc.name" : "asyncRun()",
            "key.doc.type" : "Function",
            "key.doclength" : 901,
            "key.docoffset" : 3935,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>asyncRun<\/decl.name>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 760,
            "key.name" : "asyncRun()",
            "key.namelength" : 10,
            "key.nameoffset" : 4852,
            "key.offset" : 4847,
            "key.parsed_declaration" : "public func asyncRun() -> Future<Void>",
            "key.parsed_scope.end" : 104,
            "key.parsed_scope.start" : 88,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var runInput: <Type usr=\"s:7Command0A5InputV\">CommandInput<\/Type><\/Declaration>",
                "key.doc.column" : 17,
                "key.doc.comment" : "Create a mutable copy of the environment input for this run.",
                "key.doc.declaration" : "var runInput: Command.CommandInput",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"98\" column=\"17\"><Name>runInput<\/Name><USR>s:5Vapor11ApplicationC8asyncRun3NIO15EventLoopFutureCyytGyFAHyKcfU0_8runInputL_7Command0kJ0Vvp<\/USR><Declaration>var runInput: Command.CommandInput<\/Declaration><CommentParts><Abstract><Para>Create a mutable copy of the environment input for this run.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 98,
                "key.doc.name" : "runInput",
                "key.doc.type" : "Other",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>runInput<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Command0A5InputV\">CommandInput<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 8,
                "key.name" : "runInput",
                "key.offset" : 5318,
                "key.parsed_declaration" : "var runInput = self.environment.commandInput",
                "key.parsed_scope.end" : 98,
                "key.parsed_scope.start" : 98,
                "key.typename" : "CommandInput",
                "key.typeusr" : "$S7Command0A5InputVD",
                "key.usr" : "s:5Vapor11ApplicationC8asyncRun3NIO15EventLoopFutureCyytGyFAHyKcfU0_8runInputL_7Command0kJ0Vvp"
              }
            ],
            "key.typename" : "(Application) -> () -> EventLoopFuture<()>",
            "key.typeusr" : "$S3NIO15EventLoopFutureCyytGycD",
            "key.usr" : "s:5Vapor11ApplicationC8asyncRun3NIO15EventLoopFutureCyytGyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func run() throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5713
              }
            ],
            "key.bodylength" : 77,
            "key.bodyoffset" : 5739,
            "key.doc.column" : 17,
            "key.doc.comment" : "Synchronously calls `asyncRun()` and waits for the running server to close (if one exists).",
            "key.doc.declaration" : "public func run() throws",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"107\" column=\"17\"><Name>run()<\/Name><USR>s:5Vapor11ApplicationC3runyyKF<\/USR><Declaration>public func run() throws<\/Declaration><CommentParts><Abstract><Para>Synchronously calls <codeVoice>asyncRun()<\/codeVoice> and waits for the running server to close (if one exists).<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 107,
            "key.doc.name" : "run()",
            "key.doc.type" : "Function",
            "key.doclength" : 96,
            "key.docoffset" : 5613,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>run<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 97,
            "key.name" : "run()",
            "key.namelength" : 5,
            "key.nameoffset" : 5725,
            "key.offset" : 5720,
            "key.parsed_declaration" : "public func run() throws",
            "key.parsed_scope.end" : 110,
            "key.parsed_scope.start" : 107,
            "key.substructure" : [

            ],
            "key.typename" : "(Application) -> () throws -> ()",
            "key.typeusr" : "$SyyKcD",
            "key.usr" : "s:5Vapor11ApplicationC3runyyKF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: Internal",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 5826
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal init(_ config: <Type usr=\"s:7Service6ConfigV\">Config<\/Type>, _ environment: <Type usr=\"s:7Service11EnvironmentV\">Environment<\/Type>, _ services: <Type usr=\"s:7Service8ServicesV\">Services<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 5928
              }
            ],
            "key.bodylength" : 251,
            "key.bodyoffset" : 6011,
            "key.doc.column" : 14,
            "key.doc.comment" : "Internal initializer. Creates an `Application` without booting providers.",
            "key.doc.declaration" : "internal init(_ config: Config, _ environment: Environment, _ services: Services)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"115\" column=\"14\"><Name>init(_:_:_:)<\/Name><USR>s:5Vapor11ApplicationCyAC7Service6ConfigV_AD11EnvironmentVAD8ServicesVtcfc<\/USR><Declaration>internal init(_ config: Config, _ environment: Environment, _ services: Services)<\/Declaration><CommentParts><Abstract><Para>Internal initializer. Creates an <codeVoice>Application<\/codeVoice> without booting providers.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 115,
            "key.doc.name" : "init(_:_:_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 78,
            "key.docoffset" : 5846,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>config<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Service6ConfigV\">Config<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>environment<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Service11EnvironmentV\">Environment<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>services<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Service8ServicesV\">Services<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 326,
            "key.name" : "init(_:_:_:)",
            "key.namelength" : 72,
            "key.nameoffset" : 5937,
            "key.offset" : 5937,
            "key.parsed_declaration" : "internal init(_ config: Config, _ environment: Environment, _ services: Services)",
            "key.parsed_scope.end" : 122,
            "key.parsed_scope.start" : 115,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor11ApplicationC6config11environment8servicesAC7Service6ConfigV_AG11EnvironmentVAG8ServicesVtKcfc\">init(config:environment:services:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Application.Type) -> (Config, Environment, Services) -> Application",
            "key.typeusr" : "$Sy5Vapor11ApplicationC7Service6ConfigV_AD11EnvironmentVAD8ServicesVtcD",
            "key.usr" : "s:5Vapor11ApplicationCyAC7Service6ConfigV_AD11EnvironmentVAD8ServicesVtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal func boot() -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 6335
              }
            ],
            "key.bodylength" : 727,
            "key.bodyoffset" : 6373,
            "key.doc.column" : 19,
            "key.doc.comment" : "Internal method. Boots the application and its providers.",
            "key.doc.declaration" : "internal func boot() -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"125\" column=\"19\"><Name>boot()<\/Name><USR>s:5Vapor11ApplicationC4boot3NIO15EventLoopFutureCyytGyF<\/USR><Declaration>internal func boot() -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Internal method. Boots the application and its providers.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 125,
            "key.doc.name" : "boot()",
            "key.doc.type" : "Function",
            "key.doclength" : 62,
            "key.docoffset" : 6269,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>boot<\/decl.name>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 757,
            "key.name" : "boot()",
            "key.namelength" : 6,
            "key.nameoffset" : 6349,
            "key.offset" : 6344,
            "key.parsed_declaration" : "internal func boot() -> Future<Void>",
            "key.parsed_scope.end" : 139,
            "key.parsed_scope.start" : 125,
            "key.substructure" : [

            ],
            "key.typename" : "(Application) -> () -> EventLoopFuture<()>",
            "key.typeusr" : "$S3NIO15EventLoopFutureCyytGycD",
            "key.usr" : "s:5Vapor11ApplicationC4boot3NIO15EventLoopFutureCyytGyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>deinit<\/Declaration>",
            "key.bodylength" : 169,
            "key.bodyoffset" : 7158,
            "key.doc.column" : 5,
            "key.doc.comment" : "Called when the app deinitializes.",
            "key.doc.declaration" : "",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"142\" column=\"5\"><Name>deinit<\/Name><USR>s:5Vapor11ApplicationCfd<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Called when the app deinitializes.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 142,
            "key.doc.name" : "deinit",
            "key.doc.type" : "Function",
            "key.doclength" : 39,
            "key.docoffset" : 7107,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
            "key.fully_annotated_decl" : "<decl.function.destructor><syntaxtype.keyword>deinit<\/syntaxtype.keyword><\/decl.function.destructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 178,
            "key.name" : "deinit",
            "key.namelength" : 6,
            "key.nameoffset" : 7150,
            "key.offset" : 7150,
            "key.parsed_declaration" : "deinit",
            "key.parsed_scope.end" : 148,
            "key.parsed_scope.start" : 142,
            "key.substructure" : [

            ],
            "key.typename" : "(Application) -> () -> ()",
            "key.typeusr" : "$SyycD",
            "key.usr" : "s:5Vapor11ApplicationCfd"
          }
        ],
        "key.typename" : "Application.Type",
        "key.typeusr" : "$S5Vapor11ApplicationCmD",
        "key.usr" : "s:5Vapor11ApplicationC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 8001,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>protocol Container : <Type usr=\"s:5Async11BasicWorkerP\">BasicWorker<\/Type><\/Declaration>",
        "key.bodylength" : 293,
        "key.bodyoffset" : 21,
        "key.doc.declaration" : "protocol Container : BasicWorker",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Each `Container` has `Config`, `Environment`, and `Services`. It uses this information to dynamically provide services based on your configuration and environment."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Containers are also `Worker`s, meaning they have a reference to an `EventLoop`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Warning" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Container<\/Name><USR>s:7Service9ContainerP<\/USR><Declaration>protocol Container : BasicWorker<\/Declaration><CommentParts><Abstract><Para><codeVoice>Container<\/codeVoice>s are used to create instances of services that your application needs in a configurable way.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let client = try container.make(Client.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Each <codeVoice>Container<\/codeVoice> has <codeVoice>Config<\/codeVoice>, <codeVoice>Environment<\/codeVoice>, and <codeVoice>Services<\/codeVoice>. It uses this information to dynamically provide services based on your configuration and environment.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[switch env {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[case .production: config.prefer(ProductionLogger.self, for: Logger.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[default: config.prefer(DebugLogger.self, for: Logger.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[...]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let logger = try container.make(Logger.self) \/\/ changes based on environment]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Containers are also <codeVoice>Worker<\/codeVoice>s, meaning they have a reference to an <codeVoice>EventLoop<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(container.eventLoop)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Warning><Para>You should never use services created from a <codeVoice>Container<\/codeVoice> on <emphasis>another<\/emphasis> <codeVoice>Container<\/codeVoice>’s <codeVoice>EventLoop<\/codeVoice>.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Container",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Container<\/decl.name> : <ref.protocol usr=\"s:5Async11BasicWorkerP\">BasicWorker<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 315,
        "key.modulename" : "Service",
        "key.name" : "Container",
        "key.namelength" : 9,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func client() throws -&gt; <Type usr=\"s:5Vapor6ClientP\">Client<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 242
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 281,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Client` for this `Container`.\n\n    let res = try req.client().get(\"http:\/\/vapor.codes\")\n    print(res) \/\/ Future<Response>\n\nSee `Client` for more information.",
            "key.doc.declaration" : "public func client() throws -> Client",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `Client` for more information."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"8\" column=\"17\"><Name>client()<\/Name><USR>s:7Service9ContainerP5VaporE6clientAD6Client_pyKF<\/USR><Declaration>public func client() throws -&gt; Client<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Client<\/codeVoice> for this <codeVoice>Container<\/codeVoice>.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try req.client().get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>Client<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "client()",
            "key.doc.type" : "Function",
            "key.doclength" : 212,
            "key.docoffset" : 26,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>client<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor6ClientP\">Client<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 64,
            "key.name" : "client()",
            "key.namelength" : 8,
            "key.nameoffset" : 254,
            "key.offset" : 249,
            "key.parsed_declaration" : "public func client() throws -> Client",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Container> (Self) -> () throws -> Client",
            "key.typeusr" : "$S5Vapor6Client_pyKcD",
            "key.usr" : "s:7Service9ContainerP5VaporE6clientAD6Client_pyKF"
          }
        ],
        "key.typename" : "Container.Protocol",
        "key.typeusr" : "$S7Service9Container_pmD",
        "key.usr" : "s:7Service9ContainerP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Client<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 511
          }
        ],
        "key.bodylength" : 470,
        "key.bodyoffset" : 535,
        "key.doc.column" : 17,
        "key.doc.comment" : "Connects to remote HTTP servers and sends HTTP requests receiving HTTP responses.\n\n    let res = try req.client().get(\"http:\/\/vapor.codes\")\n    print(res) \/\/ Future<Response>",
        "key.doc.declaration" : "public protocol Client",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"18\" column=\"17\"><Name>Client<\/Name><USR>s:5Vapor6ClientP<\/USR><Declaration>public protocol Client<\/Declaration><CommentParts><Abstract><Para>Connects to remote HTTP servers and sends HTTP requests receiving HTTP responses.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try req.client().get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "Client",
        "key.doc.type" : "Class",
        "key.doclength" : 194,
        "key.docoffset" : 317,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Client<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 488,
        "key.name" : "Client",
        "key.namelength" : 6,
        "key.nameoffset" : 527,
        "key.offset" : 518,
        "key.parsed_declaration" : "public protocol Client",
        "key.parsed_scope.end" : 32,
        "key.parsed_scope.start" : 18,
        "key.runtime_name" : "_TtP4main6Client_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 622,
            "key.doc.column" : 9,
            "key.doc.comment" : "The `Container` to use for creating `Request`s.",
            "key.doc.declaration" : "var container: Container { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"20\" column=\"9\"><Name>container<\/Name><USR>s:5Vapor6ClientP9container7Service9Container_pvp<\/USR><Declaration>var container: Container { get }<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>Container<\/codeVoice> to use for creating <codeVoice>Request<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 20,
            "key.doc.name" : "container",
            "key.doc.type" : "Other",
            "key.doclength" : 52,
            "key.docoffset" : 540,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "container",
            "key.namelength" : 9,
            "key.nameoffset" : 600,
            "key.offset" : 596,
            "key.parsed_declaration" : "var container: Container",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.typename" : "Container",
            "key.typeusr" : "$S7Service9Container_pD",
            "key.usr" : "s:5Vapor6ClientP9container7Service9Container_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func send(_ req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Sends an HTTP `Request` to a server.\n\n    let req: Request ...\n    let res = try client.send(req)\n    print(res) \/\/ Future<Response>\n\n- parameters:\n    - request: `Request` to send.\n- returns: A `Future` containing the requested `Response` or an `Error`.",
            "key.doc.declaration" : "func send(_ req: Request) -> Future<Response>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"31\" column=\"10\"><Name>send(_:)<\/Name><USR>s:5Vapor6ClientP4sendy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCF<\/USR><Declaration>func send(_ req: Request) -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Sends an HTTP <codeVoice>Request<\/codeVoice> to a server.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Request<\/codeVoice> to send.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the requested <codeVoice>Response<\/codeVoice> or an <codeVoice>Error<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let req: Request ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let res = try client.send(req)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 31,
            "key.doc.name" : "send(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Request` to send."
                  }
                ],
                "name" : "request"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the requested `Response` or an `Error`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 321,
            "key.docoffset" : 634,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>send<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 45,
            "key.name" : "send(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 964,
            "key.offset" : 959,
            "key.parsed_declaration" : "func send(_ req: Request) -> Future<Response>",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 31,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6ClientPAAE4send_7headers2to10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG8NIOHTTP110HTTPMethodO_AN11HTTPHeadersV4HTTP16URLRepresentable_pyAA7RequestCKXEtF\">send(_:headers:to:beforeSend:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Client> (Self) -> (Request) -> EventLoopFuture<Response>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCy5Vapor8ResponseCGAD7RequestCcD",
            "key.usr" : "s:5Vapor6ClientP4sendy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCF"
          }
        ],
        "key.typename" : "Client.Protocol",
        "key.typeusr" : "$S5Vapor6Client_pmD",
        "key.usr" : "s:5Vapor6ClientP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol Client<\/Declaration>",
        "key.bodylength" : 6973,
        "key.bodyoffset" : 1026,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Client",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"18\" column=\"17\"><Name>Client<\/Name><USR>s:5Vapor6ClientP<\/USR><Declaration>public protocol Client<\/Declaration><CommentParts><Abstract><Para>Connects to remote HTTP servers and sends HTTP requests receiving HTTP responses.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try req.client().get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "Client",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Client<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 6992,
        "key.name" : "Client",
        "key.namelength" : 6,
        "key.nameoffset" : 1018,
        "key.offset" : 1008,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func get(_ url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, beforeSend: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; () = default) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2112
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 2249,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends an HTTP `GET` `Request` to a server with an optional configuration closure that will run before sending.\n\n    let res = try client.get(\"http:\/\/api.vapor.codes\/users\")\n    print(res) \/\/ Future<Response>\n\nHTTP `GET` requests are typically used for fetching information and do not have bodies.\nHowever, the `beforeSend` closure is a great place for encoding query string parameters.\n\n    let res = try client.get(\"http:\/\/api.vapor.codes\/users\") { get in\n        try get.query.encode([\"name\": \"vapor\"])\n    }\n    print(res) \/\/ Future<Response>\n\n- parameters:\n    - url: Something `URLRepresentable` that will be converted to a `URL`.\n           This `URL` should contain a scheme, hostname, and port.\n    - headers: `HTTPHeaders` to add to the request. Empty by default.\n    - beforeSend: An optional closure that can mutate the `Request` before it is sent.\n- returns: A `Future` containing the requested `Response` or an `Error`.",
            "key.doc.declaration" : "public func get(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -> () = default) -> Future<Response>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "HTTP `GET` requests are typically used for fetching information and do not have bodies. However, the `beforeSend` closure is a great place for encoding query string parameters."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"54\" column=\"17\"><Name>get(_:headers:beforeSend:)<\/Name><USR>s:5Vapor6ClientPAAE3get_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF<\/USR><Declaration>public func get(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -&gt; () = default) -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Sends an HTTP <codeVoice>GET<\/codeVoice> <codeVoice>Request<\/codeVoice> to a server with an optional configuration closure that will run before sending.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Something <codeVoice>URLRepresentable<\/codeVoice> that will be converted to a <codeVoice>URL<\/codeVoice>. This <codeVoice>URL<\/codeVoice> should contain a scheme, hostname, and port.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPHeaders<\/codeVoice> to add to the request. Empty by default.<\/Para><\/Discussion><\/Parameter><Parameter><Name>beforeSend<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An optional closure that can mutate the <codeVoice>Request<\/codeVoice> before it is sent.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the requested <codeVoice>Response<\/codeVoice> or an <codeVoice>Error<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try client.get(\"http:\/\/api.vapor.codes\/users\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>HTTP <codeVoice>GET<\/codeVoice> requests are typically used for fetching information and do not have bodies. However, the <codeVoice>beforeSend<\/codeVoice> closure is a great place for encoding query string parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try client.get(\"http:\/\/api.vapor.codes\/users\") { get in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try get.query.encode([\"name\": \"vapor\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 54,
            "key.doc.name" : "get(_:headers:beforeSend:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Something `URLRepresentable` that will be converted to a `URL`. This `URL` should contain a scheme, hostname, and port."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPHeaders` to add to the request. Empty by default."
                  }
                ],
                "name" : "headers"
              },
              {
                "discussion" : [
                  {
                    "Para" : "An optional closure that can mutate the `Request` before it is sent."
                  }
                ],
                "name" : "beforeSend"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the requested `Response` or an `Error`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 1077,
            "key.docoffset" : 1031,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beforeSend<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 213,
            "key.name" : "get(_:headers:beforeSend:)",
            "key.namelength" : 103,
            "key.nameoffset" : 2124,
            "key.offset" : 2119,
            "key.parsed_declaration" : "public func get(_ url: URLRepresentable, headers: HTTPHeaders = [:], beforeSend: (Request) throws -> () = { _ in }) -> Future<Response>",
            "key.parsed_scope.end" : 56,
            "key.parsed_scope.start" : 54,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Client> (Self) -> (URLRepresentable, HTTPHeaders, (Request) throws -> ()) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S_7headers10beforeSend3NIO15EventLoopFutureCy5Vapor8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAF7RequestCKXEtcD",
            "key.usr" : "s:5Vapor6ClientPAAE3get_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func post(_ url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, beforeSend: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; () = default) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3122
              }
            ],
            "key.bodylength" : 83,
            "key.bodyoffset" : 3260,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends an HTTP `POST` `Request` to a server with an optional configuration closure that will run before sending.\n\n    let user: User ...\n    let res = try client.post(\"http:\/\/api.vapor.codes\/users\") { post in\n        try post.content.encode(user)\n    }\n    print(res) \/\/ Future<Response>\n\n- parameters:\n    - url: Something `URLRepresentable` that will be converted to a `URL`.\n           This `URL` should contain a scheme, hostname, and port.\n    - headers: `HTTPHeaders` to add to the request. Empty by default.\n    - beforeSend: An optional closure that can mutate the `Request` before it is sent.\n- returns: A `Future` containing the requested `Response` or an `Error`.",
            "key.doc.declaration" : "public func post(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -> () = default) -> Future<Response>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"72\" column=\"17\"><Name>post(_:headers:beforeSend:)<\/Name><USR>s:5Vapor6ClientPAAE4post_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF<\/USR><Declaration>public func post(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -&gt; () = default) -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Sends an HTTP <codeVoice>POST<\/codeVoice> <codeVoice>Request<\/codeVoice> to a server with an optional configuration closure that will run before sending.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Something <codeVoice>URLRepresentable<\/codeVoice> that will be converted to a <codeVoice>URL<\/codeVoice>. This <codeVoice>URL<\/codeVoice> should contain a scheme, hostname, and port.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPHeaders<\/codeVoice> to add to the request. Empty by default.<\/Para><\/Discussion><\/Parameter><Parameter><Name>beforeSend<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An optional closure that can mutate the <codeVoice>Request<\/codeVoice> before it is sent.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the requested <codeVoice>Response<\/codeVoice> or an <codeVoice>Error<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user: User ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let res = try client.post(\"http:\/\/api.vapor.codes\/users\") { post in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try post.content.encode(user)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 72,
            "key.doc.name" : "post(_:headers:beforeSend:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Something `URLRepresentable` that will be converted to a `URL`. This `URL` should contain a scheme, hostname, and port."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPHeaders` to add to the request. Empty by default."
                  }
                ],
                "name" : "headers"
              },
              {
                "discussion" : [
                  {
                    "Para" : "An optional closure that can mutate the `Request` before it is sent."
                  }
                ],
                "name" : "beforeSend"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the requested `Response` or an `Error`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 780,
            "key.docoffset" : 2338,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>post<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beforeSend<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 215,
            "key.name" : "post(_:headers:beforeSend:)",
            "key.namelength" : 104,
            "key.nameoffset" : 3134,
            "key.offset" : 3129,
            "key.parsed_declaration" : "public func post(_ url: URLRepresentable, headers: HTTPHeaders = [:], beforeSend: (Request) throws -> () = { _ in }) -> Future<Response>",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 72,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6ClientPAAE4post_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF\">post(_:headers:content:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Client> (Self) -> (URLRepresentable, HTTPHeaders, (Request) throws -> ()) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S_7headers10beforeSend3NIO15EventLoopFutureCy5Vapor8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAF7RequestCKXEtcD",
            "key.usr" : "s:5Vapor6ClientPAAE4post_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func patch(_ url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, beforeSend: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; () = default) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4141
              }
            ],
            "key.bodylength" : 84,
            "key.bodyoffset" : 4280,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends an HTTP `PATCH` `Request` to a server with an optional configuration closure that will run before sending.\n\n    let user: User ...\n    let res = try client.patch(\"http:\/\/api.vapor.codes\/users\/42\") { patch in\n        try patch.content.encode(user)\n    }\n    print(res) \/\/ Future<Response>\n\n- parameters:\n    - url: Something `URLRepresentable` that will be converted to a `URL`.\n           This `URL` should contain a scheme, hostname, and port.\n    - headers: `HTTPHeaders` to add to the request. Empty by default.\n    - beforeSend: An optional closure that can mutate the `Request` before it is sent.\n- returns: A `Future` containing the requested `Response` or an `Error`.",
            "key.doc.declaration" : "public func patch(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -> () = default) -> Future<Response>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"90\" column=\"17\"><Name>patch(_:headers:beforeSend:)<\/Name><USR>s:5Vapor6ClientPAAE5patch_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF<\/USR><Declaration>public func patch(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -&gt; () = default) -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Sends an HTTP <codeVoice>PATCH<\/codeVoice> <codeVoice>Request<\/codeVoice> to a server with an optional configuration closure that will run before sending.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Something <codeVoice>URLRepresentable<\/codeVoice> that will be converted to a <codeVoice>URL<\/codeVoice>. This <codeVoice>URL<\/codeVoice> should contain a scheme, hostname, and port.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPHeaders<\/codeVoice> to add to the request. Empty by default.<\/Para><\/Discussion><\/Parameter><Parameter><Name>beforeSend<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An optional closure that can mutate the <codeVoice>Request<\/codeVoice> before it is sent.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the requested <codeVoice>Response<\/codeVoice> or an <codeVoice>Error<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user: User ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let res = try client.patch(\"http:\/\/api.vapor.codes\/users\/42\") { patch in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try patch.content.encode(user)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 90,
            "key.doc.name" : "patch(_:headers:beforeSend:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Something `URLRepresentable` that will be converted to a `URL`. This `URL` should contain a scheme, hostname, and port."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPHeaders` to add to the request. Empty by default."
                  }
                ],
                "name" : "headers"
              },
              {
                "discussion" : [
                  {
                    "Para" : "An optional closure that can mutate the `Request` before it is sent."
                  }
                ],
                "name" : "beforeSend"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the requested `Response` or an `Error`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 787,
            "key.docoffset" : 3350,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>patch<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beforeSend<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 217,
            "key.name" : "patch(_:headers:beforeSend:)",
            "key.namelength" : 105,
            "key.nameoffset" : 4153,
            "key.offset" : 4148,
            "key.parsed_declaration" : "public func patch(_ url: URLRepresentable, headers: HTTPHeaders = [:], beforeSend: (Request) throws -> () = { _ in }) -> Future<Response>",
            "key.parsed_scope.end" : 92,
            "key.parsed_scope.start" : 90,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6ClientPAAE5patch_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF\">patch(_:headers:content:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Client> (Self) -> (URLRepresentable, HTTPHeaders, (Request) throws -> ()) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S_7headers10beforeSend3NIO15EventLoopFutureCy5Vapor8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAF7RequestCKXEtcD",
            "key.usr" : "s:5Vapor6ClientPAAE5patch_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func put(_ url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, beforeSend: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; () = default) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5154
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 5291,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends an HTTP `PUT` `Request` to a server with an optional configuration closure that will run before sending.\n\n    let user: User ...\n    let res = try client.put(\"http:\/\/api.vapor.codes\/users\/42\") { put in\n        try put.content.encode(user)\n    }\n    print(res) \/\/ Future<Response>\n\n- parameters:\n    - url: Something `URLRepresentable` that will be converted to a `URL`.\n           This `URL` should contain a scheme, hostname, and port.\n    - headers: `HTTPHeaders` to add to the request. Empty by default.\n    - beforeSend: An optional closure that can mutate the `Request` before it is sent.\n- returns: A `Future` containing the requested `Response` or an `Error`.",
            "key.doc.declaration" : "public func put(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -> () = default) -> Future<Response>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"108\" column=\"17\"><Name>put(_:headers:beforeSend:)<\/Name><USR>s:5Vapor6ClientPAAE3put_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF<\/USR><Declaration>public func put(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -&gt; () = default) -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Sends an HTTP <codeVoice>PUT<\/codeVoice> <codeVoice>Request<\/codeVoice> to a server with an optional configuration closure that will run before sending.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Something <codeVoice>URLRepresentable<\/codeVoice> that will be converted to a <codeVoice>URL<\/codeVoice>. This <codeVoice>URL<\/codeVoice> should contain a scheme, hostname, and port.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPHeaders<\/codeVoice> to add to the request. Empty by default.<\/Para><\/Discussion><\/Parameter><Parameter><Name>beforeSend<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An optional closure that can mutate the <codeVoice>Request<\/codeVoice> before it is sent.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the requested <codeVoice>Response<\/codeVoice> or an <codeVoice>Error<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user: User ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let res = try client.put(\"http:\/\/api.vapor.codes\/users\/42\") { put in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try put.content.encode(user)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 108,
            "key.doc.name" : "put(_:headers:beforeSend:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Something `URLRepresentable` that will be converted to a `URL`. This `URL` should contain a scheme, hostname, and port."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPHeaders` to add to the request. Empty by default."
                  }
                ],
                "name" : "headers"
              },
              {
                "discussion" : [
                  {
                    "Para" : "An optional closure that can mutate the `Request` before it is sent."
                  }
                ],
                "name" : "beforeSend"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the requested `Response` or an `Error`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 779,
            "key.docoffset" : 4371,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>put<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beforeSend<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 213,
            "key.name" : "put(_:headers:beforeSend:)",
            "key.namelength" : 103,
            "key.nameoffset" : 5166,
            "key.offset" : 5161,
            "key.parsed_declaration" : "public func put(_ url: URLRepresentable, headers: HTTPHeaders = [:], beforeSend: (Request) throws -> () = { _ in }) -> Future<Response>",
            "key.parsed_scope.end" : 110,
            "key.parsed_scope.start" : 108,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6ClientPAAE3put_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF\">put(_:headers:content:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Client> (Self) -> (URLRepresentable, HTTPHeaders, (Request) throws -> ()) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S_7headers10beforeSend3NIO15EventLoopFutureCy5Vapor8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAF7RequestCKXEtcD",
            "key.usr" : "s:5Vapor6ClientPAAE3put_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func delete(_ url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, beforeSend: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; () = default) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6476
              }
            ],
            "key.bodylength" : 85,
            "key.bodyoffset" : 6616,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends an HTTP `DELETE` `Request` to a server with an optional configuration closure that will run before sending.\n\n    let res = try client.delete(\"http:\/\/api.vapor.codes\/users\/42\")\n    print(res) \/\/ Future<Response>\n\nHTTP `DELETE` requests are typically used for deleting information and do not have bodies.\nHowever, the `beforeSend` closure is a great place for encoding query string parameters.\n\n    let res = try client.delete(\"http:\/\/api.vapor.codes\/users\") { get in\n        try get.query.encode([\"name\": \"vapor\"])\n    }\n    print(res) \/\/ Future<Response>\n\n- parameters:\n    - url: Something `URLRepresentable` that will be converted to a `URL`.\n           This `URL` should contain a scheme, hostname, and port.\n    - headers: `HTTPHeaders` to add to the request. Empty by default.\n    - beforeSend: An optional closure that can mutate the `Request` before it is sent.\n- returns: A `Future` containing the requested `Response` or an `Error`.",
            "key.doc.declaration" : "public func delete(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -> () = default) -> Future<Response>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "HTTP `DELETE` requests are typically used for deleting information and do not have bodies. However, the `beforeSend` closure is a great place for encoding query string parameters."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"131\" column=\"17\"><Name>delete(_:headers:beforeSend:)<\/Name><USR>s:5Vapor6ClientPAAE6delete_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF<\/USR><Declaration>public func delete(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -&gt; () = default) -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Sends an HTTP <codeVoice>DELETE<\/codeVoice> <codeVoice>Request<\/codeVoice> to a server with an optional configuration closure that will run before sending.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Something <codeVoice>URLRepresentable<\/codeVoice> that will be converted to a <codeVoice>URL<\/codeVoice>. This <codeVoice>URL<\/codeVoice> should contain a scheme, hostname, and port.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPHeaders<\/codeVoice> to add to the request. Empty by default.<\/Para><\/Discussion><\/Parameter><Parameter><Name>beforeSend<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An optional closure that can mutate the <codeVoice>Request<\/codeVoice> before it is sent.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the requested <codeVoice>Response<\/codeVoice> or an <codeVoice>Error<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try client.delete(\"http:\/\/api.vapor.codes\/users\/42\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>HTTP <codeVoice>DELETE<\/codeVoice> requests are typically used for deleting information and do not have bodies. However, the <codeVoice>beforeSend<\/codeVoice> closure is a great place for encoding query string parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try client.delete(\"http:\/\/api.vapor.codes\/users\") { get in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try get.query.encode([\"name\": \"vapor\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 131,
            "key.doc.name" : "delete(_:headers:beforeSend:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Something `URLRepresentable` that will be converted to a `URL`. This `URL` should contain a scheme, hostname, and port."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPHeaders` to add to the request. Empty by default."
                  }
                ],
                "name" : "headers"
              },
              {
                "discussion" : [
                  {
                    "Para" : "An optional closure that can mutate the `Request` before it is sent."
                  }
                ],
                "name" : "beforeSend"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the requested `Response` or an `Error`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 1092,
            "key.docoffset" : 5380,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delete<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beforeSend<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 219,
            "key.name" : "delete(_:headers:beforeSend:)",
            "key.namelength" : 106,
            "key.nameoffset" : 6488,
            "key.offset" : 6483,
            "key.parsed_declaration" : "public func delete(_ url: URLRepresentable, headers: HTTPHeaders = [:], beforeSend: (Request) throws -> () = { _ in }) -> Future<Response>",
            "key.parsed_scope.end" : 133,
            "key.parsed_scope.start" : 131,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Client> (Self) -> (URLRepresentable, HTTPHeaders, (Request) throws -> ()) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S_7headers10beforeSend3NIO15EventLoopFutureCy5Vapor8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAF7RequestCKXEtcD",
            "key.usr" : "s:5Vapor6ClientPAAE6delete_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func send(_ method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, to url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, beforeSend: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; () = default) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7555
              }
            ],
            "key.bodylength" : 281,
            "key.bodyoffset" : 7716,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends an HTTP `Request` to a server with an optional configuration closure that will run before sending.\n\n    let user: User ...\n    let res = try client.send(.POST, to: \"http:\/\/api.vapor.codes\/users\") { post in\n        try post.content.encode(user)\n    }\n    print(res) \/\/ Future<Response>\n\n- parameters:\n    - method: `HTTPMethod` to use for the request.\n    - headers: `HTTPHeaders` to add to the request. Empty by default.\n    - url: Something `URLRepresentable` that will be converted to a `URL`.\n           This `URL` should contain a scheme, hostname, and port.\n    - beforeSend: An optional closure that can mutate the `Request` before it is sent.\n- returns: A `Future` containing the requested `Response` or an `Error`.",
            "key.doc.declaration" : "public func send(_ method: HTTPMethod, headers: HTTPHeaders = default, to url: URLRepresentable, beforeSend: (Request) throws -> () = default) -> Future<Response>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"150\" column=\"17\"><Name>send(_:headers:to:beforeSend:)<\/Name><USR>s:5Vapor6ClientPAAE4send_7headers2to10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG8NIOHTTP110HTTPMethodO_AN11HTTPHeadersV4HTTP16URLRepresentable_pyAA7RequestCKXEtF<\/USR><Declaration>public func send(_ method: HTTPMethod, headers: HTTPHeaders = default, to url: URLRepresentable, beforeSend: (Request) throws -&gt; () = default) -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Sends an HTTP <codeVoice>Request<\/codeVoice> to a server with an optional configuration closure that will run before sending.<\/Para><\/Abstract><Parameters><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMethod<\/codeVoice> to use for the request.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPHeaders<\/codeVoice> to add to the request. Empty by default.<\/Para><\/Discussion><\/Parameter><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Something <codeVoice>URLRepresentable<\/codeVoice> that will be converted to a <codeVoice>URL<\/codeVoice>. This <codeVoice>URL<\/codeVoice> should contain a scheme, hostname, and port.<\/Para><\/Discussion><\/Parameter><Parameter><Name>beforeSend<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An optional closure that can mutate the <codeVoice>Request<\/codeVoice> before it is sent.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the requested <codeVoice>Response<\/codeVoice> or an <codeVoice>Error<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user: User ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let res = try client.send(.POST, to: \"http:\/\/api.vapor.codes\/users\") { post in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try post.content.encode(user)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 150,
            "key.doc.name" : "send(_:headers:to:beforeSend:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMethod` to use for the request."
                  }
                ],
                "name" : "method"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPHeaders` to add to the request. Empty by default."
                  }
                ],
                "name" : "headers"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Something `URLRepresentable` that will be converted to a `URL`. This `URL` should contain a scheme, hostname, and port."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "An optional closure that can mutate the `Request` before it is sent."
                  }
                ],
                "name" : "beforeSend"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the requested `Response` or an `Error`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 843,
            "key.docoffset" : 6708,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>send<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>method<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beforeSend<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 436,
            "key.name" : "send(_:headers:to:beforeSend:)",
            "key.namelength" : 127,
            "key.nameoffset" : 7567,
            "key.offset" : 7562,
            "key.parsed_declaration" : "public func send(_ method: HTTPMethod, headers: HTTPHeaders = [:], to url: URLRepresentable, beforeSend: (Request) throws -> () = { _ in }) -> Future<Response>",
            "key.parsed_scope.end" : 158,
            "key.parsed_scope.start" : 150,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6ClientP4sendy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCF\">send(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Client> (Self) -> (HTTPMethod, HTTPHeaders, URLRepresentable, (Request) throws -> ()) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S_7headers2to10beforeSend3NIO15EventLoopFutureCy5Vapor8ResponseCG8NIOHTTP110HTTPMethodO_AK11HTTPHeadersV4HTTP16URLRepresentable_pyAG7RequestCKXEtcD",
            "key.usr" : "s:5Vapor6ClientPAAE4send_7headers2to10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG8NIOHTTP110HTTPMethodO_AN11HTTPHeadersV4HTTP16URLRepresentable_pyAA7RequestCKXEtF"
          }
        ],
        "key.typename" : "Client.Protocol",
        "key.typeusr" : "$S5Vapor6Client_pmD",
        "key.usr" : "s:5Vapor6ClientP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2955,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class FoundationClient : <Type usr=\"s:5Vapor6ClientP\">Client<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 60
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 53
          }
        ],
        "key.bodylength" : 1758,
        "key.bodyoffset" : 111,
        "key.doc.column" : 20,
        "key.doc.comment" : "`Client` wrapper around `Foundation.URLSession`.",
        "key.doc.declaration" : "public final class FoundationClient : Client, ServiceType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"2\" column=\"20\"><Name>FoundationClient<\/Name><USR>s:5Vapor16FoundationClientC<\/USR><Declaration>public final class FoundationClient : Client, ServiceType<\/Declaration><CommentParts><Abstract><Para><codeVoice>Client<\/codeVoice> wrapper around <codeVoice>Foundation.URLSession<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "FoundationClient",
        "key.doc.type" : "Class",
        "key.doclength" : 53,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 90
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 98
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FoundationClient<\/decl.name> : <ref.protocol usr=\"s:5Vapor6ClientP\">Client<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Client"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1804,
        "key.name" : "FoundationClient",
        "key.namelength" : 16,
        "key.nameoffset" : 72,
        "key.offset" : 66,
        "key.parsed_declaration" : "public final class FoundationClient: Client, ServiceType",
        "key.parsed_scope.end" : 51,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtC4main16FoundationClient",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 143
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 190,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static var serviceSupports: [Any.Type] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"4\" column=\"23\"><Name>serviceSupports<\/Name><USR>s:5Vapor16FoundationClientC15serviceSupportsSayypXpGvpZ<\/USR><Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "serviceSupports",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 116,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>serviceSupports<\/decl.name>: <decl.var.type>[Any.Type]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 75,
            "key.name" : "serviceSupports",
            "key.namelength" : 15,
            "key.nameoffset" : 161,
            "key.offset" : 150,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP15serviceSupportsSayypXpGvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var serviceSupports: [Any.Type]",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 4,
            "key.typename" : "[Any.Type]",
            "key.typeusr" : "$SSayypXpGD",
            "key.usr" : "s:5Vapor16FoundationClientC15serviceSupportsSayypXpGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor16FoundationClientC\">FoundationClient<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 258
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 340,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> FoundationClient",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"9\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor16FoundationClientC11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; FoundationClient<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 9,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 231,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor16FoundationClientC\">FoundationClient<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 117,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 277,
            "key.offset" : 265,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> FoundationClient",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 9,
            "key.substructure" : [

            ],
            "key.typename" : "(FoundationClient.Type) -> (Container) throws -> FoundationClient",
            "key.typeusr" : "$S3for5Vapor16FoundationClientC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor16FoundationClientC11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 410
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Client`.",
            "key.doc.declaration" : "public var container: Container",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"14\" column=\"16\"><Name>container<\/Name><USR>s:5Vapor16FoundationClientC9container7Service9Container_pvp<\/USR><Declaration>public var container: Container<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Client<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 14,
            "key.doc.name" : "container",
            "key.doc.type" : "Other",
            "key.doclength" : 18,
            "key.docoffset" : 388,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "container",
            "key.namelength" : 9,
            "key.nameoffset" : 421,
            "key.offset" : 417,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6ClientP9container7Service9Container_pvp"
              }
            ],
            "key.parsed_declaration" : "public var container: Container",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Container",
            "key.typeusr" : "$S7Service9Container_pD",
            "key.usr" : "s:5Vapor16FoundationClientC9container7Service9Container_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let urlSession: <Type usr=\"c:objc(cs)NSURLSession\">URLSession<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 494
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The `URLSession` powering this client.",
            "key.doc.declaration" : "private let urlSession: URLSession",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"17\" column=\"17\"><Name>urlSession<\/Name><USR>s:5Vapor16FoundationClientC10urlSession33_504D098B3B82A2272E473485AC6645FELLSo12NSURLSessionCvp<\/USR><Declaration>private let urlSession: URLSession<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>URLSession<\/codeVoice> powering this client.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 17,
            "key.doc.name" : "urlSession",
            "key.doc.type" : "Other",
            "key.doclength" : 43,
            "key.docoffset" : 447,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>urlSession<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSession\">URLSession<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.name" : "urlSession",
            "key.namelength" : 10,
            "key.nameoffset" : 506,
            "key.offset" : 502,
            "key.parsed_declaration" : "private let urlSession: URLSession",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.typename" : "URLSession",
            "key.typeusr" : "$SSo12NSURLSessionCD",
            "key.usr" : "s:5Vapor16FoundationClientC10urlSession33_504D098B3B82A2272E473485AC6645FELLSo12NSURLSessionCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ urlSession: <Type usr=\"c:objc(cs)NSURLSession\">URLSession<\/Type>, on container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 576
              }
            ],
            "key.bodylength" : 77,
            "key.bodyoffset" : 640,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `FoundationClient`.",
            "key.doc.declaration" : "public init(_ urlSession: URLSession, on container: Container)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"20\" column=\"12\"><Name>init(_:on:)<\/Name><USR>s:5Vapor16FoundationClientC_2onACSo12NSURLSessionC_7Service9Container_ptcfc<\/USR><Declaration>public init(_ urlSession: URLSession, on container: Container)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>FoundationClient<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 20,
            "key.doc.name" : "init(_:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 38,
            "key.docoffset" : 534,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>urlSession<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSURLSession\">URLSession<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 135,
            "key.name" : "init(_:on:)",
            "key.namelength" : 55,
            "key.nameoffset" : 583,
            "key.offset" : 583,
            "key.parsed_declaration" : "public init(_ urlSession: URLSession, on container: Container)",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 20,
            "key.substructure" : [

            ],
            "key.typename" : "(FoundationClient.Type) -> (URLSession, Container) -> FoundationClient",
            "key.typeusr" : "$S_2on5Vapor16FoundationClientCSo12NSURLSessionC_7Service9Container_ptcD",
            "key.usr" : "s:5Vapor16FoundationClientC_2onACSo12NSURLSessionC_7Service9Container_ptcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`(on container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) -&gt; <Type usr=\"s:5Vapor16FoundationClientC\">FoundationClient<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 784
              }
            ],
            "key.bodylength" : 73,
            "key.bodyoffset" : 859,
            "key.doc.column" : 24,
            "key.doc.comment" : "Creates a `FoundationClient` with default settings.",
            "key.doc.declaration" : "public static func `default`(on container: Container) -> FoundationClient",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"26\" column=\"24\"><Name>default(on:)<\/Name><USR>s:5Vapor16FoundationClientC7default2onAC7Service9Container_p_tFZ<\/USR><Declaration>public static func `default`(on container: Container) -&gt; FoundationClient<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>FoundationClient<\/codeVoice> with default settings.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 26,
            "key.doc.name" : "default(on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 56,
            "key.docoffset" : 724,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor16FoundationClientC\">FoundationClient<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 142,
            "key.name" : "default(on:)",
            "key.namelength" : 34,
            "key.nameoffset" : 803,
            "key.offset" : 791,
            "key.parsed_declaration" : "public static func `default`(on container: Container) -> FoundationClient",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 26,
            "key.substructure" : [

            ],
            "key.typename" : "(FoundationClient.Type) -> (Container) -> FoundationClient",
            "key.typeusr" : "$S2on5Vapor16FoundationClientC7Service9Container_p_tcD",
            "key.usr" : "s:5Vapor16FoundationClientC7default2onAC7Service9Container_p_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func send(_ req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 961
              }
            ],
            "key.bodylength" : 852,
            "key.bodyoffset" : 1015,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Client`.",
            "key.doc.declaration" : "public func send(_ req: Request) -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"31\" column=\"17\"><Name>send(_:)<\/Name><USR>s:5Vapor16FoundationClientC4sendy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCF<\/USR><Declaration>public func send(_ req: Request) -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Client<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 31,
            "key.doc.name" : "send(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 18,
            "key.docoffset" : 939,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>send<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 900,
            "key.name" : "send(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 973,
            "key.offset" : 968,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6ClientP4sendy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCF"
              }
            ],
            "key.parsed_declaration" : "public func send(_ req: Request) -> Future<Response>",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 31,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let urlReq: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>urlReq<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 50,
                "key.name" : "urlReq",
                "key.namelength" : 6,
                "key.nameoffset" : 1028,
                "key.offset" : 1024,
                "key.parsed_declaration" : "let urlReq = req.http.convertToFoundationRequest()",
                "key.parsed_scope.end" : 32,
                "key.parsed_scope.start" : 32,
                "key.typename" : "URLRequest",
                "key.typeusr" : "$S10Foundation10URLRequestVD",
                "key.usr" : "s:5Vapor16FoundationClientC4sendy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCF6urlReqL_0B010URLRequestVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>promise<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 53,
                "key.name" : "promise",
                "key.namelength" : 7,
                "key.nameoffset" : 1087,
                "key.offset" : 1083,
                "key.parsed_declaration" : "let promise = req.eventLoop.newPromise(Response.self)",
                "key.parsed_scope.end" : 33,
                "key.parsed_scope.start" : 33,
                "key.typename" : "EventLoopPromise<Response>",
                "key.typeusr" : "$S3NIO16EventLoopPromiseVy5Vapor8ResponseCGD",
                "key.usr" : "s:5Vapor16FoundationClientC4sendy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCF7promiseL_AE0fG7PromiseVyAIGvp"
              }
            ],
            "key.typename" : "(FoundationClient) -> (Request) -> EventLoopFuture<Response>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCy5Vapor8ResponseCGAD7RequestCcD",
            "key.usr" : "s:5Vapor16FoundationClientC4sendy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCF"
          }
        ],
        "key.typename" : "FoundationClient.Type",
        "key.typeusr" : "$S5Vapor16FoundationClientCmD",
        "key.usr" : "s:5Vapor16FoundationClientC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1875
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>struct HTTPRequest : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 1890
          }
        ],
        "key.bodylength" : 468,
        "key.bodyoffset" : 1921,
        "key.doc.declaration" : "struct HTTPRequest : HTTPMessage",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPClient` and `HTTPServer`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>HTTPRequest<\/Name><USR>s:4HTTP11HTTPRequestV<\/USR><Declaration>struct HTTPRequest : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>An HTTP request from a client to a server.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let httpReq = HTTPRequest(method: .GET, url: \"\/hello\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPClient<\/codeVoice> and <codeVoice>HTTPServer<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "HTTPRequest",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>HTTPRequest<\/decl.name> : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 492,
        "key.modulename" : "HTTP",
        "key.name" : "HTTPRequest",
        "key.namelength" : 11,
        "key.nameoffset" : 1908,
        "key.offset" : 1898,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func convertToFoundationRequest() -&gt; <Type usr=\"s:10Foundation10URLRequestV\">URLRequest<\/Type><\/Declaration>",
            "key.bodylength" : 346,
            "key.bodyoffset" : 2041,
            "key.doc.column" : 10,
            "key.doc.comment" : "Converts an `HTTP.HTTPRequest` to `Foundation.URLRequest`",
            "key.doc.declaration" : "func convertToFoundationRequest() -> URLRequest",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"57\" column=\"10\"><Name>convertToFoundationRequest()<\/Name><USR>s:4HTTP11HTTPRequestV5VaporE26convertToFoundationRequest33_504D098B3B82A2272E473485AC6645FELL0F010URLRequestVyF<\/USR><Declaration>func convertToFoundationRequest() -&gt; URLRequest<\/Declaration><CommentParts><Abstract><Para>Converts an <codeVoice>HTTP.HTTPRequest<\/codeVoice> to <codeVoice>Foundation.URLRequest<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 57,
            "key.doc.name" : "convertToFoundationRequest()",
            "key.doc.type" : "Function",
            "key.doclength" : 62,
            "key.docoffset" : 1926,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>convertToFoundationRequest<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 396,
            "key.name" : "convertToFoundationRequest()",
            "key.namelength" : 28,
            "key.nameoffset" : 1997,
            "key.offset" : 1992,
            "key.parsed_declaration" : "func convertToFoundationRequest() -> URLRequest",
            "key.parsed_scope.end" : 67,
            "key.parsed_scope.start" : 57,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let http: <Type usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>http<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 15,
                "key.name" : "http",
                "key.namelength" : 4,
                "key.nameoffset" : 2054,
                "key.offset" : 2050,
                "key.parsed_declaration" : "let http = self",
                "key.parsed_scope.end" : 58,
                "key.parsed_scope.start" : 58,
                "key.typename" : "HTTPRequest",
                "key.typeusr" : "$S4HTTP11HTTPRequestVD",
                "key.usr" : "s:4HTTP11HTTPRequestV5VaporE26convertToFoundationRequest33_504D098B3B82A2272E473485AC6645FELL0F010URLRequestVyF4httpL_ACvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let body: <Type usr=\"s:10Foundation4DataV\">Data<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>body<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 35,
                "key.name" : "body",
                "key.namelength" : 4,
                "key.nameoffset" : 2078,
                "key.offset" : 2074,
                "key.parsed_declaration" : "let body = http.body.data ?? Data()",
                "key.parsed_scope.end" : 59,
                "key.parsed_scope.start" : 59,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:4HTTP11HTTPRequestV4bodyAA8HTTPBodyVvp\">body<\/RelatedName>"
                  }
                ],
                "key.typename" : "Data",
                "key.typeusr" : "$S10Foundation4DataVD",
                "key.usr" : "s:4HTTP11HTTPRequestV5VaporE26convertToFoundationRequest33_504D098B3B82A2272E473485AC6645FELL0F010URLRequestVyF4bodyL_AG4DataVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>request<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 39,
                "key.name" : "request",
                "key.namelength" : 7,
                "key.nameoffset" : 2122,
                "key.offset" : 2118,
                "key.parsed_declaration" : "var request = URLRequest(url: http.url)",
                "key.parsed_scope.end" : 60,
                "key.parsed_scope.start" : 60,
                "key.typename" : "URLRequest",
                "key.typeusr" : "$S10Foundation10URLRequestVD",
                "key.usr" : "s:4HTTP11HTTPRequestV5VaporE26convertToFoundationRequest33_504D098B3B82A2272E473485AC6645FELL0F010URLRequestVyF7requestL_AIvp"
              }
            ],
            "key.typename" : "(HTTPRequest) -> () -> URLRequest",
            "key.typeusr" : "$S10Foundation10URLRequestVycD",
            "key.usr" : "s:4HTTP11HTTPRequestV5VaporE26convertToFoundationRequest33_504D098B3B82A2272E473485AC6645FELL0F010URLRequestVyF"
          }
        ],
        "key.typename" : "HTTPRequest.Type",
        "key.typeusr" : "$S4HTTP11HTTPRequestVmD",
        "key.usr" : "s:4HTTP11HTTPRequestV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>struct HTTPResponse : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 2392
          }
        ],
        "key.bodylength" : 529,
        "key.bodyoffset" : 2424,
        "key.doc.declaration" : "struct HTTPResponse : HTTPMessage",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPClient` and `HTTPServer`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>HTTPResponse<\/Name><USR>s:4HTTP12HTTPResponseV<\/USR><Declaration>struct HTTPResponse : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>An HTTP response from a server back to the client.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let httpRes = HTTPResponse(status: .ok)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPClient<\/codeVoice> and <codeVoice>HTTPServer<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "HTTPResponse",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>HTTPResponse<\/decl.name> : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 554,
        "key.modulename" : "HTTP",
        "key.name" : "HTTPResponse",
        "key.namelength" : 12,
        "key.nameoffset" : 2410,
        "key.offset" : 2400,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>static func convertFromFoundationResponse(_ httpResponse: <Type usr=\"c:objc(cs)NSHTTPURLResponse\">HTTPURLResponse<\/Type>, data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>?, on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>) -&gt; <Type usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/Type><\/Declaration>",
            "key.bodylength" : 331,
            "key.bodyoffset" : 2620,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates an `HTTP.HTTPResponse` to `Foundation.URLResponse`",
            "key.doc.declaration" : "static func convertFromFoundationResponse(_ httpResponse: HTTPURLResponse, data: Data?, on worker: Worker) -> HTTPResponse",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift\" line=\"72\" column=\"17\"><Name>convertFromFoundationResponse(_:data:on:)<\/Name><USR>s:4HTTP12HTTPResponseV5VaporE29convertFromFoundationResponse33_504D098B3B82A2272E473485AC6645FELL_4data2onACSo17NSHTTPURLResponseC_0F04DataVSg3NIO14EventLoopGroup_ptFZ<\/USR><Declaration>static func convertFromFoundationResponse(_ httpResponse: HTTPURLResponse, data: Data?, on worker: Worker) -&gt; HTTPResponse<\/Declaration><CommentParts><Abstract><Para>Creates an <codeVoice>HTTP.HTTPResponse<\/codeVoice> to <codeVoice>Foundation.URLResponse<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 72,
            "key.doc.name" : "convertFromFoundationResponse(_:data:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 63,
            "key.docoffset" : 2429,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>convertFromFoundationResponse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>httpResponse<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSHTTPURLResponse\">HTTPURLResponse<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 456,
            "key.name" : "convertFromFoundationResponse(_:data:on:)",
            "key.namelength" : 94,
            "key.nameoffset" : 2508,
            "key.offset" : 2496,
            "key.parsed_declaration" : "static func convertFromFoundationResponse(_ httpResponse: HTTPURLResponse, data: Data?, on worker: Worker) -> HTTPResponse",
            "key.parsed_scope.end" : 81,
            "key.parsed_scope.start" : 72,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var res: <Type usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/FoundationClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>res<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 74,
                "key.name" : "res",
                "key.namelength" : 3,
                "key.nameoffset" : 2633,
                "key.offset" : 2629,
                "key.parsed_declaration" : "var res = HTTPResponse(status: .init(statusCode: httpResponse.statusCode))",
                "key.parsed_scope.end" : 73,
                "key.parsed_scope.start" : 73,
                "key.typename" : "HTTPResponse",
                "key.typeusr" : "$S4HTTP12HTTPResponseVD",
                "key.usr" : "s:4HTTP12HTTPResponseV5VaporE29convertFromFoundationResponse33_504D098B3B82A2272E473485AC6645FELL_4data2onACSo17NSHTTPURLResponseC_0F04DataVSg3NIO14EventLoopGroup_ptFZ3resL_ACvp"
              }
            ],
            "key.typename" : "(HTTPResponse.Type) -> (HTTPURLResponse, Data?, EventLoopGroup) -> HTTPResponse",
            "key.typeusr" : "$S_4data2on4HTTP12HTTPResponseVSo17NSHTTPURLResponseC_10Foundation4DataVSg3NIO14EventLoopGroup_ptcD",
            "key.usr" : "s:4HTTP12HTTPResponseV5VaporE29convertFromFoundationResponse33_504D098B3B82A2272E473485AC6645FELL_4data2onACSo17NSHTTPURLResponseC_0F04DataVSg3NIO14EventLoopGroup_ptFZ"
          }
        ],
        "key.typename" : "HTTPResponse.Type",
        "key.typeusr" : "$S4HTTP12HTTPResponseVmD",
        "key.usr" : "s:4HTTP12HTTPResponseV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 835,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct BootCommand : <Type usr=\"s:7CommandAAP\">Command<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 116
          }
        ],
        "key.bodylength" : 668,
        "key.bodyoffset" : 165,
        "key.doc.column" : 15,
        "key.doc.comment" : "Boots the `Application`'s providers then exits successfully.\n\n    $ swift run Run boot\n    Done.",
        "key.doc.declaration" : "public struct BootCommand : Command, ServiceType",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift\" line=\"6\" column=\"15\"><Name>BootCommand<\/Name><USR>s:5Vapor11BootCommandV<\/USR><Declaration>public struct BootCommand : Command, ServiceType<\/Declaration><CommentParts><Abstract><Para>Boots the <codeVoice>Application<\/codeVoice>’s providers then exits successfully.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[$ swift run Run boot]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[Done.]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 6,
        "key.doc.name" : "BootCommand",
        "key.doc.type" : "Class",
        "key.doclength" : 116,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 143
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 152
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>BootCommand<\/decl.name> : <ref.protocol usr=\"s:7CommandAAP\">Command<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Command"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 711,
        "key.name" : "BootCommand",
        "key.namelength" : 11,
        "key.nameoffset" : 130,
        "key.offset" : 123,
        "key.parsed_declaration" : "public struct BootCommand: Command, ServiceType",
        "key.parsed_scope.end" : 33,
        "key.parsed_scope.start" : 6,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor11BootCommandV\">BootCommand<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 197
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 274,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> BootCommand",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift\" line=\"8\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor11BootCommandV11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; BootCommand<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 170,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor11BootCommandV\">BootCommand<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 99,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 216,
            "key.offset" : 204,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> BootCommand",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [

            ],
            "key.typename" : "(BootCommand.Type) -> (Container) throws -> BootCommand",
            "key.typeusr" : "$S3for5Vapor11BootCommandV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor11BootCommandV11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var arguments: [<Type usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 332
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 373,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public var arguments: [CommandArgument] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift\" line=\"13\" column=\"16\"><Name>arguments<\/Name><USR>s:5Vapor11BootCommandV9argumentsSay0C00C8ArgumentVGvp<\/USR><Declaration>public var arguments: [CommandArgument] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 13,
            "key.doc.name" : "arguments",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 309,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 58,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 343,
            "key.offset" : 339,
            "key.overrides" : [
              {
                "key.usr" : "s:7CommandAAP9argumentsSayAA0A8ArgumentVGvp"
              }
            ],
            "key.parsed_declaration" : "public var arguments: [CommandArgument]",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 13,
            "key.typename" : "[CommandArgument]",
            "key.typeusr" : "$SSay7Command0A8ArgumentVGD",
            "key.usr" : "s:5Vapor11BootCommandV9argumentsSay0C00C8ArgumentVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var options: [<Type usr=\"s:7Command0A6OptionV\">CommandOption<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 426
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 463,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public var options: [CommandOption] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift\" line=\"18\" column=\"16\"><Name>options<\/Name><USR>s:5Vapor11BootCommandV7optionsSay0C00C6OptionVGvp<\/USR><Declaration>public var options: [CommandOption] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "options",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 403,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>options<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A6OptionV\">CommandOption<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 54,
            "key.name" : "options",
            "key.namelength" : 7,
            "key.nameoffset" : 437,
            "key.offset" : 433,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP7optionsSayAA0A6OptionVGvp"
              }
            ],
            "key.parsed_declaration" : "public var options: [CommandOption]",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 18,
            "key.typename" : "[CommandOption]",
            "key.typeusr" : "$SSay7Command0A6OptionVGD",
            "key.usr" : "s:5Vapor11BootCommandV7optionsSay0C00C6OptionVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let help: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 516
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public let help: [String]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift\" line=\"23\" column=\"16\"><Name>help<\/Name><USR>s:5Vapor11BootCommandV4helpSaySSGvp<\/USR><Declaration>public let help: [String]<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 23,
            "key.doc.name" : "help",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 493,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>help<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 59,
            "key.name" : "help",
            "key.namelength" : 4,
            "key.nameoffset" : 527,
            "key.offset" : 523,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP4helpSaySSGvp"
              }
            ],
            "key.parsed_declaration" : "public let help: [String] = [\"Boots the application's providers.\"]",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.typename" : "[String]",
            "key.typeusr" : "$SSaySSGD",
            "key.usr" : "s:5Vapor11BootCommandV4helpSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 624
              }
            ],
            "key.bodylength" : 1,
            "key.bodyoffset" : 639,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `BootCommand`.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift\" line=\"26\" column=\"12\"><Name>init()<\/Name><USR>s:5Vapor11BootCommandVACycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>BootCommand<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 26,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 32,
            "key.docoffset" : 588,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 10,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 631,
            "key.offset" : 631,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 26,
            "key.typename" : "(BootCommand.Type) -> () -> BootCommand",
            "key.typeusr" : "$S5Vapor11BootCommandVycD",
            "key.usr" : "s:5Vapor11BootCommandVACycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func run(using context: <Type usr=\"s:7Command0A7ContextV\">CommandContext<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 670
              }
            ],
            "key.bodylength" : 90,
            "key.bodyoffset" : 741,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public func run(using context: CommandContext) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift\" line=\"29\" column=\"17\"><Name>run(using:)<\/Name><USR>s:5Vapor11BootCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF<\/USR><Declaration>public func run(using context: CommandContext) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 29,
            "key.doc.name" : "run(using:)",
            "key.doc.type" : "Function",
            "key.doclength" : 19,
            "key.docoffset" : 647,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/BootCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>run<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Command0A7ContextV\">CommandContext<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 155,
            "key.name" : "run(using:)",
            "key.namelength" : 34,
            "key.nameoffset" : 682,
            "key.offset" : 677,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP3run5using3NIO15EventLoopFutureCyytGAA0A7ContextV_tKF"
              }
            ],
            "key.parsed_declaration" : "public func run(using context: CommandContext) throws -> Future<Void>",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 29,
            "key.substructure" : [

            ],
            "key.typename" : "(BootCommand) -> (CommandContext) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$S5using3NIO15EventLoopFutureCyytG7Command0F7ContextV_tKcD",
            "key.usr" : "s:5Vapor11BootCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF"
          }
        ],
        "key.typename" : "BootCommand.Type",
        "key.typeusr" : "$S5Vapor11BootCommandVmD",
        "key.usr" : "s:5Vapor11BootCommandV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/CommandConfig+Default.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 549,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct CommandConfig : <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 522,
        "key.bodyoffset" : 25,
        "key.doc.declaration" : "struct CommandConfig : Service",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>CommandConfig<\/Name><USR>s:7Command0A6ConfigV<\/USR><Declaration>struct CommandConfig : Service<\/Declaration><CommentParts><Abstract><Para>Configures commands for a service container.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var commandConfig = CommandConfig.default()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/\/ You can register command types that will be lazily created]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[commandConfig.use(FooCommand.self, as: \"foo\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/\/ \u0010You can also register pre-initialized instances of a command]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[commandConfig.use(barCommand, as: \"bar\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(commandConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "CommandConfig",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CommandConfig<\/decl.name> : <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 548,
        "key.modulename" : "Command",
        "key.name" : "CommandConfig",
        "key.namelength" : 13,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`() -&gt; <Type usr=\"s:7Command0A6ConfigV\">CommandConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 262
              }
            ],
            "key.bodylength" : 234,
            "key.bodyoffset" : 311,
            "key.doc.column" : 24,
            "key.doc.comment" : "Creates a `CommandConfig` containing all of Vapor's default commands.\n\n    var commandConfig = CommandConfig.default()\n    \/\/ add other commands...\n    services.register(commandConfig)",
            "key.doc.declaration" : "public static func `default`() -> CommandConfig",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/CommandConfig+Default.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/CommandConfig+Default.swift\" line=\"8\" column=\"24\"><Name>default()<\/Name><USR>s:7Command0A6ConfigV5VaporE7defaultACyFZ<\/USR><Declaration>public static func `default`() -&gt; CommandConfig<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>CommandConfig<\/codeVoice> containing all of Vapor’s default commands.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var commandConfig = CommandConfig.default()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ add other commands...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(commandConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "default()",
            "key.doc.type" : "Function",
            "key.doclength" : 228,
            "key.docoffset" : 30,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/CommandConfig+Default.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:7Command0A6ConfigV\">CommandConfig<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 277,
            "key.name" : "default()",
            "key.namelength" : 11,
            "key.nameoffset" : 281,
            "key.offset" : 269,
            "key.parsed_declaration" : "public static func `default`() -> CommandConfig",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var config: <Type usr=\"s:7Command0A6ConfigV\">CommandConfig<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/CommandConfig+Default.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>config<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Command0A6ConfigV\">CommandConfig<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 28,
                "key.name" : "config",
                "key.namelength" : 6,
                "key.nameoffset" : 324,
                "key.offset" : 320,
                "key.parsed_declaration" : "var config = CommandConfig()",
                "key.parsed_scope.end" : 9,
                "key.parsed_scope.start" : 9,
                "key.typename" : "CommandConfig",
                "key.typeusr" : "$S7Command0A6ConfigVD",
                "key.usr" : "s:7Command0A6ConfigV5VaporE7defaultACyFZ6configL_ACvp"
              }
            ],
            "key.typename" : "(CommandConfig.Type) -> () -> CommandConfig",
            "key.typeusr" : "$S7Command0A6ConfigVycD",
            "key.usr" : "s:7Command0A6ConfigV5VaporE7defaultACyFZ"
          }
        ],
        "key.typename" : "CommandConfig.Type",
        "key.typeusr" : "$S7Command0A6ConfigVmD",
        "key.usr" : "s:7Command0A6ConfigV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4385,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct RoutesCommand : <Type usr=\"s:7CommandAAP\">Command<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 580
          }
        ],
        "key.bodylength" : 3583,
        "key.bodyoffset" : 631,
        "key.doc.column" : 15,
        "key.doc.comment" : "Displays all routes registered to the `Application`'s `Router` in an ASCII-formatted table.\n\n    $ swift run Run routes\n    +------+------------------+\n    | GET  | \/search          |\n    +------+------------------+\n    | GET  | \/hash\/:string    |\n    +------+------------------+\n\nA colon preceding a path component indicates a variable parameter. A colon with no text following\nis a parameter whose result will be discarded.\n\nAn asterisk indicates a catch-all. Any path components after a catch-all will be discarded and ignored.",
        "key.doc.declaration" : "public struct RoutesCommand : Command, ServiceType",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A colon preceding a path component indicates a variable parameter. A colon with no text following is a parameter whose result will be discarded."
          },
          {
            "Para" : "An asterisk indicates a catch-all. Any path components after a catch-all will be discarded and ignored."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift\" line=\"14\" column=\"15\"><Name>RoutesCommand<\/Name><USR>s:5Vapor13RoutesCommandV<\/USR><Declaration>public struct RoutesCommand : Command, ServiceType<\/Declaration><CommentParts><Abstract><Para>Displays all routes registered to the <codeVoice>Application<\/codeVoice>’s <codeVoice>Router<\/codeVoice> in an ASCII-formatted table.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[$ swift run Run routes]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[+------+------------------+]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[| GET  | \/search          |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[+------+------------------+]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[| GET  | \/hash\/:string    |]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[+------+------------------+]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A colon preceding a path component indicates a variable parameter. A colon with no text following is a parameter whose result will be discarded.<\/Para><Para>An asterisk indicates a catch-all. Any path components after a catch-all will be discarded and ignored.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 14,
        "key.doc.name" : "RoutesCommand",
        "key.doc.type" : "Class",
        "key.doclength" : 580,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 609
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 618
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>RoutesCommand<\/decl.name> : <ref.protocol usr=\"s:7CommandAAP\">Command<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Command"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 3628,
        "key.name" : "RoutesCommand",
        "key.namelength" : 13,
        "key.nameoffset" : 594,
        "key.offset" : 587,
        "key.parsed_declaration" : "public struct RoutesCommand: Command, ServiceType",
        "key.parsed_scope.end" : 137,
        "key.parsed_scope.start" : 14,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor13RoutesCommandV\">RoutesCommand<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 663
              }
            ],
            "key.bodylength" : 64,
            "key.bodyoffset" : 745,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for container: Container) throws -> RoutesCommand",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift\" line=\"16\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor13RoutesCommandV11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for container: Container) throws -&gt; RoutesCommand<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 16,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 636,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor13RoutesCommandV\">RoutesCommand<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 140,
            "key.name" : "makeService(for:)",
            "key.namelength" : 37,
            "key.nameoffset" : 682,
            "key.offset" : 670,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for container: Container) throws -> RoutesCommand",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 16,
            "key.substructure" : [

            ],
            "key.typename" : "(RoutesCommand.Type) -> (Container) throws -> RoutesCommand",
            "key.typeusr" : "$S3for5Vapor13RoutesCommandV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor13RoutesCommandV11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var arguments: [<Type usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 839
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 880,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public var arguments: [CommandArgument] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift\" line=\"21\" column=\"16\"><Name>arguments<\/Name><USR>s:5Vapor13RoutesCommandV9argumentsSay0C00C8ArgumentVGvp<\/USR><Declaration>public var arguments: [CommandArgument] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 21,
            "key.doc.name" : "arguments",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 816,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 58,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 850,
            "key.offset" : 846,
            "key.overrides" : [
              {
                "key.usr" : "s:7CommandAAP9argumentsSayAA0A8ArgumentVGvp"
              }
            ],
            "key.parsed_declaration" : "public var arguments: [CommandArgument]",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 21,
            "key.typename" : "[CommandArgument]",
            "key.typeusr" : "$SSay7Command0A8ArgumentVGD",
            "key.usr" : "s:5Vapor13RoutesCommandV9argumentsSay0C00C8ArgumentVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var options: [<Type usr=\"s:7Command0A6OptionV\">CommandOption<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 933
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 970,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public var options: [CommandOption] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift\" line=\"26\" column=\"16\"><Name>options<\/Name><USR>s:5Vapor13RoutesCommandV7optionsSay0C00C6OptionVGvp<\/USR><Declaration>public var options: [CommandOption] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 26,
            "key.doc.name" : "options",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 910,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>options<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A6OptionV\">CommandOption<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 54,
            "key.name" : "options",
            "key.namelength" : 7,
            "key.nameoffset" : 944,
            "key.offset" : 940,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP7optionsSayAA0A6OptionVGvp"
              }
            ],
            "key.parsed_declaration" : "public var options: [CommandOption]",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 26,
            "key.typename" : "[CommandOption]",
            "key.typeusr" : "$SSay7Command0A6OptionVGD",
            "key.usr" : "s:5Vapor13RoutesCommandV7optionsSay0C00C6OptionVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var help: [<Type usr=\"s:SS\">String<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1023
              }
            ],
            "key.bodylength" : 56,
            "key.bodyoffset" : 1050,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public var help: [String] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift\" line=\"31\" column=\"16\"><Name>help<\/Name><USR>s:5Vapor13RoutesCommandV4helpSaySSGvp<\/USR><Declaration>public var help: [String] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 31,
            "key.doc.name" : "help",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 1000,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>help<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 77,
            "key.name" : "help",
            "key.namelength" : 4,
            "key.nameoffset" : 1034,
            "key.offset" : 1030,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP4helpSaySSGvp"
              }
            ],
            "key.parsed_declaration" : "public var help: [String]",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 31,
            "key.typename" : "[String]",
            "key.typeusr" : "$SSaySSGD",
            "key.usr" : "s:5Vapor13RoutesCommandV4helpSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1158
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "`Router` to use for printing routes.",
            "key.doc.declaration" : "private let router: Router",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift\" line=\"36\" column=\"17\"><Name>router<\/Name><USR>s:5Vapor13RoutesCommandV6router33_FF7071E7F025D8C7F78C47AB4E393079LLAA6Router_pvp<\/USR><Declaration>private let router: Router<\/Declaration><CommentParts><Abstract><Para><codeVoice>Router<\/codeVoice> to use for printing routes.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 36,
            "key.doc.name" : "router",
            "key.doc.type" : "Other",
            "key.doclength" : 41,
            "key.docoffset" : 1113,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>router<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "router",
            "key.namelength" : 6,
            "key.nameoffset" : 1170,
            "key.offset" : 1166,
            "key.parsed_declaration" : "private let router: Router",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 36,
            "key.typename" : "Router",
            "key.typeusr" : "$S5Vapor6Router_pD",
            "key.usr" : "s:5Vapor13RoutesCommandV6router33_FF7071E7F025D8C7F78C47AB4E393079LLAA6Router_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1228
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 1257,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `RoutesCommand`.",
            "key.doc.declaration" : "public init(router: Router)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift\" line=\"39\" column=\"12\"><Name>init(router:)<\/Name><USR>s:5Vapor13RoutesCommandV6routerAcA6Router_p_tcfc<\/USR><Declaration>public init(router: Router)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>RoutesCommand<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 39,
            "key.doc.name" : "init(router:)",
            "key.doc.type" : "Function",
            "key.doclength" : 34,
            "key.docoffset" : 1190,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>router<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 57,
            "key.name" : "init(router:)",
            "key.namelength" : 20,
            "key.nameoffset" : 1235,
            "key.offset" : 1235,
            "key.parsed_declaration" : "public init(router: Router)",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 39,
            "key.substructure" : [

            ],
            "key.typename" : "(RoutesCommand.Type) -> (Router) -> RoutesCommand",
            "key.typeusr" : "$S6router5Vapor13RoutesCommandVAB6Router_p_tcD",
            "key.usr" : "s:5Vapor13RoutesCommandV6routerAcA6Router_p_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func run(using context: <Type usr=\"s:7Command0A7ContextV\">CommandContext<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1321
              }
            ],
            "key.bodylength" : 2820,
            "key.bodyoffset" : 1392,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public func run(using context: CommandContext) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift\" line=\"44\" column=\"17\"><Name>run(using:)<\/Name><USR>s:5Vapor13RoutesCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF<\/USR><Declaration>public func run(using context: CommandContext) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 44,
            "key.doc.name" : "run(using:)",
            "key.doc.type" : "Function",
            "key.doclength" : 19,
            "key.docoffset" : 1298,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>run<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Command0A7ContextV\">CommandContext<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 2885,
            "key.name" : "run(using:)",
            "key.namelength" : 34,
            "key.nameoffset" : 1333,
            "key.offset" : 1328,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP3run5using3NIO15EventLoopFutureCyytGAA0A7ContextV_tKF"
              }
            ],
            "key.parsed_declaration" : "public func run(using context: CommandContext) throws -> Future<Void>",
            "key.parsed_scope.end" : 136,
            "key.parsed_scope.start" : 44,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let console: <Type usr=\"s:7ConsoleAAP\">Console<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>console<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7ConsoleAAP\">Console<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 29,
                "key.name" : "console",
                "key.namelength" : 7,
                "key.nameoffset" : 1405,
                "key.offset" : 1401,
                "key.parsed_declaration" : "let console = context.console",
                "key.parsed_scope.end" : 45,
                "key.parsed_scope.start" : 45,
                "key.typename" : "Console",
                "key.typeusr" : "$S7ConsoleAA_pD",
                "key.usr" : "s:5Vapor13RoutesCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF7consoleL_7ConsoleAN_pvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var longestMethod: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>longestMethod<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 21,
                "key.name" : "longestMethod",
                "key.namelength" : 13,
                "key.nameoffset" : 1452,
                "key.offset" : 1448,
                "key.parsed_declaration" : "var longestMethod = 0",
                "key.parsed_scope.end" : 47,
                "key.parsed_scope.start" : 47,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor13RoutesCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF13longestMethodL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>var longestPath: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>longestPath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 19,
                "key.name" : "longestPath",
                "key.namelength" : 11,
                "key.nameoffset" : 1482,
                "key.offset" : 1478,
                "key.parsed_declaration" : "var longestPath = 0",
                "key.parsed_scope.end" : 48,
                "key.parsed_scope.start" : 48,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor13RoutesCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF11longestPathL_Sivp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>func hr()<\/Declaration>",
                "key.bodylength" : 348,
                "key.bodyoffset" : 2330,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
                "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>hr<\/decl.name>()<\/decl.function.free>",
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.length" : 360,
                "key.name" : "hr()",
                "key.namelength" : 4,
                "key.nameoffset" : 2324,
                "key.offset" : 2319,
                "key.parsed_declaration" : "func hr()",
                "key.parsed_scope.end" : 87,
                "key.parsed_scope.start" : 77,
                "key.substructure" : [

                ],
                "key.typename" : "() -> ()",
                "key.typeusr" : "$SyycD",
                "key.usr" : "s:5Vapor13RoutesCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF2hrL_yyF"
              }
            ],
            "key.typename" : "(RoutesCommand) -> (CommandContext) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$S5using3NIO15EventLoopFutureCyytG7Command0F7ContextV_tKcD",
            "key.usr" : "s:5Vapor13RoutesCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF"
          }
        ],
        "key.typename" : "RoutesCommand.Type",
        "key.typeusr" : "$S5Vapor13RoutesCommandVmD",
        "key.usr" : "s:5Vapor13RoutesCommandV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>struct Data : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type>, <Type usr=\"s:Sk\">RandomAccessCollection<\/Type>, <Type usr=\"s:SM\">MutableCollection<\/Type>, <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 4217
          }
        ],
        "key.bodylength" : 142,
        "key.bodyoffset" : 4241,
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Data<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol>, <ref.protocol usr=\"s:Sk\">RandomAccessCollection<\/ref.protocol>, <ref.protocol usr=\"s:SM\">MutableCollection<\/ref.protocol>, <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 159,
        "key.modulename" : "Foundation",
        "key.name" : "Data",
        "key.namelength" : 4,
        "key.nameoffset" : 4235,
        "key.offset" : 4225,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>var string: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 76,
            "key.bodyoffset" : 4305,
            "key.doc.column" : 9,
            "key.doc.comment" : "Converts `Data` to a `String`.",
            "key.doc.declaration" : "var string: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift\" line=\"141\" column=\"9\"><Name>string<\/Name><USR>s:10Foundation4DataV5VaporE6string33_FF7071E7F025D8C7F78C47AB4E393079LLSSvp<\/USR><Declaration>var string: String { get }<\/Declaration><CommentParts><Abstract><Para>Converts <codeVoice>Data<\/codeVoice> to a <codeVoice>String<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 141,
            "key.doc.name" : "string",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 4246,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/RoutesCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>string<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 97,
            "key.name" : "string",
            "key.namelength" : 6,
            "key.nameoffset" : 4289,
            "key.offset" : 4285,
            "key.parsed_declaration" : "var string: String",
            "key.parsed_scope.end" : 143,
            "key.parsed_scope.start" : 141,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:10Foundation4DataV5VaporE6string33_FF7071E7F025D8C7F78C47AB4E393079LLSSvp"
          }
        ],
        "key.typename" : "Data.Type",
        "key.typeusr" : "$S10Foundation4DataVmD",
        "key.usr" : "s:10Foundation4DataV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1705,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ServeCommand : <Type usr=\"s:7CommandAAP\">Command<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 149
          }
        ],
        "key.bodylength" : 1504,
        "key.bodyoffset" : 199,
        "key.doc.column" : 15,
        "key.doc.comment" : "Starts serving the `Application`'s `Responder` over HTTP.\n\n    $ swift run Run serve\n    Server starting on http:\/\/localhost:8080",
        "key.doc.declaration" : "public struct ServeCommand : Command, ServiceType",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift\" line=\"6\" column=\"15\"><Name>ServeCommand<\/Name><USR>s:5Vapor12ServeCommandV<\/USR><Declaration>public struct ServeCommand : Command, ServiceType<\/Declaration><CommentParts><Abstract><Para>Starts serving the <codeVoice>Application<\/codeVoice>’s <codeVoice>Responder<\/codeVoice> over HTTP.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[$ swift run Run serve]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[Server starting on http:\/\/localhost:8080]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 6,
        "key.doc.name" : "ServeCommand",
        "key.doc.type" : "Class",
        "key.doclength" : 149,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 177
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 186
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ServeCommand<\/decl.name> : <ref.protocol usr=\"s:7CommandAAP\">Command<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Command"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1548,
        "key.name" : "ServeCommand",
        "key.namelength" : 12,
        "key.nameoffset" : 163,
        "key.offset" : 156,
        "key.parsed_declaration" : "public struct ServeCommand: Command, ServiceType",
        "key.parsed_scope.end" : 48,
        "key.parsed_scope.start" : 6,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor12ServeCommandV\">ServeCommand<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 231
              }
            ],
            "key.bodylength" : 63,
            "key.bodyoffset" : 312,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for container: Container) throws -> ServeCommand",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift\" line=\"8\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor12ServeCommandV11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for container: Container) throws -&gt; ServeCommand<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 204,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor12ServeCommandV\">ServeCommand<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 138,
            "key.name" : "makeService(for:)",
            "key.namelength" : 37,
            "key.nameoffset" : 250,
            "key.offset" : 238,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for container: Container) throws -> ServeCommand",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [

            ],
            "key.typename" : "(ServeCommand.Type) -> (Container) throws -> ServeCommand",
            "key.typeusr" : "$S3for5Vapor12ServeCommandV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor12ServeCommandV11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var arguments: [<Type usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 405
              }
            ],
            "key.bodylength" : 23,
            "key.bodyoffset" : 446,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public var arguments: [CommandArgument] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift\" line=\"13\" column=\"16\"><Name>arguments<\/Name><USR>s:5Vapor12ServeCommandV9argumentsSay0C00C8ArgumentVGvp<\/USR><Declaration>public var arguments: [CommandArgument] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 13,
            "key.doc.name" : "arguments",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 382,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A8ArgumentV\">CommandArgument<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 58,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 416,
            "key.offset" : 412,
            "key.overrides" : [
              {
                "key.usr" : "s:7CommandAAP9argumentsSayAA0A8ArgumentVGvp"
              }
            ],
            "key.parsed_declaration" : "public var arguments: [CommandArgument]",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 13,
            "key.typename" : "[CommandArgument]",
            "key.typeusr" : "$SSay7Command0A8ArgumentVGD",
            "key.usr" : "s:5Vapor12ServeCommandV9argumentsSay0C00C8ArgumentVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var options: [<Type usr=\"s:7Command0A6OptionV\">CommandOption<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 499
              }
            ],
            "key.bodylength" : 337,
            "key.bodyoffset" : 536,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public var options: [CommandOption] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift\" line=\"18\" column=\"16\"><Name>options<\/Name><USR>s:5Vapor12ServeCommandV7optionsSay0C00C6OptionVGvp<\/USR><Declaration>public var options: [CommandOption] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "options",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 476,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>options<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Command0A6OptionV\">CommandOption<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 368,
            "key.name" : "options",
            "key.namelength" : 7,
            "key.nameoffset" : 510,
            "key.offset" : 506,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP7optionsSayAA0A6OptionVGvp"
              }
            ],
            "key.parsed_declaration" : "public var options: [CommandOption]",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 18,
            "key.typename" : "[CommandOption]",
            "key.typeusr" : "$SSay7Command0A6OptionVGD",
            "key.usr" : "s:5Vapor12ServeCommandV7optionsSay0C00C6OptionVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let help: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 903
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public let help: [String]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift\" line=\"27\" column=\"16\"><Name>help<\/Name><USR>s:5Vapor12ServeCommandV4helpSaySSGvp<\/USR><Declaration>public let help: [String]<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 27,
            "key.doc.name" : "help",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 880,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>help<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 58,
            "key.name" : "help",
            "key.namelength" : 4,
            "key.nameoffset" : 914,
            "key.offset" : 910,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP4helpSaySSGvp"
              }
            ],
            "key.parsed_declaration" : "public let help: [String] = [\"Begins serving the app over HTTP.\"]",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 27,
            "key.typename" : "[String]",
            "key.typeusr" : "$SSaySSGD",
            "key.usr" : "s:5Vapor12ServeCommandV4helpSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let server: <Type usr=\"s:5Vapor6ServerP\">Server<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1002
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The server to boot.",
            "key.doc.declaration" : "private let server: Server",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift\" line=\"30\" column=\"17\"><Name>server<\/Name><USR>s:5Vapor12ServeCommandV6server33_880BAA49ABA183BB2D64E4052AE250E1LLAA6Server_pvp<\/USR><Declaration>private let server: Server<\/Declaration><CommentParts><Abstract><Para>The server to boot.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 30,
            "key.doc.name" : "server",
            "key.doc.type" : "Other",
            "key.doclength" : 24,
            "key.docoffset" : 974,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>server<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor6ServerP\">Server<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "server",
            "key.namelength" : 6,
            "key.nameoffset" : 1014,
            "key.offset" : 1010,
            "key.parsed_declaration" : "private let server: Server",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 30,
            "key.typename" : "Server",
            "key.typeusr" : "$S5Vapor6Server_pD",
            "key.usr" : "s:5Vapor12ServeCommandV6server33_880BAA49ABA183BB2D64E4052AE250E1LLAA6Server_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(server: <Type usr=\"s:5Vapor6ServerP\">Server<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1071
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 1100,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `ServeCommand`.",
            "key.doc.declaration" : "public init(server: Server)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift\" line=\"33\" column=\"12\"><Name>init(server:)<\/Name><USR>s:5Vapor12ServeCommandV6serverAcA6Server_p_tcfc<\/USR><Declaration>public init(server: Server)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>ServeCommand<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 33,
            "key.doc.name" : "init(server:)",
            "key.doc.type" : "Function",
            "key.doclength" : 33,
            "key.docoffset" : 1034,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>server<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6ServerP\">Server<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 57,
            "key.name" : "init(server:)",
            "key.namelength" : 20,
            "key.nameoffset" : 1078,
            "key.offset" : 1078,
            "key.parsed_declaration" : "public init(server: Server)",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 33,
            "key.substructure" : [

            ],
            "key.typename" : "(ServeCommand.Type) -> (Server) -> ServeCommand",
            "key.typeusr" : "$S6server5Vapor12ServeCommandVAB6Server_p_tcD",
            "key.usr" : "s:5Vapor12ServeCommandV6serverAcA6Server_p_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func run(using context: <Type usr=\"s:7Command0A7ContextV\">CommandContext<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1164
              }
            ],
            "key.bodylength" : 466,
            "key.bodyoffset" : 1235,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Command`.",
            "key.doc.declaration" : "public func run(using context: CommandContext) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift\" line=\"38\" column=\"17\"><Name>run(using:)<\/Name><USR>s:5Vapor12ServeCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF<\/USR><Declaration>public func run(using context: CommandContext) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Command<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 38,
            "key.doc.name" : "run(using:)",
            "key.doc.type" : "Function",
            "key.doclength" : 19,
            "key.docoffset" : 1141,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Commands\/ServeCommand.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>run<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>context<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:7Command0A7ContextV\">CommandContext<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 531,
            "key.name" : "run(using:)",
            "key.namelength" : 34,
            "key.nameoffset" : 1176,
            "key.offset" : 1171,
            "key.overrides" : [
              {
                "key.usr" : "s:7Command0A8RunnableP3run5using3NIO15EventLoopFutureCyytGAA0A7ContextV_tKF"
              }
            ],
            "key.parsed_declaration" : "public func run(using context: CommandContext) throws -> Future<Void>",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 38,
            "key.substructure" : [

            ],
            "key.typename" : "(ServeCommand) -> (CommandContext) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$S5using3NIO15EventLoopFutureCyytG7Command0F7ContextV_tKcD",
            "key.usr" : "s:5Vapor12ServeCommandV3run5using3NIO15EventLoopFutureCyytG0C00C7ContextV_tKF"
          }
        ],
        "key.typename" : "ServeCommand.Type",
        "key.typeusr" : "$S5Vapor12ServeCommandVmD",
        "key.usr" : "s:5Vapor12ServeCommandV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4995,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Content : <Type usr=\"s:Se\">Decodable<\/Type>, <Type usr=\"s:SE\">Encodable<\/Type>, <Type usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/Type>, <Type usr=\"s:5Vapor16RequestEncodableP\">RequestEncodable<\/Type>, <Type usr=\"s:5Vapor17ResponseDecodableP\">ResponseDecodable<\/Type>, <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 497
          }
        ],
        "key.bodylength" : 748,
        "key.bodyoffset" : 564,
        "key.doc.column" : 17,
        "key.doc.comment" : "Convertible to \/ from content in an HTTP message.\n\nConformance to this protocol consists of:\n- `ResponseEncodable`\n- `ResponseDecodable`\n- `RequestEncodable`\n- `RequestDecodable`\n\nIf adding conformance in an extension, you must ensure the type already exists to `Codable`.\n\n    struct Hello: Content {\n        let message = \"Hello!\"\n    }\n\n    router.get(\"greeting\") { req in\n        return Hello() \/\/ {\"message\":\"Hello!\"}\n    }",
        "key.doc.declaration" : "public protocol Content : Decodable, Encodable, RequestDecodable, RequestEncodable, ResponseDecodable, ResponseEncodable",
        "key.doc.discussion" : [
          {
            "Para" : "Conformance to this protocol consists of:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "If adding conformance in an extension, you must ensure the type already exists to `Codable`."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"19\" column=\"17\"><Name>Content<\/Name><USR>s:5Vapor7ContentP<\/USR><Declaration>public protocol Content : Decodable, Encodable, RequestDecodable, RequestEncodable, ResponseDecodable, ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Convertible to \/ from content in an HTTP message.<\/Para><\/Abstract><Discussion><Para>Conformance to this protocol consists of:<\/Para><List-Bullet><Item><Para><codeVoice>ResponseEncodable<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>ResponseDecodable<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>RequestEncodable<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>RequestDecodable<\/codeVoice><\/Para><\/Item><\/List-Bullet><Para>If adding conformance in an extension, you must ensure the type already exists to <codeVoice>Codable<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Hello: Content {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let message = \"Hello!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[router.get(\"greeting\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return Hello() \/\/ {\"message\":\"Hello!\"}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 19,
        "key.doc.name" : "Content",
        "key.doc.type" : "Class",
        "key.doclength" : 497,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 522
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 531
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 14,
            "key.offset" : 548
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Content<\/decl.name> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol>, <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor16RequestEncodableP\">RequestEncodable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor17ResponseDecodableP\">ResponseDecodable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Codable"
          },
          {
            "key.name" : "ResponseCodable"
          },
          {
            "key.name" : "RequestCodable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 809,
        "key.name" : "Content",
        "key.namelength" : 7,
        "key.nameoffset" : 513,
        "key.offset" : 504,
        "key.parsed_declaration" : "public protocol Content: Codable, ResponseCodable, RequestCodable",
        "key.parsed_scope.end" : 40,
        "key.parsed_scope.start" : 19,
        "key.runtime_name" : "_TtP4main7Content_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1305,
            "key.doc.column" : 16,
            "key.doc.comment" : "The default `MediaType` to use when _encoding_ content. This can always be overridden at the encode call.\n\nDefault implementation is `MediaType.json` for all types.\n\n    struct Hello: Content {\n        static let defaultContentType = .urlEncodedForm\n        let message = \"Hello!\"\n    }\n\n    router.get(\"greeting\") { req in\n        return Hello() \/\/ message=Hello!\n    }\n\n    router.get(\"greeting2\") { req in\n        let res = req.makeResponse()\n        try res.content.encode(Hello(), as: .json)\n        return res \/\/ {\"message\":\"Hello!\"}\n    }",
            "key.doc.declaration" : "static var defaultContentType: MediaType { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Default implementation is `MediaType.json` for all types."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"39\" column=\"16\"><Name>defaultContentType<\/Name><USR>s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ<\/USR><Declaration>static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>The default <codeVoice>MediaType<\/codeVoice> to use when <emphasis>encoding<\/emphasis> content. This can always be overridden at the encode call.<\/Para><\/Abstract><Discussion><Para>Default implementation is <codeVoice>MediaType.json<\/codeVoice> for all types.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Hello: Content {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    static let defaultContentType = .urlEncodedForm]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let message = \"Hello!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[router.get(\"greeting\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return Hello() \/\/ message=Hello!]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[router.get(\"greeting2\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let res = req.makeResponse()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try res.content.encode(Hello(), as: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return res \/\/ {\"message\":\"Hello!\"}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 39,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 690,
            "key.docoffset" : 569,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 48,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 1274,
            "key.offset" : 1263,
            "key.parsed_declaration" : "static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 39,
            "key.parsed_scope.start" : 39,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor7ContentPAAE07defaultB4Type4Core05MediaD0VvpZ\">defaultContentType<\/RelatedName>"
              }
            ],
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
          }
        ],
        "key.typename" : "Content.Protocol",
        "key.typeusr" : "$S5Vapor7Content_pmD",
        "key.usr" : "s:5Vapor7ContentP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol Content : <Type usr=\"s:Se\">Decodable<\/Type>, <Type usr=\"s:SE\">Encodable<\/Type>, <Type usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/Type>, <Type usr=\"s:5Vapor16RequestEncodableP\">RequestEncodable<\/Type>, <Type usr=\"s:5Vapor17ResponseDecodableP\">ResponseDecodable<\/Type>, <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
        "key.bodylength" : 1284,
        "key.bodyoffset" : 1369,
        "key.doc.column" : 17,
        "key.doc.comment" : "MARK: Default Implementations",
        "key.doc.declaration" : "public protocol Content : Decodable, Encodable, RequestDecodable, RequestEncodable, ResponseDecodable, ResponseEncodable",
        "key.doc.discussion" : [
          {
            "Para" : "Conformance to this protocol consists of:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "If adding conformance in an extension, you must ensure the type already exists to `Codable`."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"19\" column=\"17\"><Name>Content<\/Name><USR>s:5Vapor7ContentP<\/USR><Declaration>public protocol Content : Decodable, Encodable, RequestDecodable, RequestEncodable, ResponseDecodable, ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Convertible to \/ from content in an HTTP message.<\/Para><\/Abstract><Discussion><Para>Conformance to this protocol consists of:<\/Para><List-Bullet><Item><Para><codeVoice>ResponseEncodable<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>ResponseDecodable<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>RequestEncodable<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>RequestDecodable<\/codeVoice><\/Para><\/Item><\/List-Bullet><Para>If adding conformance in an extension, you must ensure the type already exists to <codeVoice>Codable<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Hello: Content {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let message = \"Hello!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[router.get(\"greeting\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return Hello() \/\/ {\"message\":\"Hello!\"}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 19,
        "key.doc.name" : "Content",
        "key.doc.type" : "Class",
        "key.doclength" : 34,
        "key.docoffset" : 1315,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Content<\/decl.name> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol>, <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor16RequestEncodableP\">RequestEncodable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor17ResponseDecodableP\">ResponseDecodable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1304,
        "key.name" : "Content",
        "key.namelength" : 7,
        "key.nameoffset" : 1360,
        "key.offset" : 1350,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1471
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 1520,
            "key.doc.column" : 23,
            "key.doc.comment" : "Default implementation is `MediaType.json` for all types.\n\nSee `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.discussion" : [
              {
                "Para" : "See `Content`."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"48\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:5Vapor7ContentPAAE07defaultB4Type4Core05MediaD0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>Default implementation is <codeVoice>MediaType.json<\/codeVoice> for all types.<\/Para><\/Abstract><Discussion><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 48,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 93,
            "key.docoffset" : 1374,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 69,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 1489,
            "key.offset" : 1478,
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 48,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ\">defaultContentType<\/RelatedName>"
              }
            ],
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:5Vapor7ContentPAAE07defaultB4Type4Core05MediaD0VvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(using container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1641
              }
            ],
            "key.bodylength" : 135,
            "key.bodyoffset" : 1715,
            "key.doc.column" : 17,
            "key.doc.comment" : "Default `RequestEncodable` conformance.\n\nSee `RequestEncodable`.",
            "key.doc.declaration" : "public func encode(using container: Container) throws -> Future<Request>",
            "key.doc.discussion" : [
              {
                "Para" : "See `RequestEncodable`."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"55\" column=\"17\"><Name>encode(using:)<\/Name><USR>s:5Vapor7ContentPAAE6encode5using3NIO15EventLoopFutureCyAA7RequestCG7Service9Container_p_tKF<\/USR><Declaration>public func encode(using container: Container) throws -&gt; Future&lt;Request&gt;<\/Declaration><CommentParts><Abstract><Para>Default <codeVoice>RequestEncodable<\/codeVoice> conformance.<\/Para><\/Abstract><Discussion><Para>See <codeVoice>RequestEncodable<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 55,
            "key.doc.name" : "encode(using:)",
            "key.doc.type" : "Function",
            "key.doclength" : 84,
            "key.docoffset" : 1553,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 203,
            "key.name" : "encode(using:)",
            "key.namelength" : 34,
            "key.nameoffset" : 1653,
            "key.offset" : 1648,
            "key.parsed_declaration" : "public func encode(using container: Container) throws -> Future<Request>",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 55,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor7ContentPAAE6encode3for3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF\">encode(for: Request) throws -&gt; Future&lt;Response&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16RequestEncodableP6encode5using3NIO15EventLoopFutureCyAA0B0CG7Service9Container_p_tKF\">encode(using: Container) throws -&gt; Future&lt;Request&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF\">encode(for: Request) throws -&gt; Future&lt;Response&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor17ResponseEncodablePAAE6encode6status7headers3for3NIO15EventLoopFutureCyAA0B0CG8NIOHTTP118HTTPResponseStatusO_AN11HTTPHeadersVAA7RequestCtF\">encode(status:headers:for:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SE6encode2toys7Encoder_p_tKF\">encode(to:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>req<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 35,
                "key.name" : "req",
                "key.namelength" : 3,
                "key.nameoffset" : 1728,
                "key.offset" : 1724,
                "key.parsed_declaration" : "let req = Request(using: container)",
                "key.parsed_scope.end" : 56,
                "key.parsed_scope.start" : 56,
                "key.typename" : "Request",
                "key.typeusr" : "$S5Vapor7RequestCD",
                "key.usr" : "s:5Vapor7ContentPAAE6encode5using3NIO15EventLoopFutureCyAA7RequestCG7Service9Container_p_tKF3reqL_AJvp"
              }
            ],
            "key.typename" : "<Self where Self : Content> (Self) -> (Container) throws -> EventLoopFuture<Request>",
            "key.typeusr" : "$S5using3NIO15EventLoopFutureCy5Vapor7RequestCG7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor7ContentPAAE6encode5using3NIO15EventLoopFutureCyAA7RequestCG7Service9Container_p_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1947
              }
            ],
            "key.bodylength" : 122,
            "key.bodyoffset" : 2012,
            "key.doc.column" : 17,
            "key.doc.comment" : "Default `ResponseEncodable` conformance.\n\nSee `ResponseEncodable`.",
            "key.doc.declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.doc.discussion" : [
              {
                "Para" : "See `ResponseEncodable`."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"64\" column=\"17\"><Name>encode(for:)<\/Name><USR>s:5Vapor7ContentPAAE6encode3for3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF<\/USR><Declaration>public func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Default <codeVoice>ResponseEncodable<\/codeVoice> conformance.<\/Para><\/Abstract><Discussion><Para>See <codeVoice>ResponseEncodable<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 64,
            "key.doc.name" : "encode(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 86,
            "key.docoffset" : 1857,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 181,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1959,
            "key.offset" : 1954,
            "key.parsed_declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 64,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor7ContentPAAE6encode5using3NIO15EventLoopFutureCyAA7RequestCG7Service9Container_p_tKF\">encode(using: Container) throws -&gt; Future&lt;Request&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16RequestEncodableP6encode5using3NIO15EventLoopFutureCyAA0B0CG7Service9Container_p_tKF\">encode(using: Container) throws -&gt; Future&lt;Request&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF\">encode(for: Request) throws -&gt; Future&lt;Response&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor17ResponseEncodablePAAE6encode6status7headers3for3NIO15EventLoopFutureCyAA0B0CG8NIOHTTP118HTTPResponseStatusO_AN11HTTPHeadersVAA7RequestCtF\">encode(status:headers:for:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SE6encode2toys7Encoder_p_tKF\">encode(to:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>res<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 28,
                "key.name" : "res",
                "key.namelength" : 3,
                "key.nameoffset" : 2025,
                "key.offset" : 2021,
                "key.parsed_declaration" : "let res = req.makeResponse()",
                "key.parsed_scope.end" : 65,
                "key.parsed_scope.start" : 65,
                "key.typename" : "Response",
                "key.typeusr" : "$S5Vapor8ResponseCD",
                "key.usr" : "s:5Vapor7ContentPAAE6encode3for3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF3resL_AJvp"
              }
            ],
            "key.typename" : "<Self where Self : Content> (Self) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Vapor7ContentPAAE6encode3for3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func decode(from req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7ContentPAAE4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2229
              }
            ],
            "key.bodylength" : 84,
            "key.bodyoffset" : 2298,
            "key.doc.column" : 24,
            "key.doc.comment" : "Default `RequestDecodable` conformance.\n\nSee `RequestDecodable`.",
            "key.doc.declaration" : "public static func decode(from req: Request) throws -> Future<Self>",
            "key.doc.discussion" : [
              {
                "Para" : "See `RequestDecodable`."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"73\" column=\"24\"><Name>decode(from:)<\/Name><USR>s:5Vapor7ContentPAAE6decode4from3NIO15EventLoopFutureCyxGAA7RequestC_tKFZ<\/USR><Declaration>public static func decode(from req: Request) throws -&gt; Future&lt;Self&gt;<\/Declaration><CommentParts><Abstract><Para>Default <codeVoice>RequestDecodable<\/codeVoice> conformance.<\/Para><\/Abstract><Discussion><Para>See <codeVoice>RequestDecodable<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 73,
            "key.doc.name" : "decode(from:)",
            "key.doc.type" : "Function",
            "key.doclength" : 84,
            "key.docoffset" : 2141,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor7ContentPAAE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 147,
            "key.name" : "decode(from:)",
            "key.namelength" : 25,
            "key.nameoffset" : 2248,
            "key.offset" : 2236,
            "key.parsed_declaration" : "public static func decode(from req: Request) throws -> Future<Self>",
            "key.parsed_scope.end" : 76,
            "key.parsed_scope.start" : 73,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor7ContentPAAE6decode4from3for3NIO15EventLoopFutureCyxGAA8ResponseC_AA7RequestCtKFZ\">decode(from: Response, for: Request) throws -&gt; Future&lt;Self&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16RequestDecodableP6decode4from3NIO15EventLoopFutureCyxGAA0B0C_tKFZ\">decode(from: Request) throws -&gt; Future&lt;Self&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor17ResponseDecodableP6decode4from3for3NIO15EventLoopFutureCyxGAA0B0C_AA7RequestCtKFZ\">decode(from: Response, for: Request) throws -&gt; Future&lt;Self&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let content: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:5Vapor7ContentP4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>content<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.generic_type_param usr=\"s:5Vapor7ContentP4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 47,
                "key.name" : "content",
                "key.namelength" : 7,
                "key.nameoffset" : 2311,
                "key.offset" : 2307,
                "key.parsed_declaration" : "let content = try req.content.decode(Self.self)",
                "key.parsed_scope.end" : 74,
                "key.parsed_scope.start" : 74,
                "key.typename" : "EventLoopFuture<Self>",
                "key.typeusr" : "$S3NIO15EventLoopFutureCyxGD",
                "key.usr" : "s:5Vapor7ContentPAAE6decode4from3NIO15EventLoopFutureCyxGAA7RequestC_tKFZ7contentL_AIvp"
              }
            ],
            "key.typename" : "<Self where Self : Content> (Self.Type) -> (Request) throws -> EventLoopFuture<Self>",
            "key.typeusr" : "$S4from3NIO15EventLoopFutureCyxG5Vapor7RequestC_tKcD",
            "key.usr" : "s:5Vapor7ContentPAAE6decode4from3NIO15EventLoopFutureCyxGAA7RequestC_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func decode(from res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>, for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7ContentPAAE4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2479
              }
            ],
            "key.bodylength" : 84,
            "key.bodyoffset" : 2567,
            "key.doc.column" : 24,
            "key.doc.comment" : "Default `ResponseDecodable` conformance.\n\nSee `ResponseDecodable`.",
            "key.doc.declaration" : "public static func decode(from res: Response, for req: Request) throws -> Future<Self>",
            "key.doc.discussion" : [
              {
                "Para" : "See `ResponseDecodable`."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"81\" column=\"24\"><Name>decode(from:for:)<\/Name><USR>s:5Vapor7ContentPAAE6decode4from3for3NIO15EventLoopFutureCyxGAA8ResponseC_AA7RequestCtKFZ<\/USR><Declaration>public static func decode(from res: Response, for req: Request) throws -&gt; Future&lt;Self&gt;<\/Declaration><CommentParts><Abstract><Para>Default <codeVoice>ResponseDecodable<\/codeVoice> conformance.<\/Para><\/Abstract><Discussion><Para>See <codeVoice>ResponseDecodable<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 81,
            "key.doc.name" : "decode(from:for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 86,
            "key.docoffset" : 2389,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>res<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor7ContentPAAE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 166,
            "key.name" : "decode(from:for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 2498,
            "key.offset" : 2486,
            "key.parsed_declaration" : "public static func decode(from res: Response, for req: Request) throws -> Future<Self>",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 81,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor7ContentPAAE6decode4from3NIO15EventLoopFutureCyxGAA7RequestC_tKFZ\">decode(from: Request) throws -&gt; Future&lt;Self&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16RequestDecodableP6decode4from3NIO15EventLoopFutureCyxGAA0B0C_tKFZ\">decode(from: Request) throws -&gt; Future&lt;Self&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor17ResponseDecodableP6decode4from3for3NIO15EventLoopFutureCyxGAA0B0C_AA7RequestCtKFZ\">decode(from: Response, for: Request) throws -&gt; Future&lt;Self&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let content: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:5Vapor7ContentP4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>content<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.generic_type_param usr=\"s:5Vapor7ContentP4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 47,
                "key.name" : "content",
                "key.namelength" : 7,
                "key.nameoffset" : 2580,
                "key.offset" : 2576,
                "key.parsed_declaration" : "let content = try res.content.decode(Self.self)",
                "key.parsed_scope.end" : 82,
                "key.parsed_scope.start" : 82,
                "key.typename" : "EventLoopFuture<Self>",
                "key.typeusr" : "$S3NIO15EventLoopFutureCyxGD",
                "key.usr" : "s:5Vapor7ContentPAAE6decode4from3for3NIO15EventLoopFutureCyxGAA8ResponseC_AA7RequestCtKFZ7contentL_AJvp"
              }
            ],
            "key.typename" : "<Self where Self : Content> (Self.Type) -> (Response, Request) throws -> EventLoopFuture<Self>",
            "key.typeusr" : "$S4from3for3NIO15EventLoopFutureCyxG5Vapor8ResponseC_AG7RequestCtKcD",
            "key.usr" : "s:5Vapor7ContentPAAE6decode4from3for3NIO15EventLoopFutureCyxGAA8ResponseC_AA7RequestCtKFZ"
          }
        ],
        "key.typename" : "Content.Protocol",
        "key.typeusr" : "$S5Vapor7Content_pmD",
        "key.usr" : "s:5Vapor7ContentP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 26,
        "key.name" : "MARK: Default Conformances",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 2659
      },
      {
        "key.annotated_decl" : "<Declaration>struct String<\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 2714,
        "key.doc.declaration" : "struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and the accent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 2705
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 138,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 2697,
        "key.offset" : 2687,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2742
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 2791,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"91\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:SS5VaporE18defaultContentType4Core05MediaD0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 91,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 2719,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 2760,
            "key.offset" : 2749,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 93,
            "key.parsed_scope.start" : 91,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:SS5VaporE18defaultContentType4Core05MediaD0VvpZ"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$SSSmD",
        "key.usr" : "s:SS"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Int : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 2851,
        "key.doc.declaration" : "struct Int : FixedWidthInteger, SignedInteger",
        "key.doc.discussion" : [
          {
            "Para" : "On 32-bit platforms, `Int` is the same size as `Int32`, and on 64-bit platforms, `Int` is the same size as `Int64`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Int<\/Name><USR>s:Si<\/USR><Declaration>struct Int : FixedWidthInteger, SignedInteger<\/Declaration><CommentParts><Abstract><Para>A signed integer value type.<\/Para><\/Abstract><Discussion><Para>On 32-bit platforms, <codeVoice>Int<\/codeVoice> is the same size as <codeVoice>Int32<\/codeVoice>, and on 64-bit platforms, <codeVoice>Int<\/codeVoice> is the same size as <codeVoice>Int64<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Int",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 2842
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 135,
        "key.modulename" : "Swift",
        "key.name" : "Int",
        "key.namelength" : 3,
        "key.nameoffset" : 2837,
        "key.offset" : 2827,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2879
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 2928,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"98\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:Si5VaporE18defaultContentType4Core05MediaD0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 98,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 2856,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 2897,
            "key.offset" : 2886,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 100,
            "key.parsed_scope.start" : 98,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:Si5VaporE18defaultContentType4Core05MediaD0VvpZ"
          }
        ],
        "key.typename" : "Int.Type",
        "key.typeusr" : "$SSimD",
        "key.usr" : "s:Si"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Int8 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 2989,
        "key.doc.declaration" : "struct Int8 : FixedWidthInteger, SignedInteger",
        "key.doc.full_as_xml" : "<Class><Name>Int8<\/Name><USR>s:s4Int8V<\/USR><Declaration>struct Int8 : FixedWidthInteger, SignedInteger<\/Declaration><CommentParts><Abstract><Para>An 8-bit signed integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Int8",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 2980
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int8<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 136,
        "key.modulename" : "Swift",
        "key.name" : "Int8",
        "key.namelength" : 4,
        "key.nameoffset" : 2974,
        "key.offset" : 2964,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3017
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 3066,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"105\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:s4Int8V5VaporE18defaultContentType4Core05MediaE0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 105,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 2994,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 3035,
            "key.offset" : 3024,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 107,
            "key.parsed_scope.start" : 105,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:s4Int8V5VaporE18defaultContentType4Core05MediaE0VvpZ"
          }
        ],
        "key.typename" : "Int8.Type",
        "key.typeusr" : "$Ss4Int8VmD",
        "key.usr" : "s:s4Int8V"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Int16 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 3128,
        "key.doc.declaration" : "struct Int16 : FixedWidthInteger, SignedInteger",
        "key.doc.full_as_xml" : "<Class><Name>Int16<\/Name><USR>s:s5Int16V<\/USR><Declaration>struct Int16 : FixedWidthInteger, SignedInteger<\/Declaration><CommentParts><Abstract><Para>A 16-bit signed integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Int16",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3119
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int16<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 137,
        "key.modulename" : "Swift",
        "key.name" : "Int16",
        "key.namelength" : 5,
        "key.nameoffset" : 3112,
        "key.offset" : 3102,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3156
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 3205,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"112\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:s5Int16V5VaporE18defaultContentType4Core05MediaE0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 112,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 3133,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 3174,
            "key.offset" : 3163,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 112,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:s5Int16V5VaporE18defaultContentType4Core05MediaE0VvpZ"
          }
        ],
        "key.typename" : "Int16.Type",
        "key.typeusr" : "$Ss5Int16VmD",
        "key.usr" : "s:s5Int16V"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Int32 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 3267,
        "key.doc.declaration" : "struct Int32 : FixedWidthInteger, SignedInteger",
        "key.doc.full_as_xml" : "<Class><Name>Int32<\/Name><USR>s:s5Int32V<\/USR><Declaration>struct Int32 : FixedWidthInteger, SignedInteger<\/Declaration><CommentParts><Abstract><Para>A 32-bit signed integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Int32",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3258
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int32<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 137,
        "key.modulename" : "Swift",
        "key.name" : "Int32",
        "key.namelength" : 5,
        "key.nameoffset" : 3251,
        "key.offset" : 3241,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3295
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 3344,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"119\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:s5Int32V5VaporE18defaultContentType4Core05MediaE0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 119,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 3272,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 3313,
            "key.offset" : 3302,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 121,
            "key.parsed_scope.start" : 119,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:s5Int32V5VaporE18defaultContentType4Core05MediaE0VvpZ"
          }
        ],
        "key.typename" : "Int32.Type",
        "key.typeusr" : "$Ss5Int32VmD",
        "key.usr" : "s:s5Int32V"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Int64 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SZ\">SignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 3406,
        "key.doc.declaration" : "struct Int64 : FixedWidthInteger, SignedInteger",
        "key.doc.full_as_xml" : "<Class><Name>Int64<\/Name><USR>s:s5Int64V<\/USR><Declaration>struct Int64 : FixedWidthInteger, SignedInteger<\/Declaration><CommentParts><Abstract><Para>A 64-bit signed integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Int64",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3397
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Int64<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 137,
        "key.modulename" : "Swift",
        "key.name" : "Int64",
        "key.namelength" : 5,
        "key.nameoffset" : 3390,
        "key.offset" : 3380,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3434
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 3483,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"126\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:s5Int64V5VaporE18defaultContentType4Core05MediaE0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 126,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 3411,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 3452,
            "key.offset" : 3441,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 128,
            "key.parsed_scope.start" : 126,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:s5Int64V5VaporE18defaultContentType4Core05MediaE0VvpZ"
          }
        ],
        "key.typename" : "Int64.Type",
        "key.typeusr" : "$Ss5Int64VmD",
        "key.usr" : "s:s5Int64V"
      },
      {
        "key.annotated_decl" : "<Declaration>struct UInt : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 3544,
        "key.doc.declaration" : "struct UInt : FixedWidthInteger, UnsignedInteger",
        "key.doc.discussion" : [
          {
            "Para" : "On 32-bit platforms, `UInt` is the same size as `UInt32`, and on 64-bit platforms, `UInt` is the same size as `UInt64`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>UInt<\/Name><USR>s:Su<\/USR><Declaration>struct UInt : FixedWidthInteger, UnsignedInteger<\/Declaration><CommentParts><Abstract><Para>An unsigned integer value type.<\/Para><\/Abstract><Discussion><Para>On 32-bit platforms, <codeVoice>UInt<\/codeVoice> is the same size as <codeVoice>UInt32<\/codeVoice>, and on 64-bit platforms, <codeVoice>UInt<\/codeVoice> is the same size as <codeVoice>UInt64<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3535
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 136,
        "key.modulename" : "Swift",
        "key.name" : "UInt",
        "key.namelength" : 4,
        "key.nameoffset" : 3529,
        "key.offset" : 3519,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3572
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 3621,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"133\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:Su5VaporE18defaultContentType4Core05MediaD0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 133,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 3549,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 3590,
            "key.offset" : 3579,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 135,
            "key.parsed_scope.start" : 133,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:Su5VaporE18defaultContentType4Core05MediaD0VvpZ"
          }
        ],
        "key.typename" : "UInt.Type",
        "key.typeusr" : "$SSumD",
        "key.usr" : "s:Su"
      },
      {
        "key.annotated_decl" : "<Declaration>struct UInt8 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 3683,
        "key.doc.declaration" : "struct UInt8 : FixedWidthInteger, UnsignedInteger",
        "key.doc.full_as_xml" : "<Class><Name>UInt8<\/Name><USR>s:s5UInt8V<\/USR><Declaration>struct UInt8 : FixedWidthInteger, UnsignedInteger<\/Declaration><CommentParts><Abstract><Para>An 8-bit unsigned integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt8",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3674
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt8<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 137,
        "key.modulename" : "Swift",
        "key.name" : "UInt8",
        "key.namelength" : 5,
        "key.nameoffset" : 3667,
        "key.offset" : 3657,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3711
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 3760,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"140\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:s5UInt8V5VaporE18defaultContentType4Core05MediaE0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 140,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 3688,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 3729,
            "key.offset" : 3718,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 142,
            "key.parsed_scope.start" : 140,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:s5UInt8V5VaporE18defaultContentType4Core05MediaE0VvpZ"
          }
        ],
        "key.typename" : "UInt8.Type",
        "key.typeusr" : "$Ss5UInt8VmD",
        "key.usr" : "s:s5UInt8V"
      },
      {
        "key.annotated_decl" : "<Declaration>struct UInt16 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 3823,
        "key.doc.declaration" : "struct UInt16 : FixedWidthInteger, UnsignedInteger",
        "key.doc.full_as_xml" : "<Class><Name>UInt16<\/Name><USR>s:s6UInt16V<\/USR><Declaration>struct UInt16 : FixedWidthInteger, UnsignedInteger<\/Declaration><CommentParts><Abstract><Para>A 16-bit unsigned integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt16",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3814
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt16<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 138,
        "key.modulename" : "Swift",
        "key.name" : "UInt16",
        "key.namelength" : 6,
        "key.nameoffset" : 3806,
        "key.offset" : 3796,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3851
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 3900,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"147\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:s6UInt16V5VaporE18defaultContentType4Core05MediaE0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 147,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 3828,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 3869,
            "key.offset" : 3858,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 149,
            "key.parsed_scope.start" : 147,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:s6UInt16V5VaporE18defaultContentType4Core05MediaE0VvpZ"
          }
        ],
        "key.typename" : "UInt16.Type",
        "key.typeusr" : "$Ss6UInt16VmD",
        "key.usr" : "s:s6UInt16V"
      },
      {
        "key.annotated_decl" : "<Declaration>struct UInt32 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 3963,
        "key.doc.declaration" : "struct UInt32 : FixedWidthInteger, UnsignedInteger",
        "key.doc.full_as_xml" : "<Class><Name>UInt32<\/Name><USR>s:s6UInt32V<\/USR><Declaration>struct UInt32 : FixedWidthInteger, UnsignedInteger<\/Declaration><CommentParts><Abstract><Para>A 32-bit unsigned integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt32",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3954
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt32<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 138,
        "key.modulename" : "Swift",
        "key.name" : "UInt32",
        "key.namelength" : 6,
        "key.nameoffset" : 3946,
        "key.offset" : 3936,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3991
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 4040,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"154\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:s6UInt32V5VaporE18defaultContentType4Core05MediaE0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 154,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 3968,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 4009,
            "key.offset" : 3998,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 156,
            "key.parsed_scope.start" : 154,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:s6UInt32V5VaporE18defaultContentType4Core05MediaE0VvpZ"
          }
        ],
        "key.typename" : "UInt32.Type",
        "key.typeusr" : "$Ss6UInt32VmD",
        "key.usr" : "s:s6UInt32V"
      },
      {
        "key.annotated_decl" : "<Declaration>struct UInt64 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/Type>, <Type usr=\"s:SU\">UnsignedInteger<\/Type><\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 4103,
        "key.doc.declaration" : "struct UInt64 : FixedWidthInteger, UnsignedInteger",
        "key.doc.full_as_xml" : "<Class><Name>UInt64<\/Name><USR>s:s6UInt64V<\/USR><Declaration>struct UInt64 : FixedWidthInteger, UnsignedInteger<\/Declaration><CommentParts><Abstract><Para>A 64-bit unsigned integer value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "UInt64",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 4094
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>UInt64<\/decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger<\/ref.protocol>, <ref.protocol usr=\"s:SU\">UnsignedInteger<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Math\/Integers",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 138,
        "key.modulename" : "Swift",
        "key.name" : "UInt64",
        "key.namelength" : 6,
        "key.nameoffset" : 4086,
        "key.offset" : 4076,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4131
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 4180,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"161\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:s6UInt64V5VaporE18defaultContentType4Core05MediaE0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 161,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 4108,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Integers",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 4149,
            "key.offset" : 4138,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 163,
            "key.parsed_scope.start" : 161,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:s6UInt64V5VaporE18defaultContentType4Core05MediaE0VvpZ"
          }
        ],
        "key.typename" : "UInt64.Type",
        "key.typeusr" : "$Ss6UInt64VmD",
        "key.usr" : "s:s6UInt64V"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Double<\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 4243,
        "key.doc.declaration" : "struct Double",
        "key.doc.full_as_xml" : "<Class><Name>Double<\/Name><USR>s:Sd<\/USR><Declaration>struct Double<\/Declaration><CommentParts><Abstract><Para>A double-precision, floating-point value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Double",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 4234
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Double<\/decl.name><\/decl.struct>",
        "key.groupname" : "Math\/Floating",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 138,
        "key.modulename" : "Swift",
        "key.name" : "Double",
        "key.namelength" : 6,
        "key.nameoffset" : 4226,
        "key.offset" : 4216,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4271
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 4320,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"168\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:Sd5VaporE18defaultContentType4Core05MediaD0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 168,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 4248,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Floating",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 4289,
            "key.offset" : 4278,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 170,
            "key.parsed_scope.start" : 168,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:Sd5VaporE18defaultContentType4Core05MediaD0VvpZ"
          }
        ],
        "key.typename" : "Double.Type",
        "key.typeusr" : "$SSdmD",
        "key.usr" : "s:Sd"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Float<\/Declaration>",
        "key.bodylength" : 110,
        "key.bodyoffset" : 4382,
        "key.doc.declaration" : "struct Float",
        "key.doc.full_as_xml" : "<Class><Name>Float<\/Name><USR>s:Sf<\/USR><Declaration>struct Float<\/Declaration><CommentParts><Abstract><Para>A single-precision, floating-point value type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Float",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 4373
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Float<\/decl.name><\/decl.struct>",
        "key.groupname" : "Math\/Floating",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 137,
        "key.modulename" : "Swift",
        "key.name" : "Float",
        "key.namelength" : 5,
        "key.nameoffset" : 4366,
        "key.offset" : 4356,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4410
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 4459,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"175\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:Sf5VaporE18defaultContentType4Core05MediaD0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 175,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 4387,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Math\/Floating",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 74,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 4428,
            "key.offset" : 4417,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 177,
            "key.parsed_scope.start" : 175,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:Sf5VaporE18defaultContentType4Core05MediaD0VvpZ"
          }
        ],
        "key.typename" : "Float.Type",
        "key.typeusr" : "$SSfmD",
        "key.usr" : "s:Sf"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/Type><\/Declaration>",
        "key.bodylength" : 126,
        "key.bodyoffset" : 4618,
        "key.doc.declaration" : "struct Array<Element>",
        "key.doc.discussion" : [
          {
            "Para" : "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the `Array` type to hold elements of a single type, the array’s `Element` type. An array can store any kind of elements—from integers to strings to classes."
          },
          {
            "Para" : "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s `Element` type. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to perform an operation on all of an array’s elements, use a `for`-`in` loop to iterate through the array’s contents."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `first` and `last` properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are `nil`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can replace an existing element with a new value by assigning the new value to the subscript."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."
          },
          {
            "Para" : "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."
          },
          {
            "Para" : "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."
          },
          {
            "Para" : "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."
          },
          {
            "Para" : "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."
          },
          {
            "Para" : "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array’s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array’s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."
          },
          {
            "Para" : "When the destination array’s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."
          },
          {
            "Para" : "When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Array<\/Name><USR>s:Sa<\/USR><Declaration>struct Array&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.<\/Para><\/Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the <codeVoice>Array<\/codeVoice> type to hold elements of a single type, the array’s <codeVoice>Element<\/codeVoice> type. An array can store any kind of elements—from integers to strings to classes.<\/Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s <codeVoice>Element<\/codeVoice> type. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An array of 'Int' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ An array of 'String' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element<\/codeVoice> type of your array in the declaration. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Shortened forms are preferred]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The full type name is also allowed]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Array Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to perform an operation on all of an array’s elements, use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop to iterate through the array’s contents.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Albemarle.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Brandywine.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Chesapeake.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>isEmpty<\/codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count<\/codeVoice> property to find the number of elements in the array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I know 8 odd numbers.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>first<\/codeVoice> and <codeVoice>last<\/codeVoice> properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 15\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil, nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count<\/codeVoice> triggers a runtime error. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Triggers runtime error: Index out of range]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Adding and Removing Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)<\/codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)<\/codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)<\/codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)<\/codeVoice>, <codeVoice>removeSubrange(_:)<\/codeVoice>, and <codeVoice>removeLast()<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Ben's family is moving to another state]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ William is signing up for a different class]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Growing the Size of an Array<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.<\/Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)<\/codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity<\/codeVoice> and <codeVoice>count<\/codeVoice> properties to determine how many more elements the array can store without allocating larger storage.<\/Para><Para>For arrays of most <codeVoice>Element<\/codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element<\/codeVoice> type that is a class or <codeVoice>@objc<\/codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray<\/codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray<\/codeVoice> can become an <codeVoice>Array<\/codeVoice>, there are no guarantees about representation or efficiency in this case.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[100, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[1, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An integer type with reference semantics]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Modifications to an instance are visible from either array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Replacements, additions, and removals are still visible]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ only in the modified array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.<\/Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.<\/Para><Para>In the example below, a <codeVoice>numbers<\/codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers<\/codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers<\/codeVoice> are made in place, while the two copies continue to share the original storage.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The storage for 'numbers' is copied here]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'numbers' is [100, 200, 300, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray<\/codeVoice> instance instead of <codeVoice>Array<\/codeVoice>, use the type-cast operator (<codeVoice>as<\/codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of your array must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>The following example shows how you can bridge an <codeVoice>Array<\/codeVoice> instance to <codeVoice>NSArray<\/codeVoice> to use the <codeVoice>write(to:atomically:)<\/codeVoice> method. In this example, the <codeVoice>colors<\/codeVoice> array can be bridged to <codeVoice>NSArray<\/codeVoice> because the <codeVoice>colors<\/codeVoice> array’s <codeVoice>String<\/codeVoice> elements bridge to <codeVoice>NSString<\/codeVoice>. The compiler prevents bridging the <codeVoice>moreColors<\/codeVoice> array, on the other hand, because its <codeVoice>Element<\/codeVoice> type is <codeVoice>Optional&lt;String&gt;<\/codeVoice>, which does <emphasis>not<\/emphasis> bridge to a Foundation type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value of type '[String?]' to type 'NSArray']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Bridging from <codeVoice>Array<\/codeVoice> to <codeVoice>NSArray<\/codeVoice> takes O(1) time and O(1) space if the array’s elements are already instances of a class or an <codeVoice>@objc<\/codeVoice> protocol; otherwise, it takes O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When the destination array’s element type is a class or an <codeVoice>@objc<\/codeVoice> protocol, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)<\/codeVoice> returns the same array, the instances of <codeVoice>NSArray<\/codeVoice> and <codeVoice>Array<\/codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array<\/codeVoice> share storage.<\/Para><Para>When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n<\/emphasis>) time. For example, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array&lt;Int&gt;<\/codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array<\/codeVoice> instance.<\/Para><Note><Para>The <codeVoice>ContiguousArray<\/codeVoice> and <codeVoice>ArraySlice<\/codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Array",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 4512
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 4521
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 4539
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 4557
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 4576
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Array<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Collection\/Array",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          },
          {
            "key.name" : "RequestDecodable"
          },
          {
            "key.name" : "RequestEncodable"
          },
          {
            "key.name" : "ResponseDecodable"
          },
          {
            "key.name" : "ResponseEncodable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 250,
        "key.modulename" : "Swift",
        "key.name" : "Array",
        "key.namelength" : 5,
        "key.nameoffset" : 4505,
        "key.offset" : 4495,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4646
              }
            ],
            "key.bodylength" : 47,
            "key.bodyoffset" : 4695,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"182\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:Sa5VaporAA7ContentRzlE07defaultB4Type4Core05MediaD0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 182,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 4623,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 90,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 4664,
            "key.offset" : 4653,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 184,
            "key.parsed_scope.start" : 182,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:Sa5VaporAA7ContentRzlE07defaultB4Type4Core05MediaD0VvpZ"
          }
        ],
        "key.typename" : "Array<Element>.Type",
        "key.typeusr" : "$SSayxGmD",
        "key.usr" : "s:Sa"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Dictionary&lt;Key, Value&gt; where Key : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.bodylength" : 105,
        "key.bodyoffset" : 4888,
        "key.doc.declaration" : "struct Dictionary<Key, Value> where Key : Hashable",
        "key.doc.discussion" : [
          {
            "Para" : "A dictionary is a type of hash table, providing fast access to the entries it contains. Each entry in the table is identified using its key, which is a hashable type such as a string or number. You use that key to retrieve the corresponding value, which can be any object. In other languages, similar data types are known as hashes or associated arrays."
          },
          {
            "Para" : "Create a new dictionary by using a dictionary literal. A dictionary literal is a comma-separated list of key-value pairs, in which a colon separates each key from its associated value, surrounded by square brackets. You can assign a dictionary literal to a variable or constant or pass it to a function that expects a dictionary."
          },
          {
            "Para" : "Here’s how you would create a dictionary of HTTP response codes and their related messages:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `responseMessages` variable is inferred to have type `[Int: String]`. The `Key` type of the dictionary is `Int`, and the `Value` type of the dictionary is `String`."
          },
          {
            "Para" : "To create a dictionary with no key-value pairs, use an empty dictionary literal (`[:]`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Any type that conforms to the `Hashable` protocol can be used as a dictionary’s `Key` type, including all of Swift’s basic types. You can use your own custom types as dictionary keys by making them conform to the `Hashable` protocol."
          },
          {
            "Para" : "The most common way to access values in a dictionary is to use a key as a subscript. Subscripting with a key takes the following form:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Subscripting a dictionary with a key returns an optional value, because a dictionary might not hold a value for the key that you use in the subscript."
          },
          {
            "Para" : "The next example uses key-based subscripting of the `responseMessages` dictionary with two keys that exist in the dictionary and one that does not."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also update, modify, or remove keys and values from a dictionary using the key-based subscript. To add a new key-value pair, assign a value to a key that isn’t yet a part of the dictionary."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Update an existing value by assigning a new value to a key that already exists in the dictionary. If you assign `nil` to an existing key, the key and its associated value are removed. The following example updates the value for the `404` code to be simply “Not found” and removes the key-value pair for the `500` code entirely."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "In a mutable `Dictionary` instance, you can modify in place a value that you’ve accessed through a keyed subscript. The code sample below declares a dictionary called `interestingNumbers` with string keys and values that are integer arrays, then sorts each array in-place in descending order."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every dictionary is an unordered collection of key-value pairs. You can iterate over a dictionary using a `for`-`in` loop, decomposing each key-value pair into the elements of a tuple."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The order of key-value pairs in a dictionary is stable between mutations but is otherwise unpredictable. If you need an ordered collection of key-value pairs and don’t need the fast key lookup that `Dictionary` provides, see the `DictionaryLiteral` type for an alternative."
          },
          {
            "Para" : "You can search a dictionary’s contents for a particular value using the `contains(where:)` or `firstIndex(where:)` methods supplied by default implementation. The following example checks to see if `imagePaths` contains any paths in the `\"\/glyphs\"` directory:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that in this example, `imagePaths` is subscripted using a dictionary index. Unlike the key-based subscript, the index-based subscript returns the corresponding key-value pair as a nonoptional tuple."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A dictionary’s indices stay valid across additions to the dictionary as long as the dictionary has enough capacity to store the added values without allocating more buffer. When a dictionary outgrows its buffer, existing indices may be invalidated without any notification."
          },
          {
            "Para" : "When you know how many new values you’re adding to a dictionary, use the `init(minimumCapacity:)` initializer to allocate the correct amount of buffer."
          },
          {
            "Para" : "You can bridge between `Dictionary` and `NSDictionary` using the `as` operator. For bridging to be possible, the `Key` and `Value` types of a dictionary must be classes, `@objc` protocols, or types that bridge to Foundation types."
          },
          {
            "Para" : "Bridging from `Dictionary` to `NSDictionary` always takes O(1) time and space. When the dictionary’s `Key` and `Value` types are neither classes nor `@objc` protocols, any required bridging of elements occurs at the first access of each element. For this reason, the first operation that uses the contents of the dictionary may take O()."
          },
          {
            "Para" : "Bridging from `NSDictionary` to `Dictionary` first calls the `copy(with:)` method (`- copyWithZone:` in Objective-C) on the dictionary to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSDictionary` that are already immutable, `copy(with:)` usually returns the same dictionary in O(1) time; otherwise, the copying performance is unspecified. The instances of `NSDictionary` and `Dictionary` share buffer using the same copy-on-write optimization that is used when two instances of `Dictionary` share buffer."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Dictionary<\/Name><USR>s:SD<\/USR><Declaration>struct Dictionary&lt;Key, Value&gt; where Key : Hashable<\/Declaration><CommentParts><Abstract><Para>A collection whose elements are key-value pairs.<\/Para><\/Abstract><Discussion><Para>A dictionary is a type of hash table, providing fast access to the entries it contains. Each entry in the table is identified using its key, which is a hashable type such as a string or number. You use that key to retrieve the corresponding value, which can be any object. In other languages, similar data types are known as hashes or associated arrays.<\/Para><Para>Create a new dictionary by using a dictionary literal. A dictionary literal is a comma-separated list of key-value pairs, in which a colon separates each key from its associated value, surrounded by square brackets. You can assign a dictionary literal to a variable or constant or pass it to a function that expects a dictionary.<\/Para><Para>Here’s how you would create a dictionary of HTTP response codes and their related messages:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var responseMessages = [200: \"OK\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        403: \"Access forbidden\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        404: \"File not found\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                        500: \"Internal server error\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>responseMessages<\/codeVoice> variable is inferred to have type <codeVoice>[Int: String]<\/codeVoice>. The <codeVoice>Key<\/codeVoice> type of the dictionary is <codeVoice>Int<\/codeVoice>, and the <codeVoice>Value<\/codeVoice> type of the dictionary is <codeVoice>String<\/codeVoice>.<\/Para><Para>To create a dictionary with no key-value pairs, use an empty dictionary literal (<codeVoice>[:]<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var emptyDict: [String: String] = [:]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Any type that conforms to the <codeVoice>Hashable<\/codeVoice> protocol can be used as a dictionary’s <codeVoice>Key<\/codeVoice> type, including all of Swift’s basic types. You can use your own custom types as dictionary keys by making them conform to the <codeVoice>Hashable<\/codeVoice> protocol.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Getting and Setting Dictionary Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>The most common way to access values in a dictionary is to use a key as a subscript. Subscripting with a key takes the following form:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(responseMessages[200])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"OK\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Subscripting a dictionary with a key returns an optional value, because a dictionary might not hold a value for the key that you use in the subscript.<\/Para><Para>The next example uses key-based subscripting of the <codeVoice>responseMessages<\/codeVoice> dictionary with two keys that exist in the dictionary and one that does not.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let httpResponseCodes = [200, 403, 301]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for code in httpResponseCodes {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if let message = responseMessages[code] {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Response \\(code): \\(message)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Unknown response \\(code)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Response 200: OK\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Response 403: Access Forbidden\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Unknown response 301\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also update, modify, or remove keys and values from a dictionary using the key-based subscript. To add a new key-value pair, assign a value to a key that isn’t yet a part of the dictionary.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[responseMessages[301] = \"Moved permanently\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(responseMessages[301])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Optional(\"Moved permanently\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Update an existing value by assigning a new value to a key that already exists in the dictionary. If you assign <codeVoice>nil<\/codeVoice> to an existing key, the key and its associated value are removed. The following example updates the value for the <codeVoice>404<\/codeVoice> code to be simply “Not found” and removes the key-value pair for the <codeVoice>500<\/codeVoice> code entirely.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[responseMessages[404] = \"Not found\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[responseMessages[500] = nil]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(responseMessages)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[301: \"Moved permanently\", 200: \"OK\", 403: \"Access forbidden\", 404: \"Not found\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>In a mutable <codeVoice>Dictionary<\/codeVoice> instance, you can modify in place a value that you’ve accessed through a keyed subscript. The code sample below declares a dictionary called <codeVoice>interestingNumbers<\/codeVoice> with string keys and values that are integer arrays, then sorts each array in-place in descending order.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var interestingNumbers = [\"primes\": [2, 3, 5, 7, 11, 13, 17],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                          \"triangular\": [1, 3, 6, 10, 15, 21, 28],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                          \"hexagonal\": [1, 6, 15, 28, 45, 66, 91]]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for key in interestingNumbers.keys {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    interestingNumbers[key]?.sort(by: >)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(interestingNumbers[\"primes\"]!)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[17, 13, 11, 7, 5, 3, 2]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Iterating Over the Contents of a Dictionary<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Every dictionary is an unordered collection of key-value pairs. You can iterate over a dictionary using a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop, decomposing each key-value pair into the elements of a tuple.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let imagePaths = [\"star\": \"\/glyphs\/star.png\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"portrait\": \"\/images\/content\/portrait.jpg\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                  \"spacer\": \"\/images\/shared\/spacer.gif\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[for (name, path) in imagePaths {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The path to '\\(name)' is '\\(path)'.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'star' is '\/glyphs\/star.png'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'portrait' is '\/images\/content\/portrait.jpg'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The path to 'spacer' is '\/images\/shared\/spacer.gif'.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The order of key-value pairs in a dictionary is stable between mutations but is otherwise unpredictable. If you need an ordered collection of key-value pairs and don’t need the fast key lookup that <codeVoice>Dictionary<\/codeVoice> provides, see the <codeVoice>DictionaryLiteral<\/codeVoice> type for an alternative.<\/Para><Para>You can search a dictionary’s contents for a particular value using the <codeVoice>contains(where:)<\/codeVoice> or <codeVoice>firstIndex(where:)<\/codeVoice> methods supplied by default implementation. The following example checks to see if <codeVoice>imagePaths<\/codeVoice> contains any paths in the <codeVoice>&quot;\/glyphs&quot;<\/codeVoice> directory:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let glyphIndex = imagePaths.firstIndex(where: { $0.value.hasPrefix(\"\/glyphs\") })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[if let index = glyphIndex {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"The '\\(imagesPaths[index].key)' image is a glyph.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No glyphs found!\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"The 'star' image is a glyph.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that in this example, <codeVoice>imagePaths<\/codeVoice> is subscripted using a dictionary index. Unlike the key-based subscript, the index-based subscript returns the corresponding key-value pair as a nonoptional tuple.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(imagePaths[glyphIndex!])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"(\"star\", \"\/glyphs\/star.png\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A dictionary’s indices stay valid across additions to the dictionary as long as the dictionary has enough capacity to store the added values without allocating more buffer. When a dictionary outgrows its buffer, existing indices may be invalidated without any notification.<\/Para><Para>When you know how many new values you’re adding to a dictionary, use the <codeVoice>init(minimumCapacity:)<\/codeVoice> initializer to allocate the correct amount of buffer.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Dictionary and NSDictionary<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>You can bridge between <codeVoice>Dictionary<\/codeVoice> and <codeVoice>NSDictionary<\/codeVoice> using the <codeVoice>as<\/codeVoice> operator. For bridging to be possible, the <codeVoice>Key<\/codeVoice> and <codeVoice>Value<\/codeVoice> types of a dictionary must be classes, <codeVoice>@objc<\/codeVoice> protocols, or types that bridge to Foundation types.<\/Para><Para>Bridging from <codeVoice>Dictionary<\/codeVoice> to <codeVoice>NSDictionary<\/codeVoice> always takes O(1) time and space. When the dictionary’s <codeVoice>Key<\/codeVoice> and <codeVoice>Value<\/codeVoice> types are neither classes nor <codeVoice>@objc<\/codeVoice> protocols, any required bridging of elements occurs at the first access of each element. For this reason, the first operation that uses the contents of the dictionary may take O(<emphasis>n<\/emphasis>).<\/Para><Para>Bridging from <codeVoice>NSDictionary<\/codeVoice> to <codeVoice>Dictionary<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> method (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) on the dictionary to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSDictionary<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same dictionary in O(1) time; otherwise, the copying performance is unspecified. The instances of <codeVoice>NSDictionary<\/codeVoice> and <codeVoice>Dictionary<\/codeVoice> share buffer using the same copy-on-write optimization that is used when two instances of <codeVoice>Dictionary<\/codeVoice> share buffer.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Dictionary",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 4769
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 4778
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 4796
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 4814
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 4833
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Dictionary<\/decl.name>&lt;<decl.generic_type_param usr=\"s:SD3Keyxmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:SD5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.groupname" : "Collection\/HashedCollections",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          },
          {
            "key.name" : "RequestDecodable"
          },
          {
            "key.name" : "RequestEncodable"
          },
          {
            "key.name" : "ResponseDecodable"
          },
          {
            "key.name" : "ResponseEncodable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 247,
        "key.modulename" : "Swift",
        "key.name" : "Dictionary",
        "key.namelength" : 10,
        "key.nameoffset" : 4757,
        "key.offset" : 4747,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4916
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 4965,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift\" line=\"189\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:SD5VaporSSRszAA7ContentR_rlE07defaultB4Type4Core05MediaD0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 189,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 4893,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/Content.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.groupname" : "Collection\/HashedCollections",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 69,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 4934,
            "key.offset" : 4923,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 191,
            "key.parsed_scope.start" : 189,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:SD5VaporSSRszAA7ContentR_rlE07defaultB4Type4Core05MediaD0VvpZ"
          }
        ],
        "key.typename" : "Dictionary<Key, Value>.Type",
        "key.typeusr" : "$SSDyxq_GmD",
        "key.usr" : "s:SD"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4621,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ContentCoders : <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 124
          }
        ],
        "key.bodylength" : 4453,
        "key.bodyoffset" : 166,
        "key.doc.column" : 15,
        "key.doc.comment" : "Stores configured `HTTPMessage` and `Data` coders.\n\nUse the `require...` methods to fetch coders by `MediaType`.",
        "key.doc.declaration" : "public struct ContentCoders : ServiceType",
        "key.doc.discussion" : [
          {
            "Para" : "Use the `require...` methods to fetch coders by `MediaType`."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"4\" column=\"15\"><Name>ContentCoders<\/Name><USR>s:5Vapor13ContentCodersV<\/USR><Declaration>public struct ContentCoders : ServiceType<\/Declaration><CommentParts><Abstract><Para>Stores configured <codeVoice>HTTPMessage<\/codeVoice> and <codeVoice>Data<\/codeVoice> coders.<\/Para><\/Abstract><Discussion><Para>Use the <codeVoice>require...<\/codeVoice> methods to fetch coders by <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 4,
        "key.doc.name" : "ContentCoders",
        "key.doc.type" : "Class",
        "key.doclength" : 124,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 153
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ContentCoders<\/decl.name> : <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 4489,
        "key.name" : "ContentCoders",
        "key.namelength" : 13,
        "key.nameoffset" : 138,
        "key.offset" : 131,
        "key.parsed_declaration" : "public struct ContentCoders: ServiceType",
        "key.parsed_scope.end" : 118,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 198
              }
            ],
            "key.bodylength" : 76,
            "key.bodyoffset" : 277,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> ContentCoders",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"6\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor13ContentCodersV11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; ContentCoders<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 6,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 171,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 149,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 217,
            "key.offset" : 205,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> ContentCoders",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 6,
            "key.substructure" : [

            ],
            "key.typename" : "(ContentCoders.Type) -> (Container) throws -> ContentCoders",
            "key.typeusr" : "$S3for5Vapor13ContentCodersV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor13ContentCodersV11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let httpEncoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 402
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Configured `HTTPMessageEncoder`s.",
            "key.doc.declaration" : "private let httpEncoders: [MediaType : HTTPMessageEncoder]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"11\" column=\"17\"><Name>httpEncoders<\/Name><USR>s:5Vapor13ContentCodersV12httpEncoders33_B802A5DE7CF4906782E816044CEDFF75LLSDy4Core9MediaTypeV4HTTP18HTTPMessageEncoder_pGvp<\/USR><Declaration>private let httpEncoders: [MediaType : HTTPMessageEncoder]<\/Declaration><CommentParts><Abstract><Para>Configured <codeVoice>HTTPMessageEncoder<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 11,
            "key.doc.name" : "httpEncoders",
            "key.doc.type" : "Other",
            "key.doclength" : 38,
            "key.docoffset" : 360,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>httpEncoders<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 49,
            "key.name" : "httpEncoders",
            "key.namelength" : 12,
            "key.nameoffset" : 414,
            "key.offset" : 410,
            "key.parsed_declaration" : "private let httpEncoders: [MediaType: HTTPMessageEncoder]",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "[MediaType : HTTPMessageEncoder]",
            "key.typeusr" : "$SSDy4Core9MediaTypeV4HTTP18HTTPMessageEncoder_pGD",
            "key.usr" : "s:5Vapor13ContentCodersV12httpEncoders33_B802A5DE7CF4906782E816044CEDFF75LLSDy4Core9MediaTypeV4HTTP18HTTPMessageEncoder_pGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var httpDecoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 507
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Configured `HTTPMessageDecoder`s.",
            "key.doc.declaration" : "private var httpDecoders: [MediaType : HTTPMessageDecoder]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"14\" column=\"17\"><Name>httpDecoders<\/Name><USR>s:5Vapor13ContentCodersV12httpDecoders33_B802A5DE7CF4906782E816044CEDFF75LLSDy4Core9MediaTypeV4HTTP18HTTPMessageDecoder_pGvp<\/USR><Declaration>private var httpDecoders: [MediaType : HTTPMessageDecoder]<\/Declaration><CommentParts><Abstract><Para>Configured <codeVoice>HTTPMessageDecoder<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 14,
            "key.doc.name" : "httpDecoders",
            "key.doc.type" : "Other",
            "key.doclength" : 38,
            "key.docoffset" : 465,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>httpDecoders<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 49,
            "key.name" : "httpDecoders",
            "key.namelength" : 12,
            "key.nameoffset" : 519,
            "key.offset" : 515,
            "key.parsed_declaration" : "private var httpDecoders: [MediaType: HTTPMessageDecoder]",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[MediaType : HTTPMessageDecoder]",
            "key.typeusr" : "$SSDy4Core9MediaTypeV4HTTP18HTTPMessageDecoder_pGD",
            "key.usr" : "s:5Vapor13ContentCodersV12httpDecoders33_B802A5DE7CF4906782E816044CEDFF75LLSDy4Core9MediaTypeV4HTTP18HTTPMessageDecoder_pGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var dataEncoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 605
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Configured `DataEncoder`s.",
            "key.doc.declaration" : "private var dataEncoders: [MediaType : DataEncoder]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"17\" column=\"17\"><Name>dataEncoders<\/Name><USR>s:5Vapor13ContentCodersV12dataEncoders33_B802A5DE7CF4906782E816044CEDFF75LLSDy4Core9MediaTypeVAF11DataEncoder_pGvp<\/USR><Declaration>private var dataEncoders: [MediaType : DataEncoder]<\/Declaration><CommentParts><Abstract><Para>Configured <codeVoice>DataEncoder<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 17,
            "key.doc.name" : "dataEncoders",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 570,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dataEncoders<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 42,
            "key.name" : "dataEncoders",
            "key.namelength" : 12,
            "key.nameoffset" : 617,
            "key.offset" : 613,
            "key.parsed_declaration" : "private var dataEncoders: [MediaType: DataEncoder]",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[MediaType : DataEncoder]",
            "key.typeusr" : "$SSDy4Core9MediaTypeVAA11DataEncoder_pGD",
            "key.usr" : "s:5Vapor13ContentCodersV12dataEncoders33_B802A5DE7CF4906782E816044CEDFF75LLSDy4Core9MediaTypeVAF11DataEncoder_pGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var dataDecoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 696
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Configured `DataDecoder`s.",
            "key.doc.declaration" : "private var dataDecoders: [MediaType : DataDecoder]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"20\" column=\"17\"><Name>dataDecoders<\/Name><USR>s:5Vapor13ContentCodersV12dataDecoders33_B802A5DE7CF4906782E816044CEDFF75LLSDy4Core9MediaTypeVAF11DataDecoder_pGvp<\/USR><Declaration>private var dataDecoders: [MediaType : DataDecoder]<\/Declaration><CommentParts><Abstract><Para>Configured <codeVoice>DataDecoder<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 20,
            "key.doc.name" : "dataDecoders",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 661,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dataDecoders<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 42,
            "key.name" : "dataDecoders",
            "key.namelength" : 12,
            "key.nameoffset" : 708,
            "key.offset" : 704,
            "key.parsed_declaration" : "private var dataDecoders: [MediaType: DataDecoder]",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[MediaType : DataDecoder]",
            "key.typeusr" : "$SSDy4Core9MediaTypeVAA11DataDecoder_pGD",
            "key.usr" : "s:5Vapor13ContentCodersV12dataDecoders33_B802A5DE7CF4906782E816044CEDFF75LLSDy4Core9MediaTypeVAF11DataDecoder_pGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal init(httpEncoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type>], httpDecoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type>], dataEncoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type>], dataDecoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type>])<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 806
              }
            ],
            "key.bodylength" : 169,
            "key.bodyoffset" : 1033,
            "key.doc.column" : 14,
            "key.doc.comment" : "Internal init for creating a `ContentCoders`.",
            "key.doc.declaration" : "internal init(httpEncoders: [MediaType : HTTPMessageEncoder], httpDecoders: [MediaType : HTTPMessageDecoder], dataEncoders: [MediaType : DataEncoder], dataDecoders: [MediaType : DataDecoder])",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"23\" column=\"14\"><Name>init(httpEncoders:httpDecoders:dataEncoders:dataDecoders:)<\/Name><USR>s:5Vapor13ContentCodersV12httpEncoders0D8Decoders04dataE00gF0ACSDy4Core9MediaTypeV4HTTP18HTTPMessageEncoder_pG_SDyAjK0L7Decoder_pGSDyAjH04DataM0_pGSDyAjH0oN0_pGtcfc<\/USR><Declaration>internal init(httpEncoders: [MediaType : HTTPMessageEncoder], httpDecoders: [MediaType : HTTPMessageDecoder], dataEncoders: [MediaType : DataEncoder], dataDecoders: [MediaType : DataDecoder])<\/Declaration><CommentParts><Abstract><Para>Internal init for creating a <codeVoice>ContentCoders<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 23,
            "key.doc.name" : "init(httpEncoders:httpDecoders:dataEncoders:dataDecoders:)",
            "key.doc.type" : "Function",
            "key.doclength" : 50,
            "key.docoffset" : 752,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>httpEncoders<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>httpDecoders<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataEncoders<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataDecoders<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 388,
            "key.name" : "init(httpEncoders:httpDecoders:dataEncoders:dataDecoders:)",
            "key.namelength" : 216,
            "key.nameoffset" : 815,
            "key.offset" : 815,
            "key.parsed_declaration" : "internal init(\n    httpEncoders: [MediaType: HTTPMessageEncoder],\n    httpDecoders: [MediaType: HTTPMessageDecoder],\n    dataEncoders: [MediaType: DataEncoder],\n    dataDecoders: [MediaType: DataDecoder]\n)",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 23,
            "key.substructure" : [

            ],
            "key.typename" : "(ContentCoders.Type) -> ([MediaType : HTTPMessageEncoder], [MediaType : HTTPMessageDecoder], [MediaType : DataEncoder], [MediaType : DataDecoder]) -> ContentCoders",
            "key.typeusr" : "$S12httpEncoders0A8Decoders04dataB00dC05Vapor13ContentCodersVSDy4Core9MediaTypeV4HTTP18HTTPMessageEncoder_pG_SDyAjK0L7Decoder_pGSDyAjH04DataM0_pGSDyAjH0oN0_pGtcD",
            "key.usr" : "s:5Vapor13ContentCodersV12httpEncoders0D8Decoders04dataE00gF0ACSDy4Core9MediaTypeV4HTTP18HTTPMessageEncoder_pG_SDyAjK0L7Decoder_pGSDyAjH04DataM0_pGSDyAjH0oN0_pGtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func requireHTTPEncoder(for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) throws -&gt; <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1478
              }
            ],
            "key.bodylength" : 512,
            "key.bodyoffset" : 1565,
            "key.doc.column" : 17,
            "key.doc.comment" : "Returns an `HTTPMessageEncoder` for the specified `MediaType` or throws an error.\n\n    let coder = try coders.requireHTTPEncoder(for: .json)\n\n- parameters:\n    - mediaType: An encoder for this `MediaType` will be returned.",
            "key.doc.declaration" : "public func requireHTTPEncoder(for mediaType: MediaType) throws -> HTTPMessageEncoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"41\" column=\"17\"><Name>requireHTTPEncoder(for:)<\/Name><USR>s:5Vapor13ContentCodersV18requireHTTPEncoder3for4HTTP18HTTPMessageEncoder_p4Core9MediaTypeV_tKF<\/USR><Declaration>public func requireHTTPEncoder(for mediaType: MediaType) throws -&gt; HTTPMessageEncoder<\/Declaration><CommentParts><Abstract><Para>Returns an <codeVoice>HTTPMessageEncoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice> or throws an error.<\/Para><\/Abstract><Parameters><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An encoder for this <codeVoice>MediaType<\/codeVoice> will be returned.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let coder = try coders.requireHTTPEncoder(for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 41,
            "key.doc.name" : "requireHTTPEncoder(for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "An encoder for this `MediaType` will be returned."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 265,
            "key.docoffset" : 1209,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireHTTPEncoder<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 593,
            "key.name" : "requireHTTPEncoder(for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 1490,
            "key.offset" : 1485,
            "key.parsed_declaration" : "public func requireHTTPEncoder(for mediaType: MediaType) throws -> HTTPMessageEncoder",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 41,
            "key.substructure" : [

            ],
            "key.typename" : "(ContentCoders) -> (MediaType) throws -> HTTPMessageEncoder",
            "key.typeusr" : "$S3for4HTTP18HTTPMessageEncoder_p4Core9MediaTypeV_tKcD",
            "key.usr" : "s:5Vapor13ContentCodersV18requireHTTPEncoder3for4HTTP18HTTPMessageEncoder_p4Core9MediaTypeV_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func requireHTTPDecoder(for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) throws -&gt; <Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2351
              }
            ],
            "key.bodylength" : 504,
            "key.bodyoffset" : 2438,
            "key.doc.column" : 17,
            "key.doc.comment" : "Returns a `HTTPMessageDecoder` for the specified `MediaType` or throws an error.\n\n    let coder = try coders.requireHTTPDecoder(for: .json)\n\n- parameters:\n    - mediaType: A decoder for this `MediaType` will be returned.",
            "key.doc.declaration" : "public func requireHTTPDecoder(for mediaType: MediaType) throws -> HTTPMessageDecoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"62\" column=\"17\"><Name>requireHTTPDecoder(for:)<\/Name><USR>s:5Vapor13ContentCodersV18requireHTTPDecoder3for4HTTP18HTTPMessageDecoder_p4Core9MediaTypeV_tKF<\/USR><Declaration>public func requireHTTPDecoder(for mediaType: MediaType) throws -&gt; HTTPMessageDecoder<\/Declaration><CommentParts><Abstract><Para>Returns a <codeVoice>HTTPMessageDecoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice> or throws an error.<\/Para><\/Abstract><Parameters><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A decoder for this <codeVoice>MediaType<\/codeVoice> will be returned.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let coder = try coders.requireHTTPDecoder(for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 62,
            "key.doc.name" : "requireHTTPDecoder(for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A decoder for this `MediaType` will be returned."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 263,
            "key.docoffset" : 2084,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireHTTPDecoder<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 585,
            "key.name" : "requireHTTPDecoder(for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 2363,
            "key.offset" : 2358,
            "key.parsed_declaration" : "public func requireHTTPDecoder(for mediaType: MediaType) throws -> HTTPMessageDecoder",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 62,
            "key.substructure" : [

            ],
            "key.typename" : "(ContentCoders) -> (MediaType) throws -> HTTPMessageDecoder",
            "key.typeusr" : "$S3for4HTTP18HTTPMessageDecoder_p4Core9MediaTypeV_tKcD",
            "key.usr" : "s:5Vapor13ContentCodersV18requireHTTPDecoder3for4HTTP18HTTPMessageDecoder_p4Core9MediaTypeV_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func requireDataEncoder(for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) throws -&gt; <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3210
              }
            ],
            "key.bodylength" : 490,
            "key.bodyoffset" : 3290,
            "key.doc.column" : 17,
            "key.doc.comment" : "Returns a `DataEncoder` for the specified `MediaType` or throws an error.\n\n    let coder = try coders.requireDataEncoder(for: .json)\n\n- parameters:\n    - mediaType: An encoder for this `MediaType` will be returned.",
            "key.doc.declaration" : "public func requireDataEncoder(for mediaType: MediaType) throws -> DataEncoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"83\" column=\"17\"><Name>requireDataEncoder(for:)<\/Name><USR>s:5Vapor13ContentCodersV18requireDataEncoder3for4Core0eF0_pAF9MediaTypeV_tKF<\/USR><Declaration>public func requireDataEncoder(for mediaType: MediaType) throws -&gt; DataEncoder<\/Declaration><CommentParts><Abstract><Para>Returns a <codeVoice>DataEncoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice> or throws an error.<\/Para><\/Abstract><Parameters><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An encoder for this <codeVoice>MediaType<\/codeVoice> will be returned.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let coder = try coders.requireDataEncoder(for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 83,
            "key.doc.name" : "requireDataEncoder(for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "An encoder for this `MediaType` will be returned."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 257,
            "key.docoffset" : 2949,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireDataEncoder<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 564,
            "key.name" : "requireDataEncoder(for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 3222,
            "key.offset" : 3217,
            "key.parsed_declaration" : "public func requireDataEncoder(for mediaType: MediaType) throws -> DataEncoder",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 83,
            "key.substructure" : [

            ],
            "key.typename" : "(ContentCoders) -> (MediaType) throws -> DataEncoder",
            "key.typeusr" : "$S3for4Core11DataEncoder_pAB9MediaTypeV_tKcD",
            "key.usr" : "s:5Vapor13ContentCodersV18requireDataEncoder3for4Core0eF0_pAF9MediaTypeV_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func requireDataDecoder(for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) throws -&gt; <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4047
              }
            ],
            "key.bodylength" : 490,
            "key.bodyoffset" : 4127,
            "key.doc.column" : 17,
            "key.doc.comment" : "Returns a `DataDecoder` for the specified `MediaType` or throws an error.\n\n    let coder = try coders.requireDataDecoder(for: .json)\n\n- parameters:\n    - mediaType: A decoder for this `MediaType` will be returned.",
            "key.doc.declaration" : "public func requireDataDecoder(for mediaType: MediaType) throws -> DataDecoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift\" line=\"104\" column=\"17\"><Name>requireDataDecoder(for:)<\/Name><USR>s:5Vapor13ContentCodersV18requireDataDecoder3for4Core0eF0_pAF9MediaTypeV_tKF<\/USR><Declaration>public func requireDataDecoder(for mediaType: MediaType) throws -&gt; DataDecoder<\/Declaration><CommentParts><Abstract><Para>Returns a <codeVoice>DataDecoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice> or throws an error.<\/Para><\/Abstract><Parameters><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A decoder for this <codeVoice>MediaType<\/codeVoice> will be returned.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let coder = try coders.requireDataDecoder(for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 104,
            "key.doc.name" : "requireDataDecoder(for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A decoder for this `MediaType` will be returned."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 256,
            "key.docoffset" : 3787,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentCoders.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireDataDecoder<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 564,
            "key.name" : "requireDataDecoder(for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 4059,
            "key.offset" : 4054,
            "key.parsed_declaration" : "public func requireDataDecoder(for mediaType: MediaType) throws -> DataDecoder",
            "key.parsed_scope.end" : 117,
            "key.parsed_scope.start" : 104,
            "key.substructure" : [

            ],
            "key.typename" : "(ContentCoders) -> (MediaType) throws -> DataDecoder",
            "key.typeusr" : "$S3for4Core11DataDecoder_pAB9MediaTypeV_tKcD",
            "key.usr" : "s:5Vapor13ContentCodersV18requireDataDecoder3for4Core0eF0_pAF9MediaTypeV_tKF"
          }
        ],
        "key.typename" : "ContentCoders.Type",
        "key.typeusr" : "$S5Vapor13ContentCodersVmD",
        "key.usr" : "s:5Vapor13ContentCodersV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 10371,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ContentConfig : <Type usr=\"s:7ServiceAAP\">Service<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 851
          }
        ],
        "key.bodylength" : 9467,
        "key.bodyoffset" : 902,
        "key.doc.column" : 15,
        "key.doc.comment" : "Configures which `Encoder`s and `Decoder`s to use when interacting with data in HTTP messages.\n\n    var contentConfig = ContentConfig()\n    contentConfig.use(encoder: JSONEncoder(), for: .json)\n    services.register(contentConfig)\n\nEach coder is registered to a specific `MediaType`. When _decoding_ content from HTTP messages,\nthe `MediaType` will be specified by the message itself. When _encoding_ content from HTTP messages,\nthe `MediaType` should be specified (`MediaType.json` is usually the assumed default).\n\n    try res.content.encode(\"hello\", as: .plainText)\n    print(res.mediaType) \/\/ .plainText\n    print(res.http.body) \/\/ \"hello\"\n\nMost often, these configured coders are used to encode and decode types conforming to `Content`.\nSee the `Content` protocol for more information.",
        "key.doc.declaration" : "public struct ContentConfig : Service, ServiceType",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Each coder is registered to a specific `MediaType`. When  content from HTTP messages, the `MediaType` will be specified by the message itself. When  content from HTTP messages, the `MediaType` should be specified (`MediaType.json` is usually the assumed default)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Most often, these configured coders are used to encode and decode types conforming to `Content`. See the `Content` protocol for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"17\" column=\"15\"><Name>ContentConfig<\/Name><USR>s:5Vapor13ContentConfigV<\/USR><Declaration>public struct ContentConfig : Service, ServiceType<\/Declaration><CommentParts><Abstract><Para>Configures which <codeVoice>Encoder<\/codeVoice>s and <codeVoice>Decoder<\/codeVoice>s to use when interacting with data in HTTP messages.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var contentConfig = ContentConfig()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[contentConfig.use(encoder: JSONEncoder(), for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(contentConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Each coder is registered to a specific <codeVoice>MediaType<\/codeVoice>. When <emphasis>decoding<\/emphasis> content from HTTP messages, the <codeVoice>MediaType<\/codeVoice> will be specified by the message itself. When <emphasis>encoding<\/emphasis> content from HTTP messages, the <codeVoice>MediaType<\/codeVoice> should be specified (<codeVoice>MediaType.json<\/codeVoice> is usually the assumed default).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try res.content.encode(\"hello\", as: .plainText)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res.mediaType) \/\/ .plainText]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res.http.body) \/\/ \"hello\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Most often, these configured coders are used to encode and decode types conforming to <codeVoice>Content<\/codeVoice>. See the <codeVoice>Content<\/codeVoice> protocol for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 17,
        "key.doc.name" : "ContentConfig",
        "key.doc.type" : "Class",
        "key.doclength" : 851,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 880
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 889
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ContentConfig<\/decl.name> : <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Service"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 9512,
        "key.name" : "ContentConfig",
        "key.namelength" : 13,
        "key.nameoffset" : 865,
        "key.offset" : 858,
        "key.parsed_declaration" : "public struct ContentConfig: Service, ServiceType",
        "key.parsed_scope.end" : 264,
        "key.parsed_scope.start" : 17,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Default",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 910
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`() -&gt; <Type usr=\"s:5Vapor13ContentConfigV\">ContentConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1159
              }
            ],
            "key.bodylength" : 1119,
            "key.bodyoffset" : 1208,
            "key.doc.column" : 24,
            "key.doc.comment" : "Creates a `ContentConfig` containing all of Vapor's default coders.\n\n    var contentConfig = ContentConfig.default()\n    \/\/ add or replace coders\n    services.register(contentConfig)",
            "key.doc.declaration" : "public static func `default`() -> ContentConfig",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"26\" column=\"24\"><Name>default()<\/Name><USR>s:5Vapor13ContentConfigV7defaultACyFZ<\/USR><Declaration>public static func `default`() -&gt; ContentConfig<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>ContentConfig<\/codeVoice> containing all of Vapor’s default coders.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var contentConfig = ContentConfig.default()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ add or replace coders]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(contentConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 26,
            "key.doc.name" : "default()",
            "key.doc.type" : "Function",
            "key.doclength" : 226,
            "key.docoffset" : 929,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor13ContentConfigV\">ContentConfig<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 1162,
            "key.name" : "default()",
            "key.namelength" : 11,
            "key.nameoffset" : 1178,
            "key.offset" : 1166,
            "key.parsed_declaration" : "public static func `default`() -> ContentConfig",
            "key.parsed_scope.end" : 56,
            "key.parsed_scope.start" : 26,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var config: <Type usr=\"s:5Vapor13ContentConfigV\">ContentConfig<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>config<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor13ContentConfigV\">ContentConfig<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 28,
                "key.name" : "config",
                "key.namelength" : 6,
                "key.nameoffset" : 1221,
                "key.offset" : 1217,
                "key.parsed_declaration" : "var config = ContentConfig()",
                "key.parsed_scope.end" : 27,
                "key.parsed_scope.start" : 27,
                "key.typename" : "ContentConfig",
                "key.typeusr" : "$S5Vapor13ContentConfigVD",
                "key.usr" : "s:5Vapor13ContentConfigV7defaultACyFZ6configL_ACvp"
              }
            ],
            "key.typename" : "(ContentConfig.Type) -> () -> ContentConfig",
            "key.typeusr" : "$S5Vapor13ContentConfigVycD",
            "key.usr" : "s:5Vapor13ContentConfigV7defaultACyFZ"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Service",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2337
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor13ContentConfigV\">ContentConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2383
              }
            ],
            "key.bodylength" : 44,
            "key.bodyoffset" : 2462,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> ContentConfig",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"61\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor13ContentConfigV11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; ContentConfig<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 61,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 2356,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor13ContentConfigV\">ContentConfig<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 117,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 2402,
            "key.offset" : 2390,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> ContentConfig",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 61,
            "key.substructure" : [

            ],
            "key.typename" : "(ContentConfig.Type) -> (Container) throws -> ContentConfig",
            "key.typeusr" : "$S3for5Vapor13ContentConfigV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor13ContentConfigV11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private typealias <Type usr=\"s:5Vapor13ContentConfigV\">ContentConfig<\/Type>.Lazy&lt;T&gt; = (<Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa1Txmfp\">T<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2562
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "Represents a yet-to-be-configured coder.",
            "key.doc.declaration" : "private typealias Vapor.ContentConfig.Lazy<T> = (Container) throws -> T",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"66\" column=\"23\"><Name>Lazy<\/Name><USR>s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa<\/USR><Declaration>private typealias Vapor.ContentConfig.Lazy&lt;T&gt; = (Container) throws -&gt; T<\/Declaration><CommentParts><Abstract><Para>Represents a yet-to-be-configured coder.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 66,
            "key.doc.name" : "Lazy",
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 2513,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:5Vapor13ContentConfigV\">ContentConfig<\/ref.struct>.<decl.name>Lazy<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa1Txmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; = (<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa1Txmfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 43,
            "key.name" : "Lazy",
            "key.namelength" : 4,
            "key.nameoffset" : 2580,
            "key.offset" : 2570,
            "key.parsed_declaration" : "private typealias Lazy<T> = (Container) throws -> T",
            "key.parsed_scope.end" : 66,
            "key.parsed_scope.start" : 66,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2585,
                "key.offset" : 2585,
                "key.parsed_declaration" : "private typealias Lazy<T> = (Container) throws -> T",
                "key.parsed_scope.end" : 66,
                "key.parsed_scope.start" : 66,
                "key.typename" : "T.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa1Txmfp"
              }
            ],
            "key.typename" : "((Container) throws -> T).Type",
            "key.typeusr" : "$Sx7Service9Container_pKcmD",
            "key.usr" : "s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var httpEncoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa\">Lazy<\/Type>&lt;<Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type>&gt;]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2661
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Configured `HTTPMessageEncoder`s.",
            "key.doc.declaration" : "private var httpEncoders: [MediaType : Lazy<HTTPMessageEncoder>]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"69\" column=\"17\"><Name>httpEncoders<\/Name><USR>s:5Vapor13ContentConfigV12httpEncoders33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLSDy4Core9MediaTypeV4HTTP18HTTPMessageEncoder_p7Service9Container_pKcGvp<\/USR><Declaration>private var httpEncoders: [MediaType : Lazy&lt;HTTPMessageEncoder&gt;]<\/Declaration><CommentParts><Abstract><Para>Configured <codeVoice>HTTPMessageEncoder<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 69,
            "key.doc.name" : "httpEncoders",
            "key.doc.type" : "Other",
            "key.doclength" : 38,
            "key.docoffset" : 2619,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>httpEncoders<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.typealias usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa\">Lazy<\/ref.typealias>&lt;<ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol>&gt;]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 55,
            "key.name" : "httpEncoders",
            "key.namelength" : 12,
            "key.nameoffset" : 2673,
            "key.offset" : 2669,
            "key.parsed_declaration" : "private var httpEncoders: [MediaType: Lazy<HTTPMessageEncoder>]",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 69,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[MediaType : (Container) throws -> HTTPMessageEncoder]",
            "key.typeusr" : "$SSDy4Core9MediaTypeV4HTTP18HTTPMessageEncoder_p7Service9Container_pKcGD",
            "key.usr" : "s:5Vapor13ContentConfigV12httpEncoders33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLSDy4Core9MediaTypeV4HTTP18HTTPMessageEncoder_p7Service9Container_pKcGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var httpDecoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa\">Lazy<\/Type>&lt;<Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type>&gt;]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2772
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Configured `HTTPMessageDecoder`s.",
            "key.doc.declaration" : "private var httpDecoders: [MediaType : Lazy<HTTPMessageDecoder>]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"72\" column=\"17\"><Name>httpDecoders<\/Name><USR>s:5Vapor13ContentConfigV12httpDecoders33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLSDy4Core9MediaTypeV4HTTP18HTTPMessageDecoder_p7Service9Container_pKcGvp<\/USR><Declaration>private var httpDecoders: [MediaType : Lazy&lt;HTTPMessageDecoder&gt;]<\/Declaration><CommentParts><Abstract><Para>Configured <codeVoice>HTTPMessageDecoder<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 72,
            "key.doc.name" : "httpDecoders",
            "key.doc.type" : "Other",
            "key.doclength" : 38,
            "key.docoffset" : 2730,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>httpDecoders<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.typealias usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa\">Lazy<\/ref.typealias>&lt;<ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol>&gt;]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 55,
            "key.name" : "httpDecoders",
            "key.namelength" : 12,
            "key.nameoffset" : 2784,
            "key.offset" : 2780,
            "key.parsed_declaration" : "private var httpDecoders: [MediaType: Lazy<HTTPMessageDecoder>]",
            "key.parsed_scope.end" : 72,
            "key.parsed_scope.start" : 72,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[MediaType : (Container) throws -> HTTPMessageDecoder]",
            "key.typeusr" : "$SSDy4Core9MediaTypeV4HTTP18HTTPMessageDecoder_p7Service9Container_pKcGD",
            "key.usr" : "s:5Vapor13ContentConfigV12httpDecoders33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLSDy4Core9MediaTypeV4HTTP18HTTPMessageDecoder_p7Service9Container_pKcGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var dataEncoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa\">Lazy<\/Type>&lt;<Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type>&gt;]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2876
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Configured `DataEncoder`s.",
            "key.doc.declaration" : "private var dataEncoders: [MediaType : Lazy<DataEncoder>]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"75\" column=\"17\"><Name>dataEncoders<\/Name><USR>s:5Vapor13ContentConfigV12dataEncoders33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLSDy4Core9MediaTypeVAF11DataEncoder_p7Service9Container_pKcGvp<\/USR><Declaration>private var dataEncoders: [MediaType : Lazy&lt;DataEncoder&gt;]<\/Declaration><CommentParts><Abstract><Para>Configured <codeVoice>DataEncoder<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 75,
            "key.doc.name" : "dataEncoders",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 2841,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dataEncoders<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.typealias usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa\">Lazy<\/ref.typealias>&lt;<ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol>&gt;]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 48,
            "key.name" : "dataEncoders",
            "key.namelength" : 12,
            "key.nameoffset" : 2888,
            "key.offset" : 2884,
            "key.parsed_declaration" : "private var dataEncoders: [MediaType: Lazy<DataEncoder>]",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 75,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[MediaType : (Container) throws -> DataEncoder]",
            "key.typeusr" : "$SSDy4Core9MediaTypeVAA11DataEncoder_p7Service9Container_pKcGD",
            "key.usr" : "s:5Vapor13ContentConfigV12dataEncoders33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLSDy4Core9MediaTypeVAF11DataEncoder_p7Service9Container_pKcGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var dataDecoders: [<Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> : <Type usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa\">Lazy<\/Type>&lt;<Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type>&gt;]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2973
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Configured `DataDecoder`s.",
            "key.doc.declaration" : "private var dataDecoders: [MediaType : Lazy<DataDecoder>]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"78\" column=\"17\"><Name>dataDecoders<\/Name><USR>s:5Vapor13ContentConfigV12dataDecoders33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLSDy4Core9MediaTypeVAF11DataDecoder_p7Service9Container_pKcGvp<\/USR><Declaration>private var dataDecoders: [MediaType : Lazy&lt;DataDecoder&gt;]<\/Declaration><CommentParts><Abstract><Para>Configured <codeVoice>DataDecoder<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 78,
            "key.doc.name" : "dataDecoders",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 2938,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dataDecoders<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct> : <ref.typealias usr=\"s:5Vapor13ContentConfigV4Lazy33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLa\">Lazy<\/ref.typealias>&lt;<ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol>&gt;]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 48,
            "key.name" : "dataDecoders",
            "key.namelength" : 12,
            "key.nameoffset" : 2985,
            "key.offset" : 2981,
            "key.parsed_declaration" : "private var dataDecoders: [MediaType: Lazy<DataDecoder>]",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 78,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[MediaType : (Container) throws -> DataDecoder]",
            "key.typeusr" : "$SSDy4Core9MediaTypeVAA11DataDecoder_p7Service9Container_pKcGD",
            "key.usr" : "s:5Vapor13ContentConfigV12dataDecoders33_8D41B3EE5344B11D8E2DEDA3C83A4BD4LLSDy4Core9MediaTypeVAF11DataDecoder_p7Service9Container_pKcGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: Init",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3038
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3099
              }
            ],
            "key.bodylength" : 133,
            "key.bodyoffset" : 3114,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new, empty `ContentConfig`.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"83\" column=\"12\"><Name>init()<\/Name><USR>s:5Vapor13ContentConfigVACycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create a new, empty <codeVoice>ContentConfig<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 83,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 41,
            "key.docoffset" : 3054,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 142,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 3106,
            "key.offset" : 3106,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 88,
            "key.parsed_scope.start" : 83,
            "key.substructure" : [

            ],
            "key.typename" : "(ContentConfig.Type) -> () -> ContentConfig",
            "key.typeusr" : "$S5Vapor13ContentConfigVycD",
            "key.usr" : "s:5Vapor13ContentConfigVACycfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: Message & Data",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3257
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use(encoder: <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type> &amp; <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type>, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 3590
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3583
              }
            ],
            "key.bodylength" : 105,
            "key.bodyoffset" : 3678,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `HTTPMessage` and `DataEncoder` for the specified `MediaType`.\n\n    contentConfig.use(encoder: JSONEncoder(), for: .json)\n\n- parameters:\n    - encoder: `Encoder` to use.\n    - mediaType: `Encoder` will be used to encode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use(encoder: HTTPMessageEncoder & DataEncoder, for mediaType: MediaType)",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"99\" column=\"26\"><Name>use(encoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF<\/USR><Declaration>public mutating func use(encoder: HTTPMessageEncoder &amp; DataEncoder, for mediaType: MediaType)<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>HTTPMessage<\/codeVoice> and <codeVoice>DataEncoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>encoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Encoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Encoder<\/codeVoice> will be used to encode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(encoder: JSONEncoder(), for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 99,
            "key.doc.name" : "use(encoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Encoder` to use."
                  }
                ],
                "name" : "encoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Encoder` will be used to encode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 296,
            "key.docoffset" : 3283,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>encoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol> &amp; <ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 185,
            "key.name" : "use(encoder:for:)",
            "key.namelength" : 72,
            "key.nameoffset" : 3604,
            "key.offset" : 3599,
            "key.parsed_declaration" : "public mutating func use(encoder: HTTPMessageEncoder & DataEncoder, for mediaType: MediaType)",
            "key.parsed_scope.end" : 102,
            "key.parsed_scope.start" : 99,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout ContentConfig) -> (DataEncoder & HTTPMessageEncoder, MediaType) -> ()",
            "key.typeusr" : "$S7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageE0p_AC9MediaTypeVtcD",
            "key.usr" : "s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use(decoder: <Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type> &amp; <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type>, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 4097
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4090
              }
            ],
            "key.bodylength" : 105,
            "key.bodyoffset" : 4185,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `HTTPMessage` and `DataDecoder` for the specified `MediaType`.\n\n    contentConfig.use(decoder: JSONDecoder(), for: .json)\n\n- parameters:\n    - decoder: `Decoder` to use.\n    - mediaType: `Decoder` will be used to decode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use(decoder: HTTPMessageDecoder & DataDecoder, for mediaType: MediaType)",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"111\" column=\"26\"><Name>use(decoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF<\/USR><Declaration>public mutating func use(decoder: HTTPMessageDecoder &amp; DataDecoder, for mediaType: MediaType)<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>HTTPMessage<\/codeVoice> and <codeVoice>DataDecoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>decoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Decoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Decoder<\/codeVoice> will be used to decode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(decoder: JSONDecoder(), for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 111,
            "key.doc.name" : "use(decoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Decoder` to use."
                  }
                ],
                "name" : "decoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Decoder` will be used to decode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 296,
            "key.docoffset" : 3790,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>decoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol> &amp; <ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 185,
            "key.name" : "use(decoder:for:)",
            "key.namelength" : 72,
            "key.nameoffset" : 4111,
            "key.offset" : 4106,
            "key.parsed_declaration" : "public mutating func use(decoder: HTTPMessageDecoder & DataDecoder, for mediaType: MediaType)",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 111,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout ContentConfig) -> (DataDecoder & HTTPMessageDecoder, MediaType) -> ()",
            "key.typeusr" : "$S7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageE0p_AC9MediaTypeVtcD",
            "key.usr" : "s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use&lt;B&gt;(encoder: <Type usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF1BL_xmfp\">B<\/Type>.Type, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) where B : <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type>, B : <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 4698
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4691
              }
            ],
            "key.bodylength" : 105,
            "key.bodyoffset" : 4805,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `HTTPMessage` and `DataEncoder` by type for the specified `MediaType`.\n- note: The type will be resolved from the service-container at boot.\n\n    contentConfig.use(encoder: JSONEncoder.self, for: .json)\n\n- parameters:\n    - encoder: `Encoder` type to use.\n    - mediaType: `Encoder` will be used to encode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use<B>(encoder: B.Type, for mediaType: MediaType) where B : DataEncoder, B : HTTPMessageEncoder",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"124\" column=\"26\"><Name>use(encoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF<\/USR><Declaration>public mutating func use&lt;B&gt;(encoder: B.Type, for mediaType: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>HTTPMessage<\/codeVoice> and <codeVoice>DataEncoder<\/codeVoice> by type for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>encoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Encoder<\/codeVoice> type to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Encoder<\/codeVoice> will be used to encode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>The type will be resolved from the service-container at boot.<\/Para><Para>contentConfig.use(encoder: JSONEncoder.self, for: .json)<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 124,
            "key.doc.name" : "use(encoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Encoder` type to use."
                  }
                ],
                "name" : "encoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Encoder` will be used to encode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 390,
            "key.docoffset" : 4297,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF1BL_xmfp\"><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>encoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF1BL_xmfp\">B<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>B : <ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>B : <ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 204,
            "key.name" : "use(encoder:for:)",
            "key.namelength" : 49,
            "key.nameoffset" : 4712,
            "key.offset" : 4707,
            "key.parsed_declaration" : "public mutating func use<B>(encoder: B.Type, for mediaType: MediaType) where B: HTTPMessageEncoder & DataEncoder",
            "key.parsed_scope.end" : 127,
            "key.parsed_scope.start" : 124,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>B<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "B",
                "key.namelength" : 1,
                "key.nameoffset" : 4716,
                "key.offset" : 4716,
                "key.parsed_declaration" : "public mutating func use<B>(encoder: B.Type, for mediaType: MediaType) where B: HTTPMessageEncoder & DataEncoder",
                "key.parsed_scope.end" : 124,
                "key.parsed_scope.start" : 124,
                "key.typename" : "B.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF1BL_xmfp"
              }
            ],
            "key.typename" : "<B where B : DataEncoder, B : HTTPMessageEncoder> (inout ContentConfig) -> (B.Type, MediaType) -> ()",
            "key.typeusr" : "$S7encoder3foryxm_4Core9MediaTypeVtcAC11DataEncoderRz4HTTP011HTTPMessageG0RzluD",
            "key.usr" : "s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use&lt;B&gt;(decoder: <Type usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF1BL_xmfp\">B<\/Type>.Type, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) where B : <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type>, B : <Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 5318
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5311
              }
            ],
            "key.bodylength" : 105,
            "key.bodyoffset" : 5425,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `HTTPMessage` and `DataDecoder` by type for the specified `MediaType`.\n- note: The type will be resolved from the service-container at boot.\n\n    contentConfig.use(decoder: JSONDecoder.self, for: .json)\n\n- parameters:\n    - decoder: `Decoder` type to use.\n    - mediaType: `Decoder` will be used to decode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use<B>(decoder: B.Type, for mediaType: MediaType) where B : DataDecoder, B : HTTPMessageDecoder",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"137\" column=\"26\"><Name>use(decoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF<\/USR><Declaration>public mutating func use&lt;B&gt;(decoder: B.Type, for mediaType: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>HTTPMessage<\/codeVoice> and <codeVoice>DataDecoder<\/codeVoice> by type for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>decoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Decoder<\/codeVoice> type to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Decoder<\/codeVoice> will be used to decode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Note><Para>The type will be resolved from the service-container at boot.<\/Para><Para>contentConfig.use(decoder: JSONDecoder.self, for: .json)<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 137,
            "key.doc.name" : "use(decoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Decoder` type to use."
                  }
                ],
                "name" : "decoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Decoder` will be used to decode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 390,
            "key.docoffset" : 4917,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF1BL_xmfp\"><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>decoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF1BL_xmfp\">B<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>B : <ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>B : <ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 204,
            "key.name" : "use(decoder:for:)",
            "key.namelength" : 49,
            "key.nameoffset" : 5332,
            "key.offset" : 5327,
            "key.parsed_declaration" : "public mutating func use<B>(decoder: B.Type, for mediaType: MediaType) where B: HTTPMessageDecoder & DataDecoder",
            "key.parsed_scope.end" : 140,
            "key.parsed_scope.start" : 137,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>B<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "B",
                "key.namelength" : 1,
                "key.nameoffset" : 5336,
                "key.offset" : 5336,
                "key.parsed_declaration" : "public mutating func use<B>(decoder: B.Type, for mediaType: MediaType) where B: HTTPMessageDecoder & DataDecoder",
                "key.parsed_scope.end" : 137,
                "key.parsed_scope.start" : 137,
                "key.typename" : "B.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF1BL_xmfp"
              }
            ],
            "key.typename" : "<B where B : DataDecoder, B : HTTPMessageDecoder> (inout ContentConfig) -> (B.Type, MediaType) -> ()",
            "key.typeusr" : "$S7decoder3foryxm_4Core9MediaTypeVtcAC11DataDecoderRz4HTTP011HTTPMessageG0RzluD",
            "key.usr" : "s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Message",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 5540
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use(httpEncoder: <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type>, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 5885
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5878
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 5963,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `HTTPMessageEncoder` for the specified `MediaType`.\n\n    contentConfig.use(httpEncoder: JSONEncoder(), for: .json)\n\n- parameters:\n    - httpEncoder: `HTTPMessageEncoder` to use.\n    - mediaType: `HTTPMessageEncoder` will be used to encode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use(httpEncoder: HTTPMessageEncoder, for mediaType: MediaType)",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"151\" column=\"26\"><Name>use(httpEncoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF<\/USR><Declaration>public mutating func use(httpEncoder: HTTPMessageEncoder, for mediaType: MediaType)<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>HTTPMessageEncoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>httpEncoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMessageEncoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMessageEncoder<\/codeVoice> will be used to encode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(httpEncoder: JSONEncoder(), for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 151,
            "key.doc.name" : "use(httpEncoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMessageEncoder` to use."
                  }
                ],
                "name" : "httpEncoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMessageEncoder` will be used to encode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 315,
            "key.docoffset" : 5559,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>httpEncoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 170,
            "key.name" : "use(httpEncoder:for:)",
            "key.namelength" : 62,
            "key.nameoffset" : 5899,
            "key.offset" : 5894,
            "key.parsed_declaration" : "public mutating func use(httpEncoder: HTTPMessageEncoder, for mediaType: MediaType)",
            "key.parsed_scope.end" : 155,
            "key.parsed_scope.start" : 151,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout ContentConfig) -> (HTTPMessageEncoder, MediaType) -> ()",
            "key.typeusr" : "$S11httpEncoder3fory4HTTP011HTTPMessageB0_p_4Core9MediaTypeVtcD",
            "key.usr" : "s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use(httpDecoder: <Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type>, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 6396
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6389
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 6474,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `HTTPMessageDecoder` for the specified `MediaType`.\n\n    contentConfig.use(httpDecoder: JSONDecoder(), for: .json)\n\n- parameters:\n    - httpDecoder: `HTTPMessageDecoder` to use.\n    - mediaType: `HTTPMessageDecoder` will be used to decode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use(httpDecoder: HTTPMessageDecoder, for mediaType: MediaType)",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"164\" column=\"26\"><Name>use(httpDecoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF<\/USR><Declaration>public mutating func use(httpDecoder: HTTPMessageDecoder, for mediaType: MediaType)<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>HTTPMessageDecoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>httpDecoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMessageDecoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMessageDecoder<\/codeVoice> will be used to decode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(httpDecoder: JSONDecoder(), for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 164,
            "key.doc.name" : "use(httpDecoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMessageDecoder` to use."
                  }
                ],
                "name" : "httpDecoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMessageDecoder` will be used to decode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 315,
            "key.docoffset" : 6070,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>httpDecoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 170,
            "key.name" : "use(httpDecoder:for:)",
            "key.namelength" : 62,
            "key.nameoffset" : 6410,
            "key.offset" : 6405,
            "key.parsed_declaration" : "public mutating func use(httpDecoder: HTTPMessageDecoder, for mediaType: MediaType)",
            "key.parsed_scope.end" : 168,
            "key.parsed_scope.start" : 164,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout ContentConfig) -> (HTTPMessageDecoder, MediaType) -> ()",
            "key.typeusr" : "$S11httpDecoder3fory4HTTP011HTTPMessageB0_p_4Core9MediaTypeVtcD",
            "key.usr" : "s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use&lt;B&gt;(httpEncoder: <Type usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF1BL_xmfp\">B<\/Type>.Type, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) where B : <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 6923
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6916
              }
            ],
            "key.bodylength" : 115,
            "key.bodyoffset" : 7020,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `HTTPMessageEncoder` by type for the specified `MediaType`.\n\n    contentConfig.use(httpEncoder: JSONEncoder.self, for: .json)\n\n- parameters:\n    - httpEncoder: `HTTPMessageEncoder` type to use.\n    - mediaType: `HTTPMessageEncoder` will be used to encode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use<B>(httpEncoder: B.Type, for mediaType: MediaType) where B : HTTPMessageEncoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"177\" column=\"26\"><Name>use(httpEncoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF<\/USR><Declaration>public mutating func use&lt;B&gt;(httpEncoder: B.Type, for mediaType: MediaType) where B : HTTPMessageEncoder<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>HTTPMessageEncoder<\/codeVoice> by type for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>httpEncoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMessageEncoder<\/codeVoice> type to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMessageEncoder<\/codeVoice> will be used to encode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(httpEncoder: JSONEncoder.self, for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 177,
            "key.doc.name" : "use(httpEncoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMessageEncoder` type to use."
                  }
                ],
                "name" : "httpEncoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMessageEncoder` will be used to encode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 331,
            "key.docoffset" : 6581,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF1BL_xmfp\"><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>httpEncoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF1BL_xmfp\">B<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>B : <ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 204,
            "key.name" : "use(httpEncoder:for:)",
            "key.namelength" : 53,
            "key.nameoffset" : 6937,
            "key.offset" : 6932,
            "key.parsed_declaration" : "public mutating func use<B>(httpEncoder: B.Type, for mediaType: MediaType) where B: HTTPMessageEncoder",
            "key.parsed_scope.end" : 181,
            "key.parsed_scope.start" : 177,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>B<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "B",
                "key.namelength" : 1,
                "key.nameoffset" : 6941,
                "key.offset" : 6941,
                "key.parsed_declaration" : "public mutating func use<B>(httpEncoder: B.Type, for mediaType: MediaType) where B: HTTPMessageEncoder",
                "key.parsed_scope.end" : 177,
                "key.parsed_scope.start" : 177,
                "key.typename" : "B.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF1BL_xmfp"
              }
            ],
            "key.typename" : "<B where B : HTTPMessageEncoder> (inout ContentConfig) -> (B.Type, MediaType) -> ()",
            "key.typeusr" : "$S11httpEncoder3foryxm_4Core9MediaTypeVtc4HTTP011HTTPMessageB0RzluD",
            "key.usr" : "s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use&lt;B&gt;(httpDecoder: <Type usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF1BL_xmfp\">B<\/Type>.Type, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) where B : <Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 7484
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7477
              }
            ],
            "key.bodylength" : 115,
            "key.bodyoffset" : 7581,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `HTTPMessageDecoder` by type for the specified `MediaType`.\n\n    contentConfig.use(httpDecoder: JSONDecoder.self, for: .json)\n\n- parameters:\n    - httpDecoder: `HTTPMessageDecoder` type to use.\n    - mediaType: `HTTPMessageDecoder` will be used to decode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use<B>(httpDecoder: B.Type, for mediaType: MediaType) where B : HTTPMessageDecoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"190\" column=\"26\"><Name>use(httpDecoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF<\/USR><Declaration>public mutating func use&lt;B&gt;(httpDecoder: B.Type, for mediaType: MediaType) where B : HTTPMessageDecoder<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>HTTPMessageDecoder<\/codeVoice> by type for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>httpDecoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMessageDecoder<\/codeVoice> type to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMessageDecoder<\/codeVoice> will be used to decode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(httpDecoder: JSONDecoder.self, for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 190,
            "key.doc.name" : "use(httpDecoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMessageDecoder` type to use."
                  }
                ],
                "name" : "httpDecoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMessageDecoder` will be used to decode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 331,
            "key.docoffset" : 7142,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF1BL_xmfp\"><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>httpDecoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF1BL_xmfp\">B<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>B : <ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 204,
            "key.name" : "use(httpDecoder:for:)",
            "key.namelength" : 53,
            "key.nameoffset" : 7498,
            "key.offset" : 7493,
            "key.parsed_declaration" : "public mutating func use<B>(httpDecoder: B.Type, for mediaType: MediaType) where B: HTTPMessageDecoder",
            "key.parsed_scope.end" : 194,
            "key.parsed_scope.start" : 190,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>B<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>B<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "B",
                "key.namelength" : 1,
                "key.nameoffset" : 7502,
                "key.offset" : 7502,
                "key.parsed_declaration" : "public mutating func use<B>(httpDecoder: B.Type, for mediaType: MediaType) where B: HTTPMessageDecoder",
                "key.parsed_scope.end" : 190,
                "key.parsed_scope.start" : 190,
                "key.typename" : "B.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF1BL_xmfp"
              }
            ],
            "key.typename" : "<B where B : HTTPMessageDecoder> (inout ContentConfig) -> (B.Type, MediaType) -> ()",
            "key.typeusr" : "$S11httpDecoder3foryxm_4Core9MediaTypeVtc4HTTP011HTTPMessageB0RzluD",
            "key.usr" : "s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: Data",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 7706
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use(dataEncoder: <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type>, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 8027
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8020
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 8098,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `DataEncoder` for the specified `MediaType`.\n\n    contentConfig.use(dataEncoder: JSONEncoder(), for: .json)\n\n- parameters:\n    - dataEncoder: `DataEncoder` to use.\n    - mediaType: `DataEncoder` will be used to encode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use(dataEncoder: DataEncoder, for mediaType: MediaType)",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"205\" column=\"26\"><Name>use(dataEncoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF<\/USR><Declaration>public mutating func use(dataEncoder: DataEncoder, for mediaType: MediaType)<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>DataEncoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>dataEncoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>DataEncoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>DataEncoder<\/codeVoice> will be used to encode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(dataEncoder: JSONEncoder(), for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 205,
            "key.doc.name" : "use(dataEncoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`DataEncoder` to use."
                  }
                ],
                "name" : "dataEncoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`DataEncoder` will be used to encode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 294,
            "key.docoffset" : 7722,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>dataEncoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 163,
            "key.name" : "use(dataEncoder:for:)",
            "key.namelength" : 55,
            "key.nameoffset" : 8041,
            "key.offset" : 8036,
            "key.parsed_declaration" : "public mutating func use(dataEncoder: DataEncoder, for mediaType: MediaType)",
            "key.parsed_scope.end" : 209,
            "key.parsed_scope.start" : 205,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout ContentConfig) -> (DataEncoder, MediaType) -> ()",
            "key.typeusr" : "$S11dataEncoder3fory4Core04DataB0_p_AC9MediaTypeVtcD",
            "key.usr" : "s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use(dataDecoder: <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type>, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 8510
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8503
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 8581,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `DataDecoder` for the specified `MediaType`.\n\n    contentConfig.use(dataDecoder: JSONDecoder(), for: .json)\n\n- parameters:\n    - dataDecoder: `DataDecoder` to use.\n    - mediaType: `DataDecoder` will be used to decode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use(dataDecoder: DataDecoder, for mediaType: MediaType)",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"218\" column=\"26\"><Name>use(dataDecoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF<\/USR><Declaration>public mutating func use(dataDecoder: DataDecoder, for mediaType: MediaType)<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>DataDecoder<\/codeVoice> for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>dataDecoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>DataDecoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>DataDecoder<\/codeVoice> will be used to decode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(dataDecoder: JSONDecoder(), for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 218,
            "key.doc.name" : "use(dataDecoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`DataDecoder` to use."
                  }
                ],
                "name" : "dataDecoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`DataDecoder` will be used to decode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 294,
            "key.docoffset" : 8205,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>dataDecoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 163,
            "key.name" : "use(dataDecoder:for:)",
            "key.namelength" : 55,
            "key.nameoffset" : 8524,
            "key.offset" : 8519,
            "key.parsed_declaration" : "public mutating func use(dataDecoder: DataDecoder, for mediaType: MediaType)",
            "key.parsed_scope.end" : 222,
            "key.parsed_scope.start" : 218,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(inout ContentConfig) -> (DataDecoder, MediaType) -> ()",
            "key.typeusr" : "$S11dataDecoder3fory4Core04DataB0_p_AC9MediaTypeVtcD",
            "key.usr" : "s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use&lt;D&gt;(dataEncoder: <Type usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF1DL_xmfp\">D<\/Type>.Type, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) where D : <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 9009
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9002
              }
            ],
            "key.bodylength" : 115,
            "key.bodyoffset" : 9099,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `DataEncoder` by type for the specified `MediaType`.\n\n    contentConfig.use(dataEncoder: JSONEncoder.self, for: .json)\n\n- parameters:\n    - dataEncoder: `DataEncoder` type to use.\n    - mediaType: `DataEncoder` will be used to encode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use<D>(dataEncoder: D.Type, for mediaType: MediaType) where D : DataEncoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"231\" column=\"26\"><Name>use(dataEncoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF<\/USR><Declaration>public mutating func use&lt;D&gt;(dataEncoder: D.Type, for mediaType: MediaType) where D : DataEncoder<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>DataEncoder<\/codeVoice> by type for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>dataEncoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>DataEncoder<\/codeVoice> type to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>DataEncoder<\/codeVoice> will be used to encode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(dataEncoder: JSONEncoder.self, for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 231,
            "key.doc.name" : "use(dataEncoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`DataEncoder` type to use."
                  }
                ],
                "name" : "dataEncoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`DataEncoder` will be used to encode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 310,
            "key.docoffset" : 8688,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>dataEncoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 197,
            "key.name" : "use(dataEncoder:for:)",
            "key.namelength" : 53,
            "key.nameoffset" : 9023,
            "key.offset" : 9018,
            "key.parsed_declaration" : "public mutating func use<D>(dataEncoder: D.Type, for mediaType: MediaType) where D: DataEncoder",
            "key.parsed_scope.end" : 235,
            "key.parsed_scope.start" : 231,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataDecoder: D.Type, for: MediaType) where D : DataDecoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 9027,
                "key.offset" : 9027,
                "key.parsed_declaration" : "public mutating func use<D>(dataEncoder: D.Type, for mediaType: MediaType) where D: DataEncoder",
                "key.parsed_scope.end" : 231,
                "key.parsed_scope.start" : 231,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : DataEncoder> (inout ContentConfig) -> (D.Type, MediaType) -> ()",
            "key.typeusr" : "$S11dataEncoder3foryxm_4Core9MediaTypeVtcAC04DataB0RzluD",
            "key.usr" : "s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use&lt;D&gt;(dataDecoder: <Type usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF1DL_xmfp\">D<\/Type>.Type, for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) where D : <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 9542
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9535
              }
            ],
            "key.bodylength" : 115,
            "key.bodyoffset" : 9632,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds an `DataDecoder` by type for the specified `MediaType`.\n\n    contentConfig.use(dataDecoder: JSONDecoder.self, for: .json)\n\n- parameters:\n    - dataDecoder: `DataDecoder` type to use.\n    - mediaType: `DataDecoder` will be used to decode this `MediaType`.",
            "key.doc.declaration" : "public mutating func use<D>(dataDecoder: D.Type, for mediaType: MediaType) where D : DataDecoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"244\" column=\"26\"><Name>use(dataDecoder:for:)<\/Name><USR>s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF<\/USR><Declaration>public mutating func use&lt;D&gt;(dataDecoder: D.Type, for mediaType: MediaType) where D : DataDecoder<\/Declaration><CommentParts><Abstract><Para>Adds an <codeVoice>DataDecoder<\/codeVoice> by type for the specified <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>dataDecoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>DataDecoder<\/codeVoice> type to use.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>DataDecoder<\/codeVoice> will be used to decode this <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[contentConfig.use(dataDecoder: JSONDecoder.self, for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 244,
            "key.doc.name" : "use(dataDecoder:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`DataDecoder` type to use."
                  }
                ],
                "name" : "dataDecoder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`DataDecoder` will be used to decode this `MediaType`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 310,
            "key.docoffset" : 9221,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>dataDecoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 197,
            "key.name" : "use(dataDecoder:for:)",
            "key.namelength" : 53,
            "key.nameoffset" : 9556,
            "key.offset" : 9551,
            "key.parsed_declaration" : "public mutating func use<D>(dataDecoder: D.Type, for mediaType: MediaType) where D: DataDecoder",
            "key.parsed_scope.end" : 248,
            "key.parsed_scope.start" : 244,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3fory4Core11DataEncoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(encoder: HTTPMessageEncoder &amp; DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3fory4Core11DataDecoder_4HTTP011HTTPMessageI0p_AG9MediaTypeVtF\">use(decoder: HTTPMessageDecoder &amp; DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7encoder3foryxm_4Core9MediaTypeVtAG11DataEncoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(encoder: B.Type, for: MediaType) where B : DataEncoder, B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use7decoder3foryxm_4Core9MediaTypeVtAG11DataDecoderRz4HTTP011HTTPMessageK0RzlF\">use&lt;B&gt;(decoder: B.Type, for: MediaType) where B : DataDecoder, B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpEncoder: HTTPMessageEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3fory4HTTP011HTTPMessageF0_p_4Core9MediaTypeVtF\">use(httpDecoder: HTTPMessageDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpEncoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpEncoder: B.Type, for: MediaType) where B : HTTPMessageEncoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11httpDecoder3foryxm_4Core9MediaTypeVt4HTTP011HTTPMessageF0RzlF\">use&lt;B&gt;(httpDecoder: B.Type, for: MediaType) where B : HTTPMessageDecoder<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataEncoder: DataEncoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataDecoder3fory4Core04DataF0_p_AG9MediaTypeVtF\">use(dataDecoder: DataDecoder, for: MediaType)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor13ContentConfigV3use11dataEncoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF\">use&lt;D&gt;(dataEncoder: D.Type, for: MediaType) where D : DataEncoder<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 9560,
                "key.offset" : 9560,
                "key.parsed_declaration" : "public mutating func use<D>(dataDecoder: D.Type, for mediaType: MediaType) where D: DataDecoder",
                "key.parsed_scope.end" : 244,
                "key.parsed_scope.start" : 244,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : DataDecoder> (inout ContentConfig) -> (D.Type, MediaType) -> ()",
            "key.typeusr" : "$S11dataDecoder3foryxm_4Core9MediaTypeVtcAC04DataB0RzluD",
            "key.usr" : "s:5Vapor13ContentConfigV3use11dataDecoder3foryxm_4Core9MediaTypeVtAG04DataF0RzlF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Resolve",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 9757
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func resolve(on container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9961
              }
            ],
            "key.bodylength" : 336,
            "key.bodyoffset" : 10031,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `ContentCoders` for this `ContentConfig` using the supplied `Container`.\n\n- parameters:\n    - container: `Container` to resolve coder types on.",
            "key.doc.declaration" : "public func resolve(on container: Container) throws -> ContentCoders",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift\" line=\"256\" column=\"17\"><Name>resolve(on:)<\/Name><USR>s:5Vapor13ContentConfigV7resolve2onAA0B6CodersV7Service9Container_p_tKF<\/USR><Declaration>public func resolve(on container: Container) throws -&gt; ContentCoders<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>ContentCoders<\/codeVoice> for this <codeVoice>ContentConfig<\/codeVoice> using the supplied <codeVoice>Container<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>container<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Container<\/codeVoice> to resolve coder types on.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 256,
            "key.doc.name" : "resolve(on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Container` to resolve coder types on."
                  }
                ],
                "name" : "container"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 181,
            "key.docoffset" : 9776,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>resolve<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 400,
            "key.name" : "resolve(on:)",
            "key.namelength" : 32,
            "key.nameoffset" : 9973,
            "key.offset" : 9968,
            "key.parsed_declaration" : "public func resolve(on container: Container) throws -> ContentCoders",
            "key.parsed_scope.end" : 263,
            "key.parsed_scope.start" : 256,
            "key.substructure" : [

            ],
            "key.typename" : "(ContentConfig) -> (Container) throws -> ContentCoders",
            "key.typeusr" : "$S2on5Vapor13ContentCodersV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor13ContentConfigV7resolve2onAA0B6CodersV7Service9Container_p_tKF"
          }
        ],
        "key.typename" : "ContentConfig.Type",
        "key.typeusr" : "$S5Vapor13ContentConfigVmD",
        "key.usr" : "s:5Vapor13ContentConfigV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 15910,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ContentContainer&lt;M&gt; where M : <Type usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 170
          }
        ],
        "key.bodylength" : 15673,
        "key.bodyoffset" : 235,
        "key.doc.column" : 15,
        "key.doc.comment" : "Helper for encoding and decoding `Content` from an HTTP message.\n\n    req.content.decode(User.self)\n\nSee `Request` and `Response` for more information.",
        "key.doc.declaration" : "public struct ContentContainer<M> where M : HTTPMessageContainer",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `Request` and `Response` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"6\" column=\"15\"><Name>ContentContainer<\/Name><USR>s:5Vapor16ContentContainerV<\/USR><Declaration>public struct ContentContainer&lt;M&gt; where M : HTTPMessageContainer<\/Declaration><CommentParts><Abstract><Para>Helper for encoding and decoding <codeVoice>Content<\/codeVoice> from an HTTP message.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[req.content.decode(User.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>Request<\/codeVoice> and <codeVoice>Response<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 6,
        "key.doc.name" : "ContentContainer",
        "key.doc.type" : "Class",
        "key.doclength" : 170,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ContentContainer<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV1Mxmfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>M : <ref.protocol usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 15732,
        "key.name" : "ContentContainer",
        "key.namelength" : 16,
        "key.nameoffset" : 184,
        "key.offset" : 177,
        "key.parsed_declaration" : "public struct ContentContainer<M> where M: HTTPMessageContainer",
        "key.parsed_scope.end" : 341,
        "key.parsed_scope.start" : 6,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>M<\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "M",
            "key.namelength" : 1,
            "key.nameoffset" : 201,
            "key.offset" : 201,
            "key.parsed_declaration" : "public struct ContentContainer<M> where M: HTTPMessageContainer",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.typename" : "M.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:5Vapor16ContentContainerV1Mxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal var container: <Type usr=\"s:5Vapor16ContentContainerV1Mxmfp\">M<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 279
              }
            ],
            "key.doc.column" : 18,
            "key.doc.comment" : "The wrapped message container.",
            "key.doc.declaration" : "internal var container: M",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"8\" column=\"18\"><Name>container<\/Name><USR>s:5Vapor16ContentContainerV9containerxvp<\/USR><Declaration>internal var container: M<\/Declaration><CommentParts><Abstract><Para>The wrapped message container.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 8,
            "key.doc.name" : "container",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 240,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV1Mxmfp\">M<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "container",
            "key.namelength" : 9,
            "key.nameoffset" : 292,
            "key.offset" : 288,
            "key.parsed_declaration" : "internal var container: M",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "M",
            "key.typeusr" : "$SxD",
            "key.usr" : "s:5Vapor16ContentContainerV9containerxvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal init(_ container: <Type usr=\"s:5Vapor16ContentContainerV1Mxmfp\">M<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 352
              }
            ],
            "key.bodylength" : 40,
            "key.bodyoffset" : 383,
            "key.doc.column" : 14,
            "key.doc.comment" : "Creates a new `ContentContainer`.",
            "key.doc.declaration" : "internal init(_ container: M)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"11\" column=\"14\"><Name>init(_:)<\/Name><USR>s:5Vapor16ContentContainerVyACyxGxcfc<\/USR><Declaration>internal init(_ container: M)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>ContentContainer<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 11,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 38,
            "key.docoffset" : 310,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV1Mxmfp\">M<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 63,
            "key.name" : "init(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 361,
            "key.offset" : 361,
            "key.parsed_declaration" : "internal init(_ container: M)",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [

            ],
            "key.typename" : "<M where M : HTTPMessageContainer> (ContentContainer<M>.Type) -> (M) -> ContentContainer<M>",
            "key.typeusr" : "$Sy5Vapor16ContentContainerVyxGxcD",
            "key.usr" : "s:5Vapor16ContentContainerVyACyxGxcfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: JSON",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 433
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;E&gt;(json: <Type usr=\"s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF1EL_qd__mfp\">E<\/Type>) throws where E : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 734
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 792,
            "key.doc.column" : 17,
            "key.doc.comment" : "Serializes an `Encodable` object as JSON to this message.\n\n    try res.content.encode(json: user)\n\n- parameters:\n    - json: Instance of generic `Encodable` to serialize to this HTTP message.\n- throws: Errors during serialization.",
            "key.doc.declaration" : "public func encode<E>(json: E) throws where E : Encodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"24\" column=\"17\"><Name>encode(json:)<\/Name><USR>s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF<\/USR><Declaration>public func encode&lt;E&gt;(json: E) throws where E : Encodable<\/Declaration><CommentParts><Abstract><Para>Serializes an <codeVoice>Encodable<\/codeVoice> object as JSON to this message.<\/Para><\/Abstract><Parameters><Parameter><Name>json<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Instance of generic <codeVoice>Encodable<\/codeVoice> to serialize to this HTTP message.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para>Errors during serialization.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try res.content.encode(json: user)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 24,
            "key.doc.name" : "encode(json:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Instance of generic `Encodable` to serialize to this HTTP message."
                  }
                ],
                "name" : "json"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 281,
            "key.docoffset" : 449,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF1EL_qd__mfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>json<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF1EL_qd__mfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 93,
            "key.name" : "encode(json:)",
            "key.namelength" : 18,
            "key.nameoffset" : 746,
            "key.offset" : 741,
            "key.parsed_declaration" : "public func encode<E>(json: E) throws where E: Encodable",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 24,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF\">encode(json:using:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF\">encode(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF\">encode(_:as:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF\">encode(_:using:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 753,
                "key.offset" : 753,
                "key.parsed_declaration" : "public func encode<E>(json: E) throws where E: Encodable",
                "key.parsed_scope.end" : 24,
                "key.parsed_scope.start" : 24,
                "key.typename" : "E.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF1EL_qd__mfp"
              }
            ],
            "key.typename" : "<M, E where M : HTTPMessageContainer, E : Encodable> (ContentContainer<M>) -> (E) throws -> ()",
            "key.typeusr" : "$S4jsonyqd___tKcSERd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;E&gt;(json: <Type usr=\"s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF1EL_qd__mfp\">E<\/Type>, using encoder: <Type usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/Type>) throws where E : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1340
              }
            ],
            "key.bodylength" : 46,
            "key.bodyoffset" : 1426,
            "key.doc.column" : 17,
            "key.doc.comment" : "Serializes an `Encodable` object to this message using a custom `JSONEncoder`.\n\n    try res.content.encode(json: user, using: .custom(format: .prettyPrinted))\n\nSee `JSONEncoder.custom(...)` for a convenient way to create a customized instance.\n\n- parameters:\n    - json: Instance of generic `Encodable` to serialize to this HTTP message.\n    - encoder: Specific `JSONEncoder` to use.\n- throws: Errors during serialization.",
            "key.doc.declaration" : "public func encode<E>(json: E, using encoder: JSONEncoder) throws where E : Encodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `JSONEncoder.custom(...)` for a convenient way to create a customized instance."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"38\" column=\"17\"><Name>encode(json:using:)<\/Name><USR>s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF<\/USR><Declaration>public func encode&lt;E&gt;(json: E, using encoder: JSONEncoder) throws where E : Encodable<\/Declaration><CommentParts><Abstract><Para>Serializes an <codeVoice>Encodable<\/codeVoice> object to this message using a custom <codeVoice>JSONEncoder<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>json<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Instance of generic <codeVoice>Encodable<\/codeVoice> to serialize to this HTTP message.<\/Para><\/Discussion><\/Parameter><Parameter><Name>encoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Specific <codeVoice>JSONEncoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para>Errors during serialization.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try res.content.encode(json: user, using: .custom(format: .prettyPrinted))]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>JSONEncoder.custom(...)<\/codeVoice> for a convenient way to create a customized instance.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 38,
            "key.doc.name" : "encode(json:using:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Instance of generic `Encodable` to serialize to this HTTP message."
                  }
                ],
                "name" : "json"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Specific `JSONEncoder` to use."
                  }
                ],
                "name" : "encoder"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 496,
            "key.docoffset" : 840,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF1EL_qd__mfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>json<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF1EL_qd__mfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 126,
            "key.name" : "encode(json:using:)",
            "key.namelength" : 46,
            "key.nameoffset" : 1352,
            "key.offset" : 1347,
            "key.parsed_declaration" : "public func encode<E>(json: E, using encoder: JSONEncoder) throws where E: Encodable",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 38,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF\">encode(json:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF\">encode(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF\">encode(_:as:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF\">encode(_:using:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 1359,
                "key.offset" : 1359,
                "key.parsed_declaration" : "public func encode<E>(json: E, using encoder: JSONEncoder) throws where E: Encodable",
                "key.parsed_scope.end" : 38,
                "key.parsed_scope.start" : 38,
                "key.typename" : "E.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF1EL_qd__mfp"
              }
            ],
            "key.typename" : "<M, E where M : HTTPMessageContainer, E : Encodable> (ContentContainer<M>) -> (E, JSONEncoder) throws -> ()",
            "key.typeusr" : "$S4json5usingyqd___10Foundation11JSONEncoderCtKcSERd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func decode&lt;D&gt;(json: <Type usr=\"s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF1DL_qd__mfp\">D<\/Type>.Type, maxSize: <Type usr=\"s:Si\">Int<\/Type> = default, using decoder: <Type usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF1DL_qd__mfp\">D<\/Type>&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2380
              }
            ],
            "key.bodylength" : 73,
            "key.bodyoffset" : 2507,
            "key.doc.column" : 17,
            "key.doc.comment" : "Parses a `Decodable` type from this HTTP message. This method supports streaming HTTP bodies (chunked) and can run asynchronously.\nSee `syncDecode(_:)` for the non-streaming, synchronous version.\n\n    let user = req.content.decode(json: User.self, using: .custom(dates: .iso8601))\n    print(user) \/\/ Future<User>\n\nThis method accepts a custom `JSONDecoder`. See `JSONDecoder.custom(...)` for a convenient way to create a customized instance.\n\n- parameters:\n    - content: `Decodable` type to decode from this HTTP message.\n    - maxSize: Maximum streaming body size to support (does not apply to static bodies).\n    - decoder: Custom `JSONDecoder` to use.\n- returns: Future instance of the `Decodable` type.\n- throws: Any errors making the decoder for this media type or parsing the message.",
            "key.doc.declaration" : "public func decode<D>(json: D.Type, maxSize: Int = default, using decoder: JSONDecoder) throws -> Future<D> where D : Decodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "This method accepts a custom `JSONDecoder`. See `JSONDecoder.custom(...)` for a convenient way to create a customized instance."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"56\" column=\"17\"><Name>decode(json:maxSize:using:)<\/Name><USR>s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF<\/USR><Declaration>public func decode&lt;D&gt;(json: D.Type, maxSize: Int = default, using decoder: JSONDecoder) throws -&gt; Future&lt;D&gt; where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Parses a <codeVoice>Decodable<\/codeVoice> type from this HTTP message. This method supports streaming HTTP bodies (chunked) and can run asynchronously. See <codeVoice>syncDecode(_:)<\/codeVoice> for the non-streaming, synchronous version.<\/Para><\/Abstract><Parameters><Parameter><Name>content<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Decodable<\/codeVoice> type to decode from this HTTP message.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxSize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Maximum streaming body size to support (does not apply to static bodies).<\/Para><\/Discussion><\/Parameter><Parameter><Name>decoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Custom <codeVoice>JSONDecoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Future instance of the <codeVoice>Decodable<\/codeVoice> type.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>Any errors making the decoder for this media type or parsing the message.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user = req.content.decode(json: User.self, using: .custom(dates: .iso8601))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(user) \/\/ Future<User>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>This method accepts a custom <codeVoice>JSONDecoder<\/codeVoice>. See <codeVoice>JSONDecoder.custom(...)<\/codeVoice> for a convenient way to create a customized instance.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 56,
            "key.doc.name" : "decode(json:maxSize:using:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Decodable` type to decode from this HTTP message."
                  }
                ],
                "name" : "content"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Maximum streaming body size to support (does not apply to static bodies)."
                  }
                ],
                "name" : "maxSize"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Custom `JSONDecoder` to use."
                  }
                ],
                "name" : "decoder"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Future instance of the `Decodable` type."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 897,
            "key.docoffset" : 1479,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>json<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 194,
            "key.name" : "decode(json:maxSize:using:)",
            "key.namelength" : 74,
            "key.nameoffset" : 2392,
            "key.offset" : 2387,
            "key.parsed_declaration" : "public func decode<D>(json: D.Type, maxSize: Int = 65_536, using decoder: JSONDecoder) throws -> Future<D> where D: Decodable",
            "key.parsed_scope.end" : 58,
            "key.parsed_scope.start" : 56,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF\">decode(_:maxSize:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF\">decode(_:maxSize:using:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 2399,
                "key.offset" : 2399,
                "key.parsed_declaration" : "public func decode<D>(json: D.Type, maxSize: Int = 65_536, using decoder: JSONDecoder) throws -> Future<D> where D: Decodable",
                "key.parsed_scope.end" : 56,
                "key.parsed_scope.start" : 56,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (ContentContainer<M>) -> (D.Type, Int, JSONDecoder) throws -> EventLoopFuture<D>",
            "key.typeusr" : "$S4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Content",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2590
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;C&gt;(_ content: <Type usr=\"s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF1CL_qd__mfp\">C<\/Type>) throws where C : <Type usr=\"s:5Vapor7ContentP\">Content<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2976
              }
            ],
            "key.bodylength" : 59,
            "key.bodyoffset" : 3037,
            "key.doc.column" : 17,
            "key.doc.comment" : "Serializes `Content` to this HTTP message. Uses the Content's default media type if none is supplied.\n\n    try req.content.encode(user)\n\n- parameters:\n    - content: Instance of generic `Content` to serialize to this HTTP message.\n- throws: Errors making encoder for the `Content` or errors during serialization.",
            "key.doc.declaration" : "public func encode<C>(_ content: C) throws where C : Content",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"69\" column=\"17\"><Name>encode(_:)<\/Name><USR>s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF<\/USR><Declaration>public func encode&lt;C&gt;(_ content: C) throws where C : Content<\/Declaration><CommentParts><Abstract><Para>Serializes <codeVoice>Content<\/codeVoice> to this HTTP message. Uses the Content’s default media type if none is supplied.<\/Para><\/Abstract><Parameters><Parameter><Name>content<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Instance of generic <codeVoice>Content<\/codeVoice> to serialize to this HTTP message.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para>Errors making encoder for the <codeVoice>Content<\/codeVoice> or errors during serialization.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try req.content.encode(user)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 69,
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Instance of generic `Content` to serialize to this HTTP message."
                  }
                ],
                "name" : "content"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 363,
            "key.docoffset" : 2609,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>content<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:5Vapor7ContentP\">Content<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 114,
            "key.name" : "encode(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 2988,
            "key.offset" : 2983,
            "key.parsed_declaration" : "public func encode<C>(_ content: C) throws where C: Content",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 69,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF\">encode(json:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF\">encode(json:using:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF\">encode(_:as:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF\">encode(_:using:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 2995,
                "key.offset" : 2995,
                "key.parsed_declaration" : "public func encode<C>(_ content: C) throws where C: Content",
                "key.parsed_scope.end" : 69,
                "key.parsed_scope.start" : 69,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF1CL_qd__mfp"
              }
            ],
            "key.typename" : "<M, C where M : HTTPMessageContainer, C : Content> (ContentContainer<M>) -> (C) throws -> ()",
            "key.typeusr" : "$Syyqd__Kc5Vapor7ContentRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;E&gt;(_ encodable: <Type usr=\"s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF1EL_qd__mfp\">E<\/Type>, as mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) throws where E : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3590
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 3680,
            "key.doc.column" : 17,
            "key.doc.comment" : "Serializes an `Encodable` object to this message using specific `MediaType`.\n\n    try req.content.encode(user, as: .json)\n\n- parameters:\n    - encodable: Instance of generic `Encodable` to serialize to this HTTP message.\n    - mediaType: Specific `MediaType` to encode. This will be used to lookup an appropriate encoder from `ContentConfig`.\n- throws: Errors making encoder for the `Content` or errors during serialization.",
            "key.doc.declaration" : "public func encode<E>(_ encodable: E, as mediaType: MediaType) throws where E : Encodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"81\" column=\"17\"><Name>encode(_:as:)<\/Name><USR>s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF<\/USR><Declaration>public func encode&lt;E&gt;(_ encodable: E, as mediaType: MediaType) throws where E : Encodable<\/Declaration><CommentParts><Abstract><Para>Serializes an <codeVoice>Encodable<\/codeVoice> object to this message using specific <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>encodable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Instance of generic <codeVoice>Encodable<\/codeVoice> to serialize to this HTTP message.<\/Para><\/Discussion><\/Parameter><Parameter><Name>mediaType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Specific <codeVoice>MediaType<\/codeVoice> to encode. This will be used to lookup an appropriate encoder from <codeVoice>ContentConfig<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para>Errors making encoder for the <codeVoice>Content<\/codeVoice> or errors during serialization.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try req.content.encode(user, as: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 81,
            "key.doc.name" : "encode(_:as:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Instance of generic `Encodable` to serialize to this HTTP message."
                  }
                ],
                "name" : "encodable"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Specific `MediaType` to encode. This will be used to lookup an appropriate encoder from `ContentConfig`."
                  }
                ],
                "name" : "mediaType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 483,
            "key.docoffset" : 3103,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF1EL_qd__mfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF1EL_qd__mfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 162,
            "key.name" : "encode(_:as:)",
            "key.namelength" : 50,
            "key.nameoffset" : 3602,
            "key.offset" : 3597,
            "key.parsed_declaration" : "public func encode<E>(_ encodable: E, as mediaType: MediaType) throws where E: Encodable",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 81,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF\">encode(json:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF\">encode(json:using:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF\">encode(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF\">encode(_:using:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 3609,
                "key.offset" : 3609,
                "key.parsed_declaration" : "public func encode<E>(_ encodable: E, as mediaType: MediaType) throws where E: Encodable",
                "key.parsed_scope.end" : 81,
                "key.parsed_scope.start" : 81,
                "key.typename" : "E.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF1EL_qd__mfp"
              }
            ],
            "key.typename" : "<M, E where M : HTTPMessageContainer, E : Encodable> (ContentContainer<M>) -> (E, MediaType) throws -> ()",
            "key.typeusr" : "$S_2asyqd___4Core9MediaTypeVtKcSERd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;E&gt;(_ encodable: <Type usr=\"s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF1EL_qd__mfp\">E<\/Type>, using encoder: <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type>) throws where E : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4160
              }
            ],
            "key.bodylength" : 79,
            "key.bodyoffset" : 4260,
            "key.doc.column" : 17,
            "key.doc.comment" : "Serializes an `Encodable` object to this message using specific `HTTPMessageEncoder`.\n\n    try req.content.encode(user, using: JSONEncoder())\n\n- parameters:\n    - encodable: Instance of generic `Encodable` to serialize to this HTTP message.\n    - encoder: Specific `HTTPMessageEncoder` to use.\n- throws: Errors during serialization.",
            "key.doc.declaration" : "public func encode<E>(_ encodable: E, using encoder: HTTPMessageEncoder) throws where E : Encodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"93\" column=\"17\"><Name>encode(_:using:)<\/Name><USR>s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF<\/USR><Declaration>public func encode&lt;E&gt;(_ encodable: E, using encoder: HTTPMessageEncoder) throws where E : Encodable<\/Declaration><CommentParts><Abstract><Para>Serializes an <codeVoice>Encodable<\/codeVoice> object to this message using specific <codeVoice>HTTPMessageEncoder<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>encodable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Instance of generic <codeVoice>Encodable<\/codeVoice> to serialize to this HTTP message.<\/Para><\/Discussion><\/Parameter><Parameter><Name>encoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Specific <codeVoice>HTTPMessageEncoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para>Errors during serialization.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try req.content.encode(user, using: JSONEncoder())]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 93,
            "key.doc.name" : "encode(_:using:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Instance of generic `Encodable` to serialize to this HTTP message."
                  }
                ],
                "name" : "encodable"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Specific `HTTPMessageEncoder` to use."
                  }
                ],
                "name" : "encoder"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 391,
            "key.docoffset" : 3765,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF1EL_qd__mfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF1EL_qd__mfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 173,
            "key.name" : "encode(_:using:)",
            "key.namelength" : 60,
            "key.nameoffset" : 4172,
            "key.offset" : 4167,
            "key.parsed_declaration" : "public func encode<E>(_ encodable: E, using encoder: HTTPMessageEncoder) throws where E: Encodable",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 93,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode4jsonyqd___tKSERd__lF\">encode(json:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode4json5usingyqd___10Foundation11JSONEncoderCtKSERd__lF\">encode(json:using:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encodeyyqd__KAA0B0Rd__lF\">encode(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6encode_2asyqd___4Core9MediaTypeVtKSERd__lF\">encode(_:as:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 4179,
                "key.offset" : 4179,
                "key.parsed_declaration" : "public func encode<E>(_ encodable: E, using encoder: HTTPMessageEncoder) throws where E: Encodable",
                "key.parsed_scope.end" : 93,
                "key.parsed_scope.start" : 93,
                "key.typename" : "E.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF1EL_qd__mfp"
              }
            ],
            "key.typename" : "<M, E where M : HTTPMessageContainer, E : Encodable> (ContentContainer<M>) -> (E, HTTPMessageEncoder) throws -> ()",
            "key.typeusr" : "$S_5usingyqd___4HTTP18HTTPMessageEncoder_ptKcSERd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV6encode_5usingyqd___4HTTP18HTTPMessageEncoder_ptKSERd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func decode&lt;D&gt;(_ content: <Type usr=\"s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF1DL_qd__mfp\">D<\/Type>.Type, maxSize: <Type usr=\"s:Si\">Int<\/Type> = default) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF1DL_qd__mfp\">D<\/Type>&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5125
              }
            ],
            "key.bodylength" : 86,
            "key.bodyoffset" : 5229,
            "key.doc.column" : 17,
            "key.doc.comment" : "Parses a `Decodable` type from this HTTP message. This method supports streaming HTTP bodies (chunked) and can run asynchronously.\nSee `syncDecode(_:)` for the non-streaming, synchronous version.\n\n    let user = try req.content.decode(User.self)\n    print(user) \/\/ Future<User>\n\nThe HTTP message's `MediaType` will be used to lookup the relevant `HTTPBodyDecoder` to use.\n\n- parameters:\n    - content: `Decodable` type to decode from this HTTP message.\n    - maxSize: Maximum streaming body size to support (does not apply to static bodies).\n- returns: Future instance of the `Decodable` type.\n- throws: Any errors making the decoder for this media type or parsing the message.",
            "key.doc.declaration" : "public func decode<D>(_ content: D.Type, maxSize: Int = default) throws -> Future<D> where D : Decodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The HTTP message’s `MediaType` will be used to lookup the relevant `HTTPBodyDecoder` to use."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"110\" column=\"17\"><Name>decode(_:maxSize:)<\/Name><USR>s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF<\/USR><Declaration>public func decode&lt;D&gt;(_ content: D.Type, maxSize: Int = default) throws -&gt; Future&lt;D&gt; where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Parses a <codeVoice>Decodable<\/codeVoice> type from this HTTP message. This method supports streaming HTTP bodies (chunked) and can run asynchronously. See <codeVoice>syncDecode(_:)<\/codeVoice> for the non-streaming, synchronous version.<\/Para><\/Abstract><Parameters><Parameter><Name>content<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Decodable<\/codeVoice> type to decode from this HTTP message.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxSize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Maximum streaming body size to support (does not apply to static bodies).<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Future instance of the <codeVoice>Decodable<\/codeVoice> type.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>Any errors making the decoder for this media type or parsing the message.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user = try req.content.decode(User.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(user) \/\/ Future<User>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The HTTP message’s <codeVoice>MediaType<\/codeVoice> will be used to lookup the relevant <codeVoice>HTTPBodyDecoder<\/codeVoice> to use.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 110,
            "key.doc.name" : "decode(_:maxSize:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Decodable` type to decode from this HTTP message."
                  }
                ],
                "name" : "content"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Maximum streaming body size to support (does not apply to static bodies)."
                  }
                ],
                "name" : "maxSize"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Future instance of the `Decodable` type."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 775,
            "key.docoffset" : 4346,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>content<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 184,
            "key.name" : "decode(_:maxSize:)",
            "key.namelength" : 51,
            "key.nameoffset" : 5137,
            "key.offset" : 5132,
            "key.parsed_declaration" : "public func decode<D>(_ content: D.Type, maxSize: Int = 65_536) throws -> Future<D> where D: Decodable",
            "key.parsed_scope.end" : 112,
            "key.parsed_scope.start" : 110,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF\">decode(json:maxSize:using:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF\">decode(_:maxSize:using:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 5144,
                "key.offset" : 5144,
                "key.parsed_declaration" : "public func decode<D>(_ content: D.Type, maxSize: Int = 65_536) throws -> Future<D> where D: Decodable",
                "key.parsed_scope.end" : 110,
                "key.parsed_scope.start" : 110,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (ContentContainer<M>) -> (D.Type, Int) throws -> EventLoopFuture<D>",
            "key.typeusr" : "$S_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func decode&lt;D&gt;(_ content: <Type usr=\"s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF1DL_qd__mfp\">D<\/Type>.Type, maxSize: <Type usr=\"s:Si\">Int<\/Type> = default, using decoder: <Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF1DL_qd__mfp\">D<\/Type>&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6142
              }
            ],
            "key.bodylength" : 102,
            "key.bodyoffset" : 6281,
            "key.doc.column" : 17,
            "key.doc.comment" : "Parses a `Decodable` type from this HTTP message. This method supports streaming HTTP bodies (chunked) and can run asynchronously.\nSee `syncDecode(_:)` for the non-streaming, synchronous version.\n\n    let user = req.content.decode(json: User.self, using: JSONDecoder())\n    print(user) \/\/ Future<User>\n\nThis method accepts a custom `HTTPMessageDecoder`.\n\n- parameters:\n    - content: `Decodable` type to decode from this HTTP message.\n    - maxSize: Maximum streaming body size to support (does not apply to static bodies).\n    - decoder: Custom `HTTPMessageDecoder` to use.\n- returns: Future instance of the `Decodable` type.\n- throws: Any errors making the decoder for this media type or parsing the message.",
            "key.doc.declaration" : "public func decode<D>(_ content: D.Type, maxSize: Int = default, using decoder: HTTPMessageDecoder) throws -> Future<D> where D : Decodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "This method accepts a custom `HTTPMessageDecoder`."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"128\" column=\"17\"><Name>decode(_:maxSize:using:)<\/Name><USR>s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF<\/USR><Declaration>public func decode&lt;D&gt;(_ content: D.Type, maxSize: Int = default, using decoder: HTTPMessageDecoder) throws -&gt; Future&lt;D&gt; where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Parses a <codeVoice>Decodable<\/codeVoice> type from this HTTP message. This method supports streaming HTTP bodies (chunked) and can run asynchronously. See <codeVoice>syncDecode(_:)<\/codeVoice> for the non-streaming, synchronous version.<\/Para><\/Abstract><Parameters><Parameter><Name>content<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Decodable<\/codeVoice> type to decode from this HTTP message.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxSize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Maximum streaming body size to support (does not apply to static bodies).<\/Para><\/Discussion><\/Parameter><Parameter><Name>decoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Custom <codeVoice>HTTPMessageDecoder<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Future instance of the <codeVoice>Decodable<\/codeVoice> type.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>Any errors making the decoder for this media type or parsing the message.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user = req.content.decode(json: User.self, using: JSONDecoder())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(user) \/\/ Future<User>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>This method accepts a custom <codeVoice>HTTPMessageDecoder<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 128,
            "key.doc.name" : "decode(_:maxSize:using:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Decodable` type to decode from this HTTP message."
                  }
                ],
                "name" : "content"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Maximum streaming body size to support (does not apply to static bodies)."
                  }
                ],
                "name" : "maxSize"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Custom `HTTPMessageDecoder` to use."
                  }
                ],
                "name" : "decoder"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Future instance of the `Decodable` type."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 816,
            "key.docoffset" : 5322,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>content<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 235,
            "key.name" : "decode(_:maxSize:using:)",
            "key.namelength" : 86,
            "key.nameoffset" : 6154,
            "key.offset" : 6149,
            "key.parsed_declaration" : "public func decode<D>(_ content: D.Type, maxSize: Int = 65_536, using decoder: HTTPMessageDecoder) throws -> Future<D> where D: Decodable",
            "key.parsed_scope.end" : 130,
            "key.parsed_scope.start" : 128,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6decode4json7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si10Foundation11JSONDecoderCtKSeRd__lF\">decode(json:maxSize:using:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV6decode_7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_SitKSeRd__lF\">decode(_:maxSize:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 6161,
                "key.offset" : 6161,
                "key.parsed_declaration" : "public func decode<D>(_ content: D.Type, maxSize: Int = 65_536, using decoder: HTTPMessageDecoder) throws -> Future<D> where D: Decodable",
                "key.parsed_scope.end" : 128,
                "key.parsed_scope.start" : 128,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (ContentContainer<M>) -> (D.Type, Int, HTTPMessageDecoder) throws -> EventLoopFuture<D>",
            "key.typeusr" : "$S_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV6decode_7maxSize5using3NIO15EventLoopFutureCyqd__Gqd__m_Si4HTTP18HTTPMessageDecoder_ptKSeRd__lF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: Single Value",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 6393
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript&lt;D&gt;(keyPath: <Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>...) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/Type>?&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6991
              }
            ],
            "key.bodylength" : 46,
            "key.bodyoffset" : 7094,
            "key.doc.column" : 12,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP message's data.\nThis method supports streaming HTTP bodies (chunked) and runs asynchronously.\nSee `syncGet(_:at:)` for the streaming version.\n\nNote: This is a non-throwing subscript convenience method for `get(_:at:)`\n\n    let name: Future<String?> = try req.content[\"user\", \"name\"]\n\n- parameters:\n    - keyPath: One or more key path components to the desired value.\n- returns: Optional decoded `Decodable` value.",
            "key.doc.declaration" : "public subscript<D>(keyPath: BasicKeyRepresentable...) -> Future<D?> where D : Decodable { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Note: This is a non-throwing subscript convenience method for `get(_:at:)`"
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"145\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:5Vapor16ContentContainerVy3NIO15EventLoopFutureCyqd__SgG4Core21BasicKeyRepresentable_pd_tcSeRd__luip<\/USR><Declaration>public subscript&lt;D&gt;(keyPath: BasicKeyRepresentable...) -&gt; Future&lt;D?&gt; where D : Decodable { get }<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP message’s data. This method supports streaming HTTP bodies (chunked) and runs asynchronously. See <codeVoice>syncGet(_:at:)<\/codeVoice> for the streaming version.<\/Para><\/Abstract><Parameters><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Optional decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><Para>Note: This is a non-throwing subscript convenience method for <codeVoice>get(_:at:)<\/codeVoice><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name: Future<String?> = try req.content[\"user\", \"name\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 145,
            "key.doc.name" : "subscript(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Optional decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 570,
            "key.docoffset" : 6417,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/ref.generic_type_param>?&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 143,
            "key.name" : "subscript(_:)",
            "key.namelength" : 49,
            "key.nameoffset" : 6998,
            "key.offset" : 6998,
            "key.parsed_declaration" : "public subscript<D>(_ keyPath: BasicKeyRepresentable...) -> Future<D?>\n    where D: Decodable",
            "key.parsed_scope.end" : 149,
            "key.parsed_scope.start" : 145,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV_2at3NIO15EventLoopFutureCyqd__SgGqd__m_4Core21BasicKeyRepresentable_pdtcSeRd__luip\">subscript(_:at:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV_2at3NIO15EventLoopFutureCyqd__SgGqd__m_Say4Core21BasicKeyRepresentable_pGtcSeRd__luip\">subscript(_:at:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 7008,
                "key.offset" : 7008,
                "key.parsed_declaration" : "public subscript<D>(_ keyPath: BasicKeyRepresentable...) -> Future<D?>",
                "key.parsed_scope.end" : 145,
                "key.parsed_scope.start" : 145,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (BasicKeyRepresentable...) -> EventLoopFuture<D?>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCyqd__SgG4Core21BasicKeyRepresentable_pd_tcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerVy3NIO15EventLoopFutureCyqd__SgG4Core21BasicKeyRepresentable_pd_tcSeRd__luip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript&lt;D&gt;(type: <Type usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/Type>.Type, at keyPath: <Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>...) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/Type>?&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7822
              }
            ],
            "key.bodylength" : 46,
            "key.bodyoffset" : 7942,
            "key.doc.column" : 12,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP message's data.\nThis method supports streaming HTTP bodies (chunked) and runs asynchronously.\nSee `syncGet(_:at:)` for the streaming version.\n\nNote: This is a non-throwing subscript convenience method for `get(_:at:)`\n\n    let name = try req.content[String.self, at: \"user\", \"name\"]\n    print(name) \/\/ Future<String?>\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n- returns: Optional decoded `Decodable` value.",
            "key.doc.declaration" : "public subscript<D>(type: D.Type, at keyPath: BasicKeyRepresentable...) -> Future<D?> where D : Decodable { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Note: This is a non-throwing subscript convenience method for `get(_:at:)`"
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"164\" column=\"12\"><Name>subscript(_:at:)<\/Name><USR>s:5Vapor16ContentContainerV_2at3NIO15EventLoopFutureCyqd__SgGqd__m_4Core21BasicKeyRepresentable_pdtcSeRd__luip<\/USR><Declaration>public subscript&lt;D&gt;(type: D.Type, at keyPath: BasicKeyRepresentable...) -&gt; Future&lt;D?&gt; where D : Decodable { get }<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP message’s data. This method supports streaming HTTP bodies (chunked) and runs asynchronously. See <codeVoice>syncGet(_:at:)<\/codeVoice> for the streaming version.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Optional decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><Para>Note: This is a non-throwing subscript convenience method for <codeVoice>get(_:at:)<\/codeVoice><\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = try req.content[String.self, at: \"user\", \"name\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/ Future<String?>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 164,
            "key.doc.name" : "subscript(_:at:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Optional decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 671,
            "key.docoffset" : 7147,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/ref.generic_type_param>?&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 160,
            "key.name" : "subscript(_:at:)",
            "key.namelength" : 66,
            "key.nameoffset" : 7829,
            "key.offset" : 7829,
            "key.parsed_declaration" : "public subscript<D>(_ type: D.Type, at keyPath: BasicKeyRepresentable...) -> Future<D?>\n    where D: Decodable",
            "key.parsed_scope.end" : 168,
            "key.parsed_scope.start" : 164,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerVy3NIO15EventLoopFutureCyqd__SgG4Core21BasicKeyRepresentable_pd_tcSeRd__luip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV_2at3NIO15EventLoopFutureCyqd__SgGqd__m_Say4Core21BasicKeyRepresentable_pGtcSeRd__luip\">subscript(_:at:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 7839,
                "key.offset" : 7839,
                "key.parsed_declaration" : "public subscript<D>(_ type: D.Type, at keyPath: BasicKeyRepresentable...) -> Future<D?>",
                "key.parsed_scope.end" : 164,
                "key.parsed_scope.start" : 164,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (D.Type, at: BasicKeyRepresentable...) -> EventLoopFuture<D?>",
            "key.typeusr" : "$S_2at3NIO15EventLoopFutureCyqd__SgGqd__m_4Core21BasicKeyRepresentable_pdtcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV_2at3NIO15EventLoopFutureCyqd__SgGqd__m_4Core21BasicKeyRepresentable_pdtcSeRd__luip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript&lt;D&gt;(type: <Type usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/Type>.Type, at keyPath: [<Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>]) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/Type>?&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8705
              }
            ],
            "key.bodylength" : 261,
            "key.bodyoffset" : 8824,
            "key.doc.column" : 12,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP message's data.\nThis method supports streaming HTTP bodies (chunked) and runs asynchronously.\nSee `syncGet(_:at:)` for the streaming version.\n\nNote: This is a non-throwing subscript convenience method for `get(_:at:)`. This is the non-variadic version.\n\n    let name = try req.content[String.self, at: \"user\", \"name\"]\n    print(name) \/\/ Future<String?>\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n- returns: Optional decoded `Decodable` value.",
            "key.doc.declaration" : "public subscript<D>(type: D.Type, at keyPath: [BasicKeyRepresentable]) -> Future<D?> where D : Decodable { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Note: This is a non-throwing subscript convenience method for `get(_:at:)`. This is the non-variadic version."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"183\" column=\"12\"><Name>subscript(_:at:)<\/Name><USR>s:5Vapor16ContentContainerV_2at3NIO15EventLoopFutureCyqd__SgGqd__m_Say4Core21BasicKeyRepresentable_pGtcSeRd__luip<\/USR><Declaration>public subscript&lt;D&gt;(type: D.Type, at keyPath: [BasicKeyRepresentable]) -&gt; Future&lt;D?&gt; where D : Decodable { get }<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP message’s data. This method supports streaming HTTP bodies (chunked) and runs asynchronously. See <codeVoice>syncGet(_:at:)<\/codeVoice> for the streaming version.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Optional decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><Para>Note: This is a non-throwing subscript convenience method for <codeVoice>get(_:at:)<\/codeVoice>. This is the non-variadic version.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = try req.content[String.self, at: \"user\", \"name\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/ Future<String?>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 183,
            "key.doc.name" : "subscript(_:at:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Optional decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 706,
            "key.docoffset" : 7995,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor16ContentContainerV1DL_qd__mfp\">D<\/ref.generic_type_param>?&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 374,
            "key.name" : "subscript(_:at:)",
            "key.namelength" : 65,
            "key.nameoffset" : 8712,
            "key.offset" : 8712,
            "key.parsed_declaration" : "public subscript<D>(_ type: D.Type, at keyPath: [BasicKeyRepresentable]) -> Future<D?>\n    where D: Decodable",
            "key.parsed_scope.end" : 193,
            "key.parsed_scope.start" : 183,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerVy3NIO15EventLoopFutureCyqd__SgG4Core21BasicKeyRepresentable_pd_tcSeRd__luip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV_2at3NIO15EventLoopFutureCyqd__SgGqd__m_4Core21BasicKeyRepresentable_pdtcSeRd__luip\">subscript(_:at:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 8722,
                "key.offset" : 8722,
                "key.parsed_declaration" : "public subscript<D>(_ type: D.Type, at keyPath: [BasicKeyRepresentable]) -> Future<D?>",
                "key.parsed_scope.end" : 183,
                "key.parsed_scope.start" : 183,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (D.Type, at: [BasicKeyRepresentable]) -> EventLoopFuture<D?>",
            "key.typeusr" : "$S_2at3NIO15EventLoopFutureCyqd__SgGqd__m_Say4Core21BasicKeyRepresentable_pGtcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV_2at3NIO15EventLoopFutureCyqd__SgGqd__m_Say4Core21BasicKeyRepresentable_pGtcSeRd__luip"
          },
          {
            "key.annotated_decl" : "<Declaration>let promise: <Type usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/Type>&lt;D?&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>promise<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO16EventLoopPromiseV\">EventLoopPromise<\/ref.struct>&lt;D?&gt;<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 53,
            "key.name" : "promise",
            "key.namelength" : 7,
            "key.nameoffset" : 8837,
            "key.offset" : 8833,
            "key.parsed_declaration" : "let promise = container.eventLoop.newPromise(D?.self)",
            "key.parsed_scope.end" : 186,
            "key.parsed_scope.start" : 186,
            "key.typename" : "EventLoopPromise<D?>",
            "key.typeusr" : "$S3NIO16EventLoopPromiseVyqd__SgGD",
            "key.usr" : "s:5Vapor16ContentContainerV_2at3NIO15EventLoopFutureCyqd__SgGqd__m_Say4Core21BasicKeyRepresentable_pGtcSeRd__luig7promiseL_AE0fG7PromiseVyAHGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func get&lt;D&gt;(_ type: <Type usr=\"s:5Vapor16ContentContainerV3get_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtSeRd__lF1DL_qd__mfp\">D<\/Type>.Type = default, at keyPath: <Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>...) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor16ContentContainerV3get_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtSeRd__lF1DL_qd__mfp\">D<\/Type>&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9781
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 9908,
            "key.doc.column" : 17,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP message's data.\nThis method supports streaming HTTP bodies (chunked) and runs asynchronously.\nSee `syncGet(_:at:)` for the streaming version.\n\n    let name = try req.content.get(String.self, at: \"user\", \"name\")\n    print(name) \/\/ Future<String>\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n    - maxSize: Maximum streaming body size to support (does not apply to non-streaming bodies).\n- returns: Future decoded `Decodable` value.",
            "key.doc.declaration" : "public func get<D>(_ type: D.Type = default, at keyPath: BasicKeyRepresentable...) -> Future<D> where D : Decodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"207\" column=\"17\"><Name>get(_:at:)<\/Name><USR>s:5Vapor16ContentContainerV3get_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtSeRd__lF<\/USR><Declaration>public func get&lt;D&gt;(_ type: D.Type = default, at keyPath: BasicKeyRepresentable...) -&gt; Future&lt;D&gt; where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP message’s data. This method supports streaming HTTP bodies (chunked) and runs asynchronously. See <codeVoice>syncGet(_:at:)<\/codeVoice> for the streaming version.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxSize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Maximum streaming body size to support (does not apply to non-streaming bodies).<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Future decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = try req.content.get(String.self, at: \"user\", \"name\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/ Future<String>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 207,
            "key.doc.name" : "get(_:at:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Maximum streaming body size to support (does not apply to non-streaming bodies)."
                  }
                ],
                "name" : "maxSize"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Future decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 685,
            "key.docoffset" : 9092,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV3get_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV3get_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor16ContentContainerV3get_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 158,
            "key.name" : "get(_:at:)",
            "key.namelength" : 69,
            "key.nameoffset" : 9793,
            "key.offset" : 9788,
            "key.parsed_declaration" : "public func get<D>(_ type: D.Type = D.self, at keyPath: BasicKeyRepresentable...) -> Future<D>\n    where D: Decodable",
            "key.parsed_scope.end" : 211,
            "key.parsed_scope.start" : 207,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV3get_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitSeRd__lF\">get(_:at:maxSize:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 9797,
                "key.offset" : 9797,
                "key.parsed_declaration" : "public func get<D>(_ type: D.Type = D.self, at keyPath: BasicKeyRepresentable...) -> Future<D>",
                "key.parsed_scope.end" : 207,
                "key.parsed_scope.start" : 207,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV3get_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (ContentContainer<M>) -> (D.Type, BasicKeyRepresentable...) -> EventLoopFuture<D>",
            "key.typeusr" : "$S_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV3get_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func get&lt;D&gt;(_ type: <Type usr=\"s:5Vapor16ContentContainerV3get_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitSeRd__lF1DL_qd__mfp\">D<\/Type>.Type = default, at keyPath: [<Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>], maxSize: <Type usr=\"s:Si\">Int<\/Type> = default) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor16ContentContainerV3get_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitSeRd__lF1DL_qd__mfp\">D<\/Type>&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10697
              }
            ],
            "key.bodylength" : 209,
            "key.bodyoffset" : 10846,
            "key.doc.column" : 17,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP message's data.\nThis method supports streaming HTTP bodies (chunked) and runs asynchronously.\nSee `syncGet(_:at:)` for the streaming version.\n\nNote: This is the non-variadic version.\n\n    let name = try req.content.get(String.self, at: \"user\", \"name\")\n    print(name) \/\/ Future<String>\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n    - maxSize: Maximum streaming body size to support (does not apply to non-streaming bodies).\n- returns: Future decoded `Decodable` value.",
            "key.doc.declaration" : "public func get<D>(_ type: D.Type = default, at keyPath: [BasicKeyRepresentable], maxSize: Int = default) -> Future<D> where D : Decodable",
            "key.doc.discussion" : [
              {
                "Para" : "Note: This is the non-variadic version."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"227\" column=\"17\"><Name>get(_:at:maxSize:)<\/Name><USR>s:5Vapor16ContentContainerV3get_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitSeRd__lF<\/USR><Declaration>public func get&lt;D&gt;(_ type: D.Type = default, at keyPath: [BasicKeyRepresentable], maxSize: Int = default) -&gt; Future&lt;D&gt; where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP message’s data. This method supports streaming HTTP bodies (chunked) and runs asynchronously. See <codeVoice>syncGet(_:at:)<\/codeVoice> for the streaming version.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxSize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Maximum streaming body size to support (does not apply to non-streaming bodies).<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Future decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><Para>Note: This is the non-variadic version.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = try req.content.get(String.self, at: \"user\", \"name\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/ Future<String>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 227,
            "key.doc.name" : "get(_:at:maxSize:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Maximum streaming body size to support (does not apply to non-streaming bodies)."
                  }
                ],
                "name" : "maxSize"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Future decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 741,
            "key.docoffset" : 9952,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV3get_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV3get_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor16ContentContainerV3get_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 352,
            "key.name" : "get(_:at:maxSize:)",
            "key.namelength" : 91,
            "key.nameoffset" : 10709,
            "key.offset" : 10704,
            "key.parsed_declaration" : "public func get<D>(_ type: D.Type = D.self, at keyPath: [BasicKeyRepresentable], maxSize: Int = 65_536) -> Future<D>\n    where D: Decodable",
            "key.parsed_scope.end" : 233,
            "key.parsed_scope.start" : 227,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV3get_2at3NIO15EventLoopFutureCyqd__Gqd__m_4Core21BasicKeyRepresentable_pdtSeRd__lF\">get(_:at:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 10713,
                "key.offset" : 10713,
                "key.parsed_declaration" : "public func get<D>(_ type: D.Type = D.self, at keyPath: [BasicKeyRepresentable], maxSize: Int = 65_536) -> Future<D>",
                "key.parsed_scope.end" : 227,
                "key.parsed_scope.start" : 227,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV3get_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (ContentContainer<M>) -> (D.Type, [BasicKeyRepresentable], Int) -> EventLoopFuture<D>",
            "key.typeusr" : "$S_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV3get_2at7maxSize3NIO15EventLoopFutureCyqd__Gqd__m_Say4Core21BasicKeyRepresentable_pGSitSeRd__lF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: Sync",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 11065
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func syncDecode&lt;D&gt;(_ content: <Type usr=\"s:5Vapor16ContentContainerV10syncDecodeyqd__qd__mKSeRd__lF1DL_qd__mfp\">D<\/Type>.Type) throws -&gt; <Type usr=\"s:5Vapor16ContentContainerV10syncDecodeyqd__qd__mKSeRd__lF1DL_qd__mfp\">D<\/Type> where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11839
              }
            ],
            "key.bodylength" : 408,
            "key.bodyoffset" : 11916,
            "key.doc.column" : 17,
            "key.doc.comment" : "Parses a `Decodable` type from this HTTP message. This method does _not_ support streaming HTTP bodies (chunked) and runs synchronously.\nSee `decode(_:maxSize:)` for the streaming version.\n\n    let user = try req.content.syncDecode(User.self)\n    print(user) \/\/ User\n\nThe HTTP message's `MediaType` will be used to lookup the relevant `HTTPBodyDecoder` to use.\n\n- parameters:\n    - content: `Decodable` type to decode from this HTTP message.\n- returns: Instance of the `Decodable` type.\n- throws: Any errors making the decoder for this media type or parsing the message.\n          An error will also be thrown if this HTTP message's body type is streaming.",
            "key.doc.declaration" : "public func syncDecode<D>(_ content: D.Type) throws -> D where D : Decodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The HTTP message’s `MediaType` will be used to lookup the relevant `HTTPBodyDecoder` to use."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"250\" column=\"17\"><Name>syncDecode(_:)<\/Name><USR>s:5Vapor16ContentContainerV10syncDecodeyqd__qd__mKSeRd__lF<\/USR><Declaration>public func syncDecode&lt;D&gt;(_ content: D.Type) throws -&gt; D where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Parses a <codeVoice>Decodable<\/codeVoice> type from this HTTP message. This method does <emphasis>not<\/emphasis> support streaming HTTP bodies (chunked) and runs synchronously. See <codeVoice>decode(_:maxSize:)<\/codeVoice> for the streaming version.<\/Para><\/Abstract><Parameters><Parameter><Name>content<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Decodable<\/codeVoice> type to decode from this HTTP message.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Instance of the <codeVoice>Decodable<\/codeVoice> type.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>Any errors making the decoder for this media type or parsing the message. An error will also be thrown if this HTTP message’s body type is streaming.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user = try req.content.syncDecode(User.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(user) \/\/ User]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The HTTP message’s <codeVoice>MediaType<\/codeVoice> will be used to lookup the relevant <codeVoice>HTTPBodyDecoder<\/codeVoice> to use.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 250,
            "key.doc.name" : "syncDecode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Decodable` type to decode from this HTTP message."
                  }
                ],
                "name" : "content"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Instance of the `Decodable` type."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 754,
            "key.docoffset" : 11081,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>syncDecode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV10syncDecodeyqd__qd__mKSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>content<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV10syncDecodeyqd__qd__mKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV10syncDecodeyqd__qd__mKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 479,
            "key.name" : "syncDecode(_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 11851,
            "key.offset" : 11846,
            "key.parsed_declaration" : "public func syncDecode<D>(_ content: D.Type) throws -> D where D: Decodable",
            "key.parsed_scope.end" : 261,
            "key.parsed_scope.start" : 250,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 11862,
                "key.offset" : 11862,
                "key.parsed_declaration" : "public func syncDecode<D>(_ content: D.Type) throws -> D where D: Decodable",
                "key.parsed_scope.end" : 250,
                "key.parsed_scope.start" : 250,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV10syncDecodeyqd__qd__mKSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (ContentContainer<M>) -> (D.Type) throws -> D",
            "key.typeusr" : "$Syqd__qd__mKcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV10syncDecodeyqd__qd__mKSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func syncGet&lt;D&gt;(_ type: <Type usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKSeRd__lF1DL_qd__mfp\">D<\/Type>.Type = default, at keyPath: <Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>...) throws -&gt; <Type usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKSeRd__lF1DL_qd__mfp\">D<\/Type> where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13020
              }
            ],
            "key.bodylength" : 45,
            "key.bodyoffset" : 13150,
            "key.doc.column" : 17,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP message's data.\nThis method does _not_ support streaming HTTP bodies (chunked) and runs synchronously.\nSee `get(_:at:)` for the streaming version.\n\n    let name = try req.content.syncGet(String.self, at: \"user\", \"name\")\n    print(name) \/\/ String\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n- throws: Any errors making the correct decoder, parsing the value, or if the HTTP body is streaming.\n- returns: Decoded `Decodable` value.",
            "key.doc.declaration" : "public func syncGet<D>(_ type: D.Type = default, at keyPath: BasicKeyRepresentable...) throws -> D where D : Decodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"275\" column=\"17\"><Name>syncGet(_:at:)<\/Name><USR>s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKSeRd__lF<\/USR><Declaration>public func syncGet&lt;D&gt;(_ type: D.Type = default, at keyPath: BasicKeyRepresentable...) throws -&gt; D where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP message’s data. This method does <emphasis>not<\/emphasis> support streaming HTTP bodies (chunked) and runs synchronously. See <codeVoice>get(_:at:)<\/codeVoice> for the streaming version.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>Any errors making the correct decoder, parsing the value, or if the HTTP body is streaming.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = try req.content.syncGet(String.self, at: \"user\", \"name\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/ String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 275,
            "key.doc.name" : "syncGet(_:at:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 685,
            "key.docoffset" : 12331,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>syncGet<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 169,
            "key.name" : "syncGet(_:at:)",
            "key.namelength" : 73,
            "key.nameoffset" : 13032,
            "key.offset" : 13027,
            "key.parsed_declaration" : "public func syncGet<D>(_ type: D.Type = D.self, at keyPath: BasicKeyRepresentable...) throws -> D\n    where D: Decodable",
            "key.parsed_scope.end" : 279,
            "key.parsed_scope.start" : 275,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKSeRd__lF\">syncGet&lt;D&gt;(_: D.Type = default, at: [BasicKeyRepresentable]) throws -&gt; D where D : Decodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 13040,
                "key.offset" : 13040,
                "key.parsed_declaration" : "public func syncGet<D>(_ type: D.Type = D.self, at keyPath: BasicKeyRepresentable...) throws -> D",
                "key.parsed_scope.end" : 275,
                "key.parsed_scope.start" : 275,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (ContentContainer<M>) -> (D.Type, BasicKeyRepresentable...) throws -> D",
            "key.typeusr" : "$S_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKSeRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func syncGet&lt;D&gt;(_ type: <Type usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKSeRd__lF1DL_qd__mfp\">D<\/Type>.Type = default, at keyPath: [<Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>]) throws -&gt; <Type usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKSeRd__lF1DL_qd__mfp\">D<\/Type> where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13947
              }
            ],
            "key.bodylength" : 379,
            "key.bodyoffset" : 14076,
            "key.doc.column" : 17,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP message's data.\nThis method does _not_ support streaming HTTP bodies (chunked) and runs synchronously.\nSee `get(_:at:)` for the streaming version.\n\nNote: This is the non-variadic version.\n\n    let name = try req.content.syncGet(String.self, at: \"user\", \"name\")\n    print(name) \/\/ String\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n- throws: Any errors making the correct decoder, parsing the value, or if the HTTP body is streaming.\n- returns: Decoded `Decodable` value.",
            "key.doc.declaration" : "public func syncGet<D>(_ type: D.Type = default, at keyPath: [BasicKeyRepresentable]) throws -> D where D : Decodable",
            "key.doc.discussion" : [
              {
                "Para" : "Note: This is the non-variadic version."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"295\" column=\"17\"><Name>syncGet(_:at:)<\/Name><USR>s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKSeRd__lF<\/USR><Declaration>public func syncGet&lt;D&gt;(_ type: D.Type = default, at keyPath: [BasicKeyRepresentable]) throws -&gt; D where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP message’s data. This method does <emphasis>not<\/emphasis> support streaming HTTP bodies (chunked) and runs synchronously. See <codeVoice>get(_:at:)<\/codeVoice> for the streaming version.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>Any errors making the correct decoder, parsing the value, or if the HTTP body is streaming.<\/Para><\/ThrowsDiscussion><Discussion><Para>Note: This is the non-variadic version.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = try req.content.syncGet(String.self, at: \"user\", \"name\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/ String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 295,
            "key.doc.name" : "syncGet(_:at:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 741,
            "key.docoffset" : 13202,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>syncGet<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 502,
            "key.name" : "syncGet(_:at:)",
            "key.namelength" : 72,
            "key.nameoffset" : 13959,
            "key.offset" : 13954,
            "key.parsed_declaration" : "public func syncGet<D>(_ type: D.Type = D.self, at keyPath: [BasicKeyRepresentable]) throws -> D\n    where D: Decodable",
            "key.parsed_scope.end" : 306,
            "key.parsed_scope.start" : 295,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_4Core21BasicKeyRepresentable_pdtKSeRd__lF\">syncGet&lt;D&gt;(_: D.Type = default, at: BasicKeyRepresentable...) throws -&gt; D where D : Decodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 13967,
                "key.offset" : 13967,
                "key.parsed_declaration" : "public func syncGet<D>(_ type: D.Type = D.self, at keyPath: [BasicKeyRepresentable]) throws -> D",
                "key.parsed_scope.end" : 295,
                "key.parsed_scope.start" : 295,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<M, D where M : HTTPMessageContainer, D : Decodable> (ContentContainer<M>) -> (D.Type, [BasicKeyRepresentable]) throws -> D",
            "key.typeusr" : "$S_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKcSeRd__luD",
            "key.usr" : "s:5Vapor16ContentContainerV7syncGet_2atqd__qd__m_Say4Core21BasicKeyRepresentable_pGtKSeRd__lF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Private",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 14465
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func requireHTTPEncoder(for mediaType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type>) throws -&gt; <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 14554
              }
            ],
            "key.bodylength" : 126,
            "key.bodyoffset" : 14642,
            "key.doc.column" : 18,
            "key.doc.comment" : "Looks up a `HTTPMessageEncoder` for the supplied `MediaType`.",
            "key.doc.declaration" : "private func requireHTTPEncoder(for mediaType: MediaType) throws -> HTTPMessageEncoder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"311\" column=\"18\"><Name>requireHTTPEncoder(for:)<\/Name><USR>s:5Vapor16ContentContainerV18requireHTTPEncoder33_968FA464A8C7F659506B362A726D1B59LL3for4HTTP18HTTPMessageEncoder_p4Core9MediaTypeV_tKF<\/USR><Declaration>private func requireHTTPEncoder(for mediaType: MediaType) throws -&gt; HTTPMessageEncoder<\/Declaration><CommentParts><Abstract><Para>Looks up a <codeVoice>HTTPMessageEncoder<\/codeVoice> for the supplied <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 311,
            "key.doc.name" : "requireHTTPEncoder(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 66,
            "key.docoffset" : 14484,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireHTTPEncoder<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>mediaType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 207,
            "key.name" : "requireHTTPEncoder(for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 14567,
            "key.offset" : 14562,
            "key.parsed_declaration" : "private func requireHTTPEncoder(for mediaType: MediaType) throws -> HTTPMessageEncoder",
            "key.parsed_scope.end" : 314,
            "key.parsed_scope.start" : 311,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let coders: <Type usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>coders<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 51,
                "key.name" : "coders",
                "key.namelength" : 6,
                "key.nameoffset" : 14655,
                "key.offset" : 14651,
                "key.parsed_declaration" : "let coders = try container.make(ContentCoders.self)",
                "key.parsed_scope.end" : 312,
                "key.parsed_scope.start" : 312,
                "key.typename" : "ContentCoders",
                "key.typeusr" : "$S5Vapor13ContentCodersVD",
                "key.usr" : "s:5Vapor16ContentContainerV18requireHTTPEncoder33_968FA464A8C7F659506B362A726D1B59LL3for4HTTP18HTTPMessageEncoder_p4Core9MediaTypeV_tKF6codersL_AA0B6CodersVvp"
              }
            ],
            "key.typename" : "<M where M : HTTPMessageContainer> (ContentContainer<M>) -> (MediaType) throws -> HTTPMessageEncoder",
            "key.typeusr" : "$S3for4HTTP18HTTPMessageEncoder_p4Core9MediaTypeV_tKcD",
            "key.usr" : "s:5Vapor16ContentContainerV18requireHTTPEncoder33_968FA464A8C7F659506B362A726D1B59LL3for4HTTP18HTTPMessageEncoder_p4Core9MediaTypeV_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func requireHTTPDecoder() throws -&gt; <Type usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 14845
              }
            ],
            "key.bodylength" : 436,
            "key.bodyoffset" : 14909,
            "key.doc.column" : 18,
            "key.doc.comment" : "Looks up a `HTTPMessageDecoder` for the supplied `MediaType`.",
            "key.doc.declaration" : "private func requireHTTPDecoder() throws -> HTTPMessageDecoder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"317\" column=\"18\"><Name>requireHTTPDecoder()<\/Name><USR>s:5Vapor16ContentContainerV18requireHTTPDecoder33_968FA464A8C7F659506B362A726D1B59LL4HTTP18HTTPMessageDecoder_pyKF<\/USR><Declaration>private func requireHTTPDecoder() throws -&gt; HTTPMessageDecoder<\/Declaration><CommentParts><Abstract><Para>Looks up a <codeVoice>HTTPMessageDecoder<\/codeVoice> for the supplied <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 317,
            "key.doc.name" : "requireHTTPDecoder()",
            "key.doc.type" : "Function",
            "key.doclength" : 66,
            "key.docoffset" : 14775,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireHTTPDecoder<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:4HTTP18HTTPMessageDecoderP\">HTTPMessageDecoder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 493,
            "key.name" : "requireHTTPDecoder()",
            "key.namelength" : 20,
            "key.nameoffset" : 14858,
            "key.offset" : 14853,
            "key.parsed_declaration" : "private func requireHTTPDecoder() throws -> HTTPMessageDecoder",
            "key.parsed_scope.end" : 327,
            "key.parsed_scope.start" : 317,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let coders: <Type usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>coders<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 51,
                "key.name" : "coders",
                "key.namelength" : 6,
                "key.nameoffset" : 14922,
                "key.offset" : 14918,
                "key.parsed_declaration" : "let coders = try container.make(ContentCoders.self)",
                "key.parsed_scope.end" : 318,
                "key.parsed_scope.start" : 318,
                "key.typename" : "ContentCoders",
                "key.typeusr" : "$S5Vapor13ContentCodersVD",
                "key.usr" : "s:5Vapor16ContentContainerV18requireHTTPDecoder33_968FA464A8C7F659506B362A726D1B59LL4HTTP18HTTPMessageDecoder_pyKF6codersL_AA0B6CodersVvp"
              }
            ],
            "key.typename" : "<M where M : HTTPMessageContainer> (ContentContainer<M>) -> () throws -> HTTPMessageDecoder",
            "key.typeusr" : "$S4HTTP18HTTPMessageDecoder_pyKcD",
            "key.usr" : "s:5Vapor16ContentContainerV18requireHTTPDecoder33_968FA464A8C7F659506B362A726D1B59LL4HTTP18HTTPMessageDecoder_pyKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func requireDataDecoder() throws -&gt; <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 15415
              }
            ],
            "key.bodylength" : 434,
            "key.bodyoffset" : 15472,
            "key.doc.column" : 18,
            "key.doc.comment" : "Looks up a `DataDecoder` for the supplied `MediaType`.",
            "key.doc.declaration" : "private func requireDataDecoder() throws -> DataDecoder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift\" line=\"330\" column=\"18\"><Name>requireDataDecoder()<\/Name><USR>s:5Vapor16ContentContainerV18requireDataDecoder33_968FA464A8C7F659506B362A726D1B59LL4Core0eF0_pyKF<\/USR><Declaration>private func requireDataDecoder() throws -&gt; DataDecoder<\/Declaration><CommentParts><Abstract><Para>Looks up a <codeVoice>DataDecoder<\/codeVoice> for the supplied <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 330,
            "key.doc.name" : "requireDataDecoder()",
            "key.doc.type" : "Function",
            "key.doclength" : 59,
            "key.docoffset" : 15352,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireDataDecoder<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 484,
            "key.name" : "requireDataDecoder()",
            "key.namelength" : 20,
            "key.nameoffset" : 15428,
            "key.offset" : 15423,
            "key.parsed_declaration" : "private func requireDataDecoder() throws -> DataDecoder",
            "key.parsed_scope.end" : 340,
            "key.parsed_scope.start" : 330,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let coders: <Type usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/ContentContainer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>coders<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor13ContentCodersV\">ContentCoders<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 51,
                "key.name" : "coders",
                "key.namelength" : 6,
                "key.nameoffset" : 15485,
                "key.offset" : 15481,
                "key.parsed_declaration" : "let coders = try container.make(ContentCoders.self)",
                "key.parsed_scope.end" : 331,
                "key.parsed_scope.start" : 331,
                "key.typename" : "ContentCoders",
                "key.typeusr" : "$S5Vapor13ContentCodersVD",
                "key.usr" : "s:5Vapor16ContentContainerV18requireDataDecoder33_968FA464A8C7F659506B362A726D1B59LL4Core0eF0_pyKF6codersL_AA0B6CodersVvp"
              }
            ],
            "key.typename" : "<M where M : HTTPMessageContainer> (ContentContainer<M>) -> () throws -> DataDecoder",
            "key.typeusr" : "$S4Core11DataDecoder_pyKcD",
            "key.usr" : "s:5Vapor16ContentContainerV18requireDataDecoder33_968FA464A8C7F659506B362A726D1B59LL4Core0eF0_pyKF"
          }
        ],
        "key.typename" : "ContentContainer<M>.Type",
        "key.typeusr" : "$S5Vapor16ContentContainerVyxGmD",
        "key.usr" : "s:5Vapor16ContentContainerV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1852,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>final class FormDataDecoder<\/Declaration>",
        "key.bodylength" : 1224,
        "key.bodyoffset" : 62,
        "key.doc.declaration" : "final class FormDataDecoder",
        "key.doc.discussion" : [
          {
            "Para" : "See  for more information about `multipart\/form-data` encoding."
          },
          {
            "Para" : "Seealso `MultipartParser` for more information about the `multipart` encoding."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>FormDataDecoder<\/Name><USR>s:9Multipart15FormDataDecoderC<\/USR><Declaration>final class FormDataDecoder<\/Declaration><CommentParts><Abstract><Para>Decodes <codeVoice>Decodable<\/codeVoice> types from <codeVoice>multipart\/form-data<\/codeVoice> encoded <codeVoice>Data<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>See <Link href=\"https:\/\/tools.ietf.org\/html\/rfc2388\">RFC#2388<\/Link> for more information about <codeVoice>multipart\/form-data<\/codeVoice> encoding.<\/Para><Para>Seealso <codeVoice>MultipartParser<\/codeVoice> for more information about the <codeVoice>multipart<\/codeVoice> encoding.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "FormDataDecoder",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 42
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FormDataDecoder<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "HTTPMessageDecoder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1272,
        "key.modulename" : "Multipart",
        "key.name" : "FormDataDecoder",
        "key.namelength" : 15,
        "key.nameoffset" : 25,
        "key.offset" : 15,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func decode&lt;D, M&gt;(_ decodable: <Type usr=\"s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\">D<\/Type>.Type, from message: <Type usr=\"s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/Type>, maxSize: <Type usr=\"s:Si\">Int<\/Type>, on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\">D<\/Type>&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type>, M : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 101
              }
            ],
            "key.bodylength" : 1019,
            "key.bodyoffset" : 265,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `HTTPMessageDecoder`.",
            "key.doc.declaration" : "public func decode<D, M>(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -> Future<D> where D : Decodable, M : HTTPMessage",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift\" line=\"5\" column=\"17\"><Name>decode(_:from:maxSize:on:)<\/Name><USR>s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF<\/USR><Declaration>public func decode&lt;D, M&gt;(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -&gt; Future&lt;D&gt; where D : Decodable, M : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>HTTPMessageDecoder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 5,
            "key.doc.name" : "decode(_:from:maxSize:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 30,
            "key.docoffset" : 67,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>message<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\">D<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>M : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1177,
            "key.name" : "decode(_:from:maxSize:on:)",
            "key.namelength" : 83,
            "key.nameoffset" : 113,
            "key.offset" : 108,
            "key.overrides" : [
              {
                "key.usr" : "s:4HTTP18HTTPMessageDecoderP6decode_4from7maxSize2on3NIO15EventLoopFutureCyqd__Gqd__m_qd_0_SiAH0jK5Group_ptKSeRd__AA0B0Rd_0_r0_lF"
              }
            ],
            "key.parsed_declaration" : "public func decode<D, M>(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -> Future<D>\n    where D: Decodable, M: HTTPMessage",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 5,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:9Multipart15FormDataDecoderC6decode_4from8boundaryxxm_4Core08LosslessC11Convertible_pAgH_ptKSeRzlF\">decode(_:from:boundary:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 120,
                "key.offset" : 120,
                "key.parsed_declaration" : "public func decode<D, M>(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -> Future<D>",
                "key.parsed_scope.end" : 5,
                "key.parsed_scope.start" : 5,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp"
              },
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 123,
                "key.offset" : 123,
                "key.parsed_declaration" : "public func decode<D, M>(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -> Future<D>",
                "key.parsed_scope.end" : 5,
                "key.parsed_scope.start" : 5,
                "key.typename" : "M.Type",
                "key.typeusr" : "$Sq_mD",
                "key.usr" : "s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp"
              }
            ],
            "key.typename" : "<D, M where D : Decodable, M : HTTPMessage> (FormDataDecoder) -> (D.Type, M, Int, EventLoopGroup) throws -> EventLoopFuture<D>",
            "key.typeusr" : "$S_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAD0fG5Group_ptKcSeRz4HTTP11HTTPMessageR_r0_luD",
            "key.usr" : "s:9Multipart15FormDataDecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0lM5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF"
          }
        ],
        "key.typename" : "FormDataDecoder.Type",
        "key.typeusr" : "$S9Multipart15FormDataDecoderCmD",
        "key.usr" : "s:9Multipart15FormDataDecoderC"
      },
      {
        "key.annotated_decl" : "<Declaration>final class FormDataEncoder<\/Declaration>",
        "key.bodylength" : 514,
        "key.bodyoffset" : 1336,
        "key.doc.declaration" : "final class FormDataEncoder",
        "key.doc.discussion" : [
          {
            "Para" : "See  for more information about `multipart\/form-data` encoding."
          },
          {
            "Para" : "Seealso `MultipartParser` for more information about the `multipart` encoding."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>FormDataEncoder<\/Name><USR>s:9Multipart15FormDataEncoderC<\/USR><Declaration>final class FormDataEncoder<\/Declaration><CommentParts><Abstract><Para>Encodes <codeVoice>Encodable<\/codeVoice> items to <codeVoice>multipart\/form-data<\/codeVoice> encoded <codeVoice>Data<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>See <Link href=\"https:\/\/tools.ietf.org\/html\/rfc2388\">RFC#2388<\/Link> for more information about <codeVoice>multipart\/form-data<\/codeVoice> encoding.<\/Para><Para>Seealso <codeVoice>MultipartParser<\/codeVoice> for more information about the <codeVoice>multipart<\/codeVoice> encoding.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "FormDataEncoder",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 1316
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FormDataEncoder<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "HTTPMessageEncoder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 562,
        "key.modulename" : "Multipart",
        "key.name" : "FormDataEncoder",
        "key.namelength" : 15,
        "key.nameoffset" : 1299,
        "key.offset" : 1289,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;E, M&gt;(_ encodable: <Type usr=\"s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp\">E<\/Type>, to message: inout <Type usr=\"s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/Type>, on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>) throws where E : <Type usr=\"s:SE\">Encodable<\/Type>, M : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1375
              }
            ],
            "key.bodylength" : 337,
            "key.bodyoffset" : 1511,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `HTTPMessageEncoder`.",
            "key.doc.declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws where E : Encodable, M : HTTPMessage",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift\" line=\"35\" column=\"17\"><Name>encode(_:to:on:)<\/Name><USR>s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF<\/USR><Declaration>public func encode&lt;E, M&gt;(_ encodable: E, to message: inout M, on worker: Worker) throws where E : Encodable, M : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>HTTPMessageEncoder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 35,
            "key.doc.name" : "encode(_:to:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 30,
            "key.docoffset" : 1341,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>message<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.generic_type_param usr=\"s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>M : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 467,
            "key.name" : "encode(_:to:on:)",
            "key.namelength" : 68,
            "key.nameoffset" : 1387,
            "key.offset" : 1382,
            "key.overrides" : [
              {
                "key.usr" : "s:4HTTP18HTTPMessageEncoderP6encode_2to2onyqd___qd_0_z3NIO14EventLoopGroup_ptKSERd__AA0B0Rd_0_r0_lF"
              }
            ],
            "key.parsed_declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws\n    where E: Encodable, M: HTTPMessage",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 35,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:9Multipart15FormDataEncoderC6encode_8boundary10Foundation0C0Vx_4Core08LosslessC11Convertible_ptKSERzlF\">encode(_:boundary:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 1394,
                "key.offset" : 1394,
                "key.parsed_declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws",
                "key.parsed_scope.end" : 35,
                "key.parsed_scope.start" : 35,
                "key.typename" : "E.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp"
              },
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 1397,
                "key.offset" : 1397,
                "key.parsed_declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws",
                "key.parsed_scope.end" : 35,
                "key.parsed_scope.start" : 35,
                "key.typename" : "M.Type",
                "key.typeusr" : "$Sq_mD",
                "key.usr" : "s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let random: <Type usr=\"s:10Foundation4DataV\">Data<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>random<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 47,
                "key.name" : "random",
                "key.namelength" : 6,
                "key.nameoffset" : 1524,
                "key.offset" : 1520,
                "key.parsed_declaration" : "let random = OSRandom().generateData(count: 16)",
                "key.parsed_scope.end" : 38,
                "key.parsed_scope.start" : 38,
                "key.typename" : "Data",
                "key.typeusr" : "$S10Foundation4DataVD",
                "key.usr" : "s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF6randomL_10Foundation0C0Vvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let boundary: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/FormDataCoder+HTTP.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>boundary<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 69,
                "key.name" : "boundary",
                "key.namelength" : 8,
                "key.nameoffset" : 1580,
                "key.offset" : 1576,
                "key.parsed_declaration" : "let boundary: String = \"---vaporBoundary\\(random.hexEncodedString())\"",
                "key.parsed_scope.end" : 39,
                "key.parsed_scope.start" : 39,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF8boundaryL_SSvp"
              }
            ],
            "key.typename" : "<E, M where E : Encodable, M : HTTPMessage> (FormDataEncoder) -> (E, inout M, EventLoopGroup) throws -> ()",
            "key.typeusr" : "$S_2to2onyx_q_z3NIO14EventLoopGroup_ptKcSERz4HTTP11HTTPMessageR_r0_luD",
            "key.usr" : "s:9Multipart15FormDataEncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF"
          }
        ],
        "key.typename" : "FormDataEncoder.Type",
        "key.typeusr" : "$S9Multipart15FormDataEncoderCmD",
        "key.usr" : "s:9Multipart15FormDataEncoderC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 299,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol HTTPMessageContainer : <Type usr=\"s:7Service9ContainerP\">Container<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 67
          }
        ],
        "key.bodylength" : 181,
        "key.bodyoffset" : 116,
        "key.doc.column" : 17,
        "key.doc.comment" : "A `Container` that has a reference to a mutable `HTTPMessage`.",
        "key.doc.declaration" : "public protocol HTTPMessageContainer : Container",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift\" line=\"2\" column=\"17\"><Name>HTTPMessageContainer<\/Name><USR>s:5Vapor20HTTPMessageContainerP<\/USR><Declaration>public protocol HTTPMessageContainer : Container<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>Container<\/codeVoice> that has a reference to a mutable <codeVoice>HTTPMessage<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "HTTPMessageContainer",
        "key.doc.type" : "Class",
        "key.doclength" : 67,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 105
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HTTPMessageContainer<\/decl.name> : <ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Container"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 224,
        "key.name" : "HTTPMessageContainer",
        "key.namelength" : 20,
        "key.nameoffset" : 83,
        "key.offset" : 74,
        "key.parsed_declaration" : "public protocol HTTPMessageContainer: Container",
        "key.parsed_scope.end" : 8,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main20HTTPMessageContainer_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>associatedtype HTTPMessageType : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
            "key.doc.column" : 20,
            "key.doc.comment" : "Associated `HTTPMessage` type.",
            "key.doc.declaration" : "associatedtype HTTPMessageType : HTTPMessage",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift\" line=\"4\" column=\"20\"><Name>HTTPMessageType<\/Name><USR>s:5Vapor20HTTPMessageContainerP0B4TypeQa<\/USR><Declaration>associatedtype HTTPMessageType : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>Associated <codeVoice>HTTPMessage<\/codeVoice> type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "HTTPMessageType",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 121,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift",
            "key.fully_annotated_decl" : "<decl.associatedtype><syntaxtype.keyword>associatedtype<\/syntaxtype.keyword> <decl.name>HTTPMessageType<\/decl.name> : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.associatedtype>",
            "key.kind" : "source.lang.swift.decl.associatedtype",
            "key.length" : 43,
            "key.name" : "HTTPMessageType",
            "key.namelength" : 15,
            "key.nameoffset" : 175,
            "key.offset" : 160,
            "key.parsed_declaration" : "associatedtype HTTPMessageType: HTTPMessage",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "Self.HTTPMessageType.Type",
            "key.typeusr" : "$S15HTTPMessageType5Vapor0A9ContainerPQzmD",
            "key.usr" : "s:5Vapor20HTTPMessageContainerP0B4TypeQa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var http: <Type usr=\"s:5Vapor20HTTPMessageContainerP0B4TypeQa\">HTTPMessageType<\/Type> { get set }<\/Declaration>",
            "key.bodylength" : 9,
            "key.bodyoffset" : 286,
            "key.doc.column" : 9,
            "key.doc.comment" : "This `Container`'s mutable `HTTPMessage`.",
            "key.doc.declaration" : "var http: HTTPMessageType { get set }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift\" line=\"7\" column=\"9\"><Name>http<\/Name><USR>s:5Vapor20HTTPMessageContainerP4http0B4TypeQzvp<\/USR><Declaration>var http: HTTPMessageType { get set }<\/Declaration><CommentParts><Abstract><Para>This <codeVoice>Container<\/codeVoice>’s mutable <codeVoice>HTTPMessage<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 7,
            "key.doc.name" : "http",
            "key.doc.type" : "Other",
            "key.doclength" : 46,
            "key.docoffset" : 209,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/HTTPMessageContainer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>http<\/decl.name>: <decl.var.type><ref.associatedtype usr=\"s:5Vapor20HTTPMessageContainerP0B4TypeQa\">HTTPMessageType<\/ref.associatedtype><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 37,
            "key.name" : "http",
            "key.namelength" : 4,
            "key.nameoffset" : 263,
            "key.offset" : 259,
            "key.parsed_declaration" : "var http: HTTPMessageType",
            "key.parsed_scope.end" : 7,
            "key.parsed_scope.start" : 7,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Self.HTTPMessageType",
            "key.typeusr" : "$S15HTTPMessageType5Vapor0A9ContainerPQzD",
            "key.usr" : "s:5Vapor20HTTPMessageContainerP4http0B4TypeQzvp"
          }
        ],
        "key.typename" : "HTTPMessageContainer.Protocol",
        "key.typeusr" : "$S5Vapor20HTTPMessageContainer_pmD",
        "key.usr" : "s:5Vapor20HTTPMessageContainerP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/JSONCoder+Custom.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2809,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 58,
        "key.name" : "FIXME: add key strategy support once available on Linux *\/",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 3
      },
      {
        "key.annotated_decl" : "<Declaration>class JSONEncoder<\/Declaration>",
        "key.bodylength" : 1461,
        "key.bodyoffset" : 86,
        "key.doc.declaration" : "class JSONEncoder",
        "key.doc.full_as_xml" : "<Class><Name>JSONEncoder<\/Name><USR>s:10Foundation11JSONEncoderC<\/USR><Declaration>class JSONEncoder<\/Declaration><CommentParts><Abstract><Para><codeVoice>JSONEncoder<\/codeVoice> facilitates the encoding of <codeVoice>Encodable<\/codeVoice> values into JSON.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "JSONEncoder",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>JSONEncoder<\/decl.name><\/decl.class>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1485,
        "key.modulename" : "Foundation",
        "key.name" : "JSONEncoder",
        "key.namelength" : 11,
        "key.nameoffset" : 73,
        "key.offset" : 63,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func custom(dates dateStrategy: <Type usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/Type>.<Type usr=\"s:10Foundation11JSONEncoderC20DateEncodingStrategyO\">DateEncodingStrategy<\/Type>? = default, data dataStrategy: <Type usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/Type>.<Type usr=\"s:10Foundation11JSONEncoderC20DataEncodingStrategyO\">DataEncodingStrategy<\/Type>? = default, format outputFormatting: <Type usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/Type>.<Type usr=\"s:10Foundation11JSONEncoderC16OutputFormattingV\">OutputFormatting<\/Type>? = default, floats floatStrategy: <Type usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/Type>.<Type usr=\"s:10Foundation11JSONEncoderC34NonConformingFloatEncodingStrategyO\">NonConformingFloatEncodingStrategy<\/Type>? = default) -&gt; <Type usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 508
              }
            ],
            "key.bodylength" : 628,
            "key.bodyoffset" : 917,
            "key.doc.column" : 24,
            "key.doc.comment" : "Convenience for creating a customized `JSONEncoder`.\n\n    let encoder: JSONEncoder = .custom(dates: .millisecondsSince1970)\n\n- parameters:\n    - dates: Date encoding strategy.\n    - data: Data encoding strategy.\n    - format: Output formatting.\n    - floats: Non-conforming float encoding strategy.\n- returns: Newly created `JSONEncoder`.",
            "key.doc.declaration" : "public static func custom(dates dateStrategy: JSONEncoder.DateEncodingStrategy? = default, data dataStrategy: JSONEncoder.DataEncodingStrategy? = default, format outputFormatting: JSONEncoder.OutputFormatting? = default, floats floatStrategy: JSONEncoder.NonConformingFloatEncodingStrategy? = default) -> JSONEncoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/JSONCoder+Custom.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/JSONCoder+Custom.swift\" line=\"14\" column=\"24\"><Name>custom(dates:data:format:floats:)<\/Name><USR>s:10Foundation11JSONEncoderC5VaporE6custom5dates4data6format6floatsA2C20DateEncodingStrategyOSg_AC04DatajK0OSgAC16OutputFormattingVSgAC018NonConformingFloatjK0OSgtFZ<\/USR><Declaration>public static func custom(dates dateStrategy: JSONEncoder.DateEncodingStrategy? = default, data dataStrategy: JSONEncoder.DataEncodingStrategy? = default, format outputFormatting: JSONEncoder.OutputFormatting? = default, floats floatStrategy: JSONEncoder.NonConformingFloatEncodingStrategy? = default) -&gt; JSONEncoder<\/Declaration><CommentParts><Abstract><Para>Convenience for creating a customized <codeVoice>JSONEncoder<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>dates<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Date encoding strategy.<\/Para><\/Discussion><\/Parameter><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Data encoding strategy.<\/Para><\/Discussion><\/Parameter><Parameter><Name>format<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Output formatting.<\/Para><\/Discussion><\/Parameter><Parameter><Name>floats<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Non-conforming float encoding strategy.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Newly created <codeVoice>JSONEncoder<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let encoder: JSONEncoder = .custom(dates: .millisecondsSince1970)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 14,
            "key.doc.name" : "custom(dates:data:format:floats:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Date encoding strategy."
                  }
                ],
                "name" : "dates"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Data encoding strategy."
                  }
                ],
                "name" : "data"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Output formatting."
                  }
                ],
                "name" : "format"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Non-conforming float encoding strategy."
                  }
                ],
                "name" : "floats"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Newly created `JSONEncoder`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 413,
            "key.docoffset" : 91,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/JSONCoder+Custom.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>custom<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>dates<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dateStrategy<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/ref.class>.<ref.enum usr=\"s:10Foundation11JSONEncoderC20DateEncodingStrategyO\">DateEncodingStrategy<\/ref.enum>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataStrategy<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/ref.class>.<ref.enum usr=\"s:10Foundation11JSONEncoderC20DataEncodingStrategyO\">DataEncodingStrategy<\/ref.enum>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>format<\/decl.var.parameter.argument_label> <decl.var.parameter.name>outputFormatting<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/ref.class>.<ref.struct usr=\"s:10Foundation11JSONEncoderC16OutputFormattingV\">OutputFormatting<\/ref.struct>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>floats<\/decl.var.parameter.argument_label> <decl.var.parameter.name>floatStrategy<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/ref.class>.<ref.enum usr=\"s:10Foundation11JSONEncoderC34NonConformingFloatEncodingStrategyO\">NonConformingFloatEncodingStrategy<\/ref.enum>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 1031,
            "key.name" : "custom(dates:data:format:floats:)",
            "key.namelength" : 373,
            "key.nameoffset" : 527,
            "key.offset" : 515,
            "key.parsed_declaration" : "public static func custom(\n    dates dateStrategy: JSONEncoder.DateEncodingStrategy? = nil,\n    data dataStrategy: JSONEncoder.DataEncodingStrategy? = nil,\n    \/\/ keys keyStrategy: JSONEncoder.KeyEncodingStrategy? = nil,\n    format outputFormatting: JSONEncoder.OutputFormatting? = nil,\n    floats floatStrategy: JSONEncoder.NonConformingFloatEncodingStrategy? = nil\n) -> JSONEncoder",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 14,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let json: <Type usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/JSONCoder+Custom.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>json<\/decl.name>: <decl.var.type><ref.class usr=\"s:10Foundation11JSONEncoderC\">JSONEncoder<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.name" : "json",
                "key.namelength" : 4,
                "key.nameoffset" : 930,
                "key.offset" : 926,
                "key.parsed_declaration" : "let json = JSONEncoder()",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.typename" : "JSONEncoder",
                "key.typeusr" : "$S10Foundation11JSONEncoderCD",
                "key.usr" : "s:10Foundation11JSONEncoderC5VaporE6custom5dates4data6format6floatsA2C20DateEncodingStrategyOSg_AC04DatajK0OSgAC16OutputFormattingVSgAC018NonConformingFloatjK0OSgtFZ4jsonL_ACvp"
              }
            ],
            "key.typename" : "(JSONEncoder.Type) -> (JSONEncoder.DateEncodingStrategy?, JSONEncoder.DataEncodingStrategy?, JSONEncoder.OutputFormatting?, JSONEncoder.NonConformingFloatEncodingStrategy?) -> JSONEncoder",
            "key.typeusr" : "$S5dates4data6format6floats10Foundation11JSONEncoderCAG20DateEncodingStrategyOSg_AG04DatahI0OSgAG16OutputFormattingVSgAG018NonConformingFloathI0OSgtcD",
            "key.usr" : "s:10Foundation11JSONEncoderC5VaporE6custom5dates4data6format6floatsA2C20DateEncodingStrategyOSg_AC04DatajK0OSgAC16OutputFormattingVSgAC018NonConformingFloatjK0OSgtFZ"
          }
        ],
        "key.typename" : "JSONEncoder.Type",
        "key.typeusr" : "$S10Foundation11JSONEncoderCmD",
        "key.usr" : "s:10Foundation11JSONEncoderC"
      },
      {
        "key.annotated_decl" : "<Declaration>class JSONDecoder<\/Declaration>",
        "key.bodylength" : 1234,
        "key.bodyoffset" : 1573,
        "key.doc.declaration" : "class JSONDecoder",
        "key.doc.full_as_xml" : "<Class><Name>JSONDecoder<\/Name><USR>s:10Foundation11JSONDecoderC<\/USR><Declaration>class JSONDecoder<\/Declaration><CommentParts><Abstract><Para><codeVoice>JSONDecoder<\/codeVoice> facilitates the decoding of JSON into semantic <codeVoice>Decodable<\/codeVoice> types.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "JSONDecoder",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>JSONDecoder<\/decl.name><\/decl.class>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1258,
        "key.modulename" : "Foundation",
        "key.name" : "JSONDecoder",
        "key.namelength" : 11,
        "key.nameoffset" : 1560,
        "key.offset" : 1550,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func custom(dates dateStrategy: <Type usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/Type>.<Type usr=\"s:10Foundation11JSONDecoderC20DateDecodingStrategyO\">DateDecodingStrategy<\/Type>? = default, data dataStrategy: <Type usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/Type>.<Type usr=\"s:10Foundation11JSONDecoderC20DataDecodingStrategyO\">DataDecodingStrategy<\/Type>? = default, floats floatStrategy: <Type usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/Type>.<Type usr=\"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO\">NonConformingFloatDecodingStrategy<\/Type>? = default) -&gt; <Type usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1954
              }
            ],
            "key.bodylength" : 512,
            "key.bodyoffset" : 2293,
            "key.doc.column" : 24,
            "key.doc.comment" : "Convenience for creating a customized `JSONDecoder`.\n\n    let decoder: JSONDecoder = .custom(dates: .millisecondsSince1970)\n\n- parameters:\n    - dates: Date encoding strategy.\n    - data: Data encoding strategy.\n    - floats: Non-conforming float encoding strategy.\n- returns: Newly created `JSONDecoder`.",
            "key.doc.declaration" : "public static func custom(dates dateStrategy: JSONDecoder.DateDecodingStrategy? = default, data dataStrategy: JSONDecoder.DataDecodingStrategy? = default, floats floatStrategy: JSONDecoder.NonConformingFloatDecodingStrategy? = default) -> JSONDecoder",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/JSONCoder+Custom.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/JSONCoder+Custom.swift\" line=\"51\" column=\"24\"><Name>custom(dates:data:floats:)<\/Name><USR>s:10Foundation11JSONDecoderC5VaporE6custom5dates4data6floatsA2C20DateDecodingStrategyOSg_AC04DataiJ0OSgAC018NonConformingFloatiJ0OSgtFZ<\/USR><Declaration>public static func custom(dates dateStrategy: JSONDecoder.DateDecodingStrategy? = default, data dataStrategy: JSONDecoder.DataDecodingStrategy? = default, floats floatStrategy: JSONDecoder.NonConformingFloatDecodingStrategy? = default) -&gt; JSONDecoder<\/Declaration><CommentParts><Abstract><Para>Convenience for creating a customized <codeVoice>JSONDecoder<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>dates<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Date encoding strategy.<\/Para><\/Discussion><\/Parameter><Parameter><Name>data<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Data encoding strategy.<\/Para><\/Discussion><\/Parameter><Parameter><Name>floats<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Non-conforming float encoding strategy.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Newly created <codeVoice>JSONDecoder<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let decoder: JSONDecoder = .custom(dates: .millisecondsSince1970)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 51,
            "key.doc.name" : "custom(dates:data:floats:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Date encoding strategy."
                  }
                ],
                "name" : "dates"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Data encoding strategy."
                  }
                ],
                "name" : "data"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Non-conforming float encoding strategy."
                  }
                ],
                "name" : "floats"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Newly created `JSONDecoder`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 372,
            "key.docoffset" : 1578,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/JSONCoder+Custom.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>custom<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>dates<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dateStrategy<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/ref.class>.<ref.enum usr=\"s:10Foundation11JSONDecoderC20DateDecodingStrategyO\">DateDecodingStrategy<\/ref.enum>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label> <decl.var.parameter.name>dataStrategy<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/ref.class>.<ref.enum usr=\"s:10Foundation11JSONDecoderC20DataDecodingStrategyO\">DataDecodingStrategy<\/ref.enum>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>floats<\/decl.var.parameter.argument_label> <decl.var.parameter.name>floatStrategy<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/ref.class>.<ref.enum usr=\"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO\">NonConformingFloatDecodingStrategy<\/ref.enum>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 845,
            "key.name" : "custom(dates:data:floats:)",
            "key.namelength" : 303,
            "key.nameoffset" : 1973,
            "key.offset" : 1961,
            "key.parsed_declaration" : "public static func custom(\n    dates dateStrategy: JSONDecoder.DateDecodingStrategy? = nil,\n    data dataStrategy: JSONDecoder.DataDecodingStrategy? = nil,\n    \/\/ keys keyStrategy: JSONDecoder.KeyDecodingStrategy? = nil,\n    floats floatStrategy: JSONDecoder.NonConformingFloatDecodingStrategy? = nil\n) -> JSONDecoder",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 51,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let json: <Type usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/JSONCoder+Custom.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>json<\/decl.name>: <decl.var.type><ref.class usr=\"s:10Foundation11JSONDecoderC\">JSONDecoder<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.name" : "json",
                "key.namelength" : 4,
                "key.nameoffset" : 2306,
                "key.offset" : 2302,
                "key.parsed_declaration" : "let json = JSONDecoder()",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.typename" : "JSONDecoder",
                "key.typeusr" : "$S10Foundation11JSONDecoderCD",
                "key.usr" : "s:10Foundation11JSONDecoderC5VaporE6custom5dates4data6floatsA2C20DateDecodingStrategyOSg_AC04DataiJ0OSgAC018NonConformingFloatiJ0OSgtFZ4jsonL_ACvp"
              }
            ],
            "key.typename" : "(JSONDecoder.Type) -> (JSONDecoder.DateDecodingStrategy?, JSONDecoder.DataDecodingStrategy?, JSONDecoder.NonConformingFloatDecodingStrategy?) -> JSONDecoder",
            "key.typeusr" : "$S5dates4data6floats10Foundation11JSONDecoderCAF20DateDecodingStrategyOSg_AF04DatagH0OSgAF018NonConformingFloatgH0OSgtcD",
            "key.usr" : "s:10Foundation11JSONDecoderC5VaporE6custom5dates4data6floatsA2C20DateDecodingStrategyOSg_AC04DataiJ0OSgAC018NonConformingFloatiJ0OSgtFZ"
          }
        ],
        "key.typename" : "JSONDecoder.Type",
        "key.typeusr" : "$S10Foundation11JSONDecoderCmD",
        "key.usr" : "s:10Foundation11JSONDecoderC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3740,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class PlaintextEncoder : <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type>, <Type usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 44
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 37
          }
        ],
        "key.bodylength" : 1128,
        "key.bodyoffset" : 107,
        "key.doc.column" : 20,
        "key.doc.comment" : "Encodes data as plaintext, utf8.",
        "key.doc.declaration" : "public final class PlaintextEncoder : DataEncoder, HTTPMessageEncoder",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift\" line=\"2\" column=\"20\"><Name>PlaintextEncoder<\/Name><USR>s:5Vapor16PlaintextEncoderC<\/USR><Declaration>public final class PlaintextEncoder : DataEncoder, HTTPMessageEncoder<\/Declaration><CommentParts><Abstract><Para>Encodes data as plaintext, utf8.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "PlaintextEncoder",
        "key.doc.type" : "Class",
        "key.doclength" : 37,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 74
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 87
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>PlaintextEncoder<\/decl.name> : <ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol>, <ref.protocol usr=\"s:4HTTP18HTTPMessageEncoderP\">HTTPMessageEncoder<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "DataEncoder"
          },
          {
            "key.name" : "HTTPMessageEncoder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1186,
        "key.name" : "PlaintextEncoder",
        "key.namelength" : 16,
        "key.nameoffset" : 56,
        "key.offset" : 50,
        "key.parsed_declaration" : "public final class PlaintextEncoder: DataEncoder, HTTPMessageEncoder",
        "key.parsed_scope.end" : 35,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtC4main16PlaintextEncoder",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let encoder: <Type usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC\">_DataEncoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 137
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Private encoder.",
            "key.doc.declaration" : "private let encoder: _DataEncoder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift\" line=\"4\" column=\"17\"><Name>encoder<\/Name><USR>s:5Vapor16PlaintextEncoderC7encoder33_53363B4C951E080EEDD50B5E33E9C0FDLLAA05_DataC0AELLCvp<\/USR><Declaration>private let encoder: _DataEncoder<\/Declaration><CommentParts><Abstract><Para>Private encoder.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "encoder",
            "key.doc.type" : "Other",
            "key.doclength" : 21,
            "key.docoffset" : 112,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>encoder<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC\">_DataEncoder<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.name" : "encoder",
            "key.namelength" : 7,
            "key.nameoffset" : 149,
            "key.offset" : 145,
            "key.parsed_declaration" : "private let encoder: _DataEncoder",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "_DataEncoder",
            "key.typeusr" : "$S5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLCD",
            "key.usr" : "s:5Vapor16PlaintextEncoderC7encoder33_53363B4C951E080EEDD50B5E33E9C0FDLLAA05_DataC0AELLCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let contentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 227
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The specific plaintext `MediaType` to use.",
            "key.doc.declaration" : "private let contentType: MediaType",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift\" line=\"7\" column=\"17\"><Name>contentType<\/Name><USR>s:5Vapor16PlaintextEncoderC11contentType33_53363B4C951E080EEDD50B5E33E9C0FDLL4Core05MediaE0Vvp<\/USR><Declaration>private let contentType: MediaType<\/Declaration><CommentParts><Abstract><Para>The specific plaintext <codeVoice>MediaType<\/codeVoice> to use.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 7,
            "key.doc.name" : "contentType",
            "key.doc.type" : "Other",
            "key.doclength" : 47,
            "key.docoffset" : 176,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>contentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.name" : "contentType",
            "key.namelength" : 11,
            "key.nameoffset" : 239,
            "key.offset" : 235,
            "key.parsed_declaration" : "private let contentType: MediaType",
            "key.parsed_scope.end" : 7,
            "key.parsed_scope.start" : 7,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:5Vapor16PlaintextEncoderC11contentType33_53363B4C951E080EEDD50B5E33E9C0FDLL4Core05MediaE0Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ contentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> = default)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 456
              }
            ],
            "key.bodylength" : 70,
            "key.bodyoffset" : 508,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `PlaintextEncoder`.\n\n- parameters:\n    - contentType: Plaintext `MediaType` to use.\n                   Usually `.plainText` or `.html`.",
            "key.doc.declaration" : "public init(_ contentType: MediaType = default)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift\" line=\"14\" column=\"12\"><Name>init(_:)<\/Name><USR>s:5Vapor16PlaintextEncoderCyAC4Core9MediaTypeVcfc<\/USR><Declaration>public init(_ contentType: MediaType = default)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>PlaintextEncoder<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>contentType<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Plaintext <codeVoice>MediaType<\/codeVoice> to use. Usually <codeVoice>.plainText<\/codeVoice> or <codeVoice>.html<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 14,
            "key.doc.name" : "init(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Plaintext `MediaType` to use. Usually `.plainText` or `.html`."
                  }
                ],
                "name" : "contentType"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 185,
            "key.docoffset" : 267,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>contentType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 116,
            "key.name" : "init(_:)",
            "key.namelength" : 43,
            "key.nameoffset" : 463,
            "key.offset" : 463,
            "key.parsed_declaration" : "public init(_ contentType: MediaType = .plainText)",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 14,
            "key.substructure" : [

            ],
            "key.typename" : "(PlaintextEncoder.Type) -> (MediaType) -> PlaintextEncoder",
            "key.typeusr" : "$Sy5Vapor16PlaintextEncoderC4Core9MediaTypeVcD",
            "key.usr" : "s:5Vapor16PlaintextEncoderCyAC4Core9MediaTypeVcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;E&gt;(_ encodable: <Type usr=\"s:5Vapor16PlaintextEncoderC6encodey10Foundation4DataVxKSERzlF1EL_xmfp\">E<\/Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data<\/Type> where E : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 612
              }
            ],
            "key.bodylength" : 257,
            "key.bodyoffset" : 686,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `DataEncoder`.",
            "key.doc.declaration" : "public func encode<E>(_ encodable: E) throws -> Data where E : Encodable",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift\" line=\"20\" column=\"17\"><Name>encode(_:)<\/Name><USR>s:5Vapor16PlaintextEncoderC6encodey10Foundation4DataVxKSERzlF<\/USR><Declaration>public func encode&lt;E&gt;(_ encodable: E) throws -&gt; Data where E : Encodable<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>DataEncoder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 20,
            "key.doc.name" : "encode(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 585,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16PlaintextEncoderC6encodey10Foundation4DataVxKSERzlF1EL_xmfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16PlaintextEncoderC6encodey10Foundation4DataVxKSERzlF1EL_xmfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 325,
            "key.name" : "encode(_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 624,
            "key.offset" : 619,
            "key.overrides" : [
              {
                "key.usr" : "s:4Core11DataEncoderP6encodey10Foundation0B0Vqd__KSERd__lF"
              }
            ],
            "key.parsed_declaration" : "public func encode<E>(_ encodable: E) throws -> Data where E : Encodable",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 20,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF\">encode(_:to:on:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 631,
                "key.offset" : 631,
                "key.parsed_declaration" : "public func encode<E>(_ encodable: E) throws -> Data where E : Encodable",
                "key.parsed_scope.end" : 20,
                "key.parsed_scope.start" : 20,
                "key.typename" : "E.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor16PlaintextEncoderC6encodey10Foundation4DataVxKSERzlF1EL_xmfp"
              }
            ],
            "key.typename" : "<E where E : Encodable> (PlaintextEncoder) -> (E) throws -> Data",
            "key.typeusr" : "$Sy10Foundation4DataVxKcSERzluD",
            "key.usr" : "s:5Vapor16PlaintextEncoderC6encodey10Foundation4DataVxKSERzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;E, M&gt;(_ encodable: <Type usr=\"s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp\">E<\/Type>, to message: inout <Type usr=\"s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/Type>, on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>) throws where E : <Type usr=\"s:SE\">Encodable<\/Type>, M : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 984
              }
            ],
            "key.bodylength" : 113,
            "key.bodyoffset" : 1120,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `HTTPMessageEncoder`.",
            "key.doc.declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws where E : Encodable, M : HTTPMessage",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift\" line=\"29\" column=\"17\"><Name>encode(_:to:on:)<\/Name><USR>s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF<\/USR><Declaration>public func encode&lt;E, M&gt;(_ encodable: E, to message: inout M, on worker: Worker) throws where E : Encodable, M : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>HTTPMessageEncoder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 29,
            "key.doc.name" : "encode(_:to:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 30,
            "key.docoffset" : 950,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>message<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.generic_type_param usr=\"s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>M : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 243,
            "key.name" : "encode(_:to:on:)",
            "key.namelength" : 68,
            "key.nameoffset" : 996,
            "key.offset" : 991,
            "key.overrides" : [
              {
                "key.usr" : "s:4HTTP18HTTPMessageEncoderP6encode_2to2onyqd___qd_0_z3NIO14EventLoopGroup_ptKSERd__AA0B0Rd_0_r0_lF"
              }
            ],
            "key.parsed_declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws\n    where E: Encodable, M: HTTPMessage",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 29,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16PlaintextEncoderC6encodey10Foundation4DataVxKSERzlF\">encode(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 1003,
                "key.offset" : 1003,
                "key.parsed_declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws",
                "key.parsed_scope.end" : 29,
                "key.parsed_scope.start" : 29,
                "key.typename" : "E.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp"
              },
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 1006,
                "key.offset" : 1006,
                "key.parsed_declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws",
                "key.parsed_scope.end" : 29,
                "key.parsed_scope.start" : 29,
                "key.typename" : "M.Type",
                "key.typeusr" : "$Sq_mD",
                "key.usr" : "s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp"
              }
            ],
            "key.typename" : "<E, M where E : Encodable, M : HTTPMessage> (PlaintextEncoder) -> (E, inout M, EventLoopGroup) throws -> ()",
            "key.typeusr" : "$S_2to2onyx_q_z3NIO14EventLoopGroup_ptKcSERz4HTTP11HTTPMessageR_r0_luD",
            "key.usr" : "s:5Vapor16PlaintextEncoderC6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF"
          }
        ],
        "key.typename" : "PlaintextEncoder.Type",
        "key.typeusr" : "$S5Vapor16PlaintextEncoderCmD",
        "key.usr" : "s:5Vapor16PlaintextEncoderC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1241
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private final class _DataEncoder : <Type usr=\"s:s7EncoderP\">Encoder<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 1264
          },
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 1256
          }
        ],
        "key.bodylength" : 685,
        "key.bodyoffset" : 1299,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 1290
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>_DataEncoder<\/decl.name> : <ref.protocol usr=\"s:s7EncoderP\">Encoder<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Encoder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 715,
        "key.name" : "_DataEncoder",
        "key.namelength" : 12,
        "key.nameoffset" : 1276,
        "key.offset" : 1270,
        "key.parsed_declaration" : "private final class _DataEncoder: Encoder",
        "key.parsed_scope.end" : 61,
        "key.parsed_scope.start" : 39,
        "key.runtime_name" : "_TtC4main12_DataEncoder",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var codingPath: [<Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1304
              }
            ],
            "key.doc.declaration" : "var codingPath: [CodingKey] { get }",
            "key.doc.full_as_xml" : "<Other><Name>codingPath<\/Name><USR>s:s7EncoderP10codingPathSays9CodingKey_pGvp<\/USR><Declaration>var codingPath: [CodingKey] { get }<\/Declaration><CommentParts><Abstract><Para>The path of coding keys taken to get to this point in encoding.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "codingPath",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>codingPath<\/decl.name>: <decl.var.type>[<ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.name" : "codingPath",
            "key.namelength" : 10,
            "key.nameoffset" : 1315,
            "key.offset" : 1311,
            "key.overrides" : [
              {
                "key.usr" : "s:s7EncoderP10codingPathSays9CodingKey_pGvp"
              }
            ],
            "key.parsed_declaration" : "public var codingPath: [CodingKey]",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 40,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[CodingKey]",
            "key.typeusr" : "$SSays9CodingKey_pGD",
            "key.usr" : "s:s7EncoderP10codingPathSays9CodingKey_pGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var userInfo: [<Type usr=\"s:s17CodingUserInfoKeyV\">CodingUserInfoKey<\/Type> : Any]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1343
              }
            ],
            "key.doc.declaration" : "var userInfo: [CodingUserInfoKey : Any] { get }",
            "key.doc.full_as_xml" : "<Other><Name>userInfo<\/Name><USR>s:s7EncoderP8userInfoSDys010CodingUserC3KeyVypGvp<\/USR><Declaration>var userInfo: [CodingUserInfoKey : Any] { get }<\/Declaration><CommentParts><Abstract><Para>Any contextual information set by the user for encoding.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "userInfo",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>userInfo<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:s17CodingUserInfoKeyV\">CodingUserInfoKey<\/ref.struct> : Any]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 38,
            "key.name" : "userInfo",
            "key.namelength" : 8,
            "key.nameoffset" : 1354,
            "key.offset" : 1350,
            "key.overrides" : [
              {
                "key.usr" : "s:s7EncoderP8userInfoSDys010CodingUserC3KeyVypGvp"
              }
            ],
            "key.parsed_declaration" : "public var userInfo: [CodingUserInfoKey: Any]",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 41,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[CodingUserInfoKey : Any]",
            "key.typeusr" : "$SSDys17CodingUserInfoKeyVypGD",
            "key.usr" : "s:s7EncoderP8userInfoSDys010CodingUserC3KeyVypGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var plaintext: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1393
              }
            ],
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>plaintext<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "plaintext",
            "key.namelength" : 9,
            "key.nameoffset" : 1404,
            "key.offset" : 1400,
            "key.parsed_declaration" : "public var plaintext: String?",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 42,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String?",
            "key.typeusr" : "$SSSSgD",
            "key.usr" : "s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC9plaintextSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1428
              }
            ],
            "key.bodylength" : 91,
            "key.bodyoffset" : 1443,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 100,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 1435,
            "key.offset" : 1435,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 44,
            "key.substructure" : [

            ],
            "key.typename" : "(_DataEncoder.Type) -> () -> _DataEncoder",
            "key.typeusr" : "$S5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLCycD",
            "key.usr" : "s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLCADycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func container&lt;Key&gt;(keyedBy type: <Type usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC9container7keyedBys22KeyedEncodingContainerVyxGxm_ts9CodingKeyRzlF0T0L_xmfp\">Key<\/Type>.Type) -&gt; <Type usr=\"s:s22KeyedEncodingContainerV\">KeyedEncodingContainer<\/Type>&lt;<Type usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC9container7keyedBys22KeyedEncodingContainerVyxGxm_ts9CodingKeyRzlF0T0L_xmfp\">Key<\/Type>&gt; where Key : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1541
              }
            ],
            "key.bodylength" : 77,
            "key.bodyoffset" : 1635,
            "key.doc.declaration" : "func container<Key>(keyedBy type: Key.Type) -> KeyedEncodingContainer<Key> where Key : CodingKey",
            "key.doc.discussion" : [
              {
                "Para" : "You must use only one kind of top-level encoding container. This method must not be called after a call to `unkeyedContainer()` or after encoding a value through a call to `singleValueContainer()`"
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>container(keyedBy:)<\/Name><USR>s:s7EncoderP9container7keyedBys22KeyedEncodingContainerVyqd__Gqd__m_ts9CodingKeyRd__lF<\/USR><Declaration>func container&lt;Key&gt;(keyedBy type: Key.Type) -&gt; KeyedEncodingContainer&lt;Key&gt; where Key : CodingKey<\/Declaration><CommentParts><Abstract><Para>Returns an encoding container appropriate for holding multiple values keyed by the given key type.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key type to use for the container.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A new keyed encoding container.<\/Para><\/ResultDiscussion><Discussion><Para>You must use only one kind of top-level encoding container. This method must not be called after a call to <codeVoice>unkeyedContainer()<\/codeVoice> or after encoding a value through a call to <codeVoice>singleValueContainer()<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "container(keyedBy:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The key type to use for the container."
                  }
                ],
                "name" : "type"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A new keyed encoding container."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>container<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC9container7keyedBys22KeyedEncodingContainerVyxGxm_ts9CodingKeyRzlF0T0L_xmfp\"><decl.generic_type_param.name>Key<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>keyedBy<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC9container7keyedBys22KeyedEncodingContainerVyxGxm_ts9CodingKeyRzlF0T0L_xmfp\">Key<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s22KeyedEncodingContainerV\">KeyedEncodingContainer<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC9container7keyedBys22KeyedEncodingContainerVyxGxm_ts9CodingKeyRzlF0T0L_xmfp\">Key<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Key : <ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 165,
            "key.name" : "container(keyedBy:)",
            "key.namelength" : 49,
            "key.nameoffset" : 1553,
            "key.offset" : 1548,
            "key.overrides" : [
              {
                "key.usr" : "s:s7EncoderP9container7keyedBys22KeyedEncodingContainerVyqd__Gqd__m_ts9CodingKeyRd__lF"
              }
            ],
            "key.parsed_declaration" : "public func container<Key: CodingKey>(keyedBy type: Key.Type) -> KeyedEncodingContainer<Key>",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 50,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Key : <Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 1568
                  }
                ],
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Key<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CodingKey"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 14,
                "key.name" : "Key",
                "key.namelength" : 3,
                "key.nameoffset" : 1563,
                "key.offset" : 1563,
                "key.parsed_declaration" : "public func container<Key: CodingKey>(keyedBy type: Key.Type) -> KeyedEncodingContainer<Key>",
                "key.parsed_scope.end" : 50,
                "key.parsed_scope.start" : 50,
                "key.typename" : "Key.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC9container7keyedBys22KeyedEncodingContainerVyxGxm_ts9CodingKeyRzlF0T0L_xmfp"
              }
            ],
            "key.typename" : "<Key where Key : CodingKey> (_DataEncoder) -> (Key.Type) -> KeyedEncodingContainer<Key>",
            "key.typeusr" : "$S7keyedBys22KeyedEncodingContainerVyxGxm_tcs9CodingKeyRzluD",
            "key.usr" : "s:s7EncoderP9container7keyedBys22KeyedEncodingContainerVyqd__Gqd__m_ts9CodingKeyRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func unkeyedContainer() -&gt; <Type usr=\"s:s24UnkeyedEncodingContainerP\">UnkeyedEncodingContainer<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1719
              }
            ],
            "key.bodylength" : 71,
            "key.bodyoffset" : 1779,
            "key.doc.declaration" : "func unkeyedContainer() -> UnkeyedEncodingContainer",
            "key.doc.discussion" : [
              {
                "Para" : "You must use only one kind of top-level encoding container. This method must not be called after a call to `container(keyedBy:)` or after encoding a value through a call to `singleValueContainer()`"
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>unkeyedContainer()<\/Name><USR>s:s7EncoderP16unkeyedContainers015UnkeyedEncodingC0_pyF<\/USR><Declaration>func unkeyedContainer() -&gt; UnkeyedEncodingContainer<\/Declaration><CommentParts><Abstract><Para>Returns an encoding container appropriate for holding multiple unkeyed values.<\/Para><\/Abstract><ResultDiscussion><Para>A new empty unkeyed container.<\/Para><\/ResultDiscussion><Discussion><Para>You must use only one kind of top-level encoding container. This method must not be called after a call to <codeVoice>container(keyedBy:)<\/codeVoice> or after encoding a value through a call to <codeVoice>singleValueContainer()<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "unkeyedContainer()",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new empty unkeyed container."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>unkeyedContainer<\/decl.name>() -&gt; <decl.function.returntype><ref.protocol usr=\"s:s24UnkeyedEncodingContainerP\">UnkeyedEncodingContainer<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 125,
            "key.name" : "unkeyedContainer()",
            "key.namelength" : 18,
            "key.nameoffset" : 1731,
            "key.offset" : 1726,
            "key.overrides" : [
              {
                "key.usr" : "s:s7EncoderP16unkeyedContainers015UnkeyedEncodingC0_pyF"
              }
            ],
            "key.parsed_declaration" : "public func unkeyedContainer() -> UnkeyedEncodingContainer",
            "key.parsed_scope.end" : 56,
            "key.parsed_scope.start" : 54,
            "key.substructure" : [

            ],
            "key.typename" : "(_DataEncoder) -> () -> UnkeyedEncodingContainer",
            "key.typeusr" : "$Ss24UnkeyedEncodingContainer_pycD",
            "key.usr" : "s:s7EncoderP16unkeyedContainers015UnkeyedEncodingC0_pyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func singleValueContainer() -&gt; <Type usr=\"s:s28SingleValueEncodingContainerP\">SingleValueEncodingContainer<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1857
              }
            ],
            "key.bodylength" : 57,
            "key.bodyoffset" : 1925,
            "key.doc.declaration" : "func singleValueContainer() -> SingleValueEncodingContainer",
            "key.doc.discussion" : [
              {
                "Para" : "You must use only one kind of top-level encoding container. This method must not be called after a call to `unkeyedContainer()` or `container(keyedBy:)`, or after encoding a value through a call to `singleValueContainer()`"
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>singleValueContainer()<\/Name><USR>s:s7EncoderP20singleValueContainers06Singlec8EncodingD0_pyF<\/USR><Declaration>func singleValueContainer() -&gt; SingleValueEncodingContainer<\/Declaration><CommentParts><Abstract><Para>Returns an encoding container appropriate for holding a single primitive value.<\/Para><\/Abstract><ResultDiscussion><Para>A new empty single value container.<\/Para><\/ResultDiscussion><Discussion><Para>You must use only one kind of top-level encoding container. This method must not be called after a call to <codeVoice>unkeyedContainer()<\/codeVoice> or <codeVoice>container(keyedBy:)<\/codeVoice>, or after encoding a value through a call to <codeVoice>singleValueContainer()<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "singleValueContainer()",
            "key.doc.result_discussion" : [
              {
                "Para" : "A new empty single value container."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>singleValueContainer<\/decl.name>() -&gt; <decl.function.returntype><ref.protocol usr=\"s:s28SingleValueEncodingContainerP\">SingleValueEncodingContainer<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 119,
            "key.name" : "singleValueContainer()",
            "key.namelength" : 22,
            "key.nameoffset" : 1869,
            "key.offset" : 1864,
            "key.overrides" : [
              {
                "key.usr" : "s:s7EncoderP20singleValueContainers06Singlec8EncodingD0_pyF"
              }
            ],
            "key.parsed_declaration" : "public func singleValueContainer() -> SingleValueEncodingContainer",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 58,
            "key.substructure" : [

            ],
            "key.typename" : "(_DataEncoder) -> () -> SingleValueEncodingContainer",
            "key.typeusr" : "$Ss28SingleValueEncodingContainer_pycD",
            "key.usr" : "s:s7EncoderP20singleValueContainers06Singlec8EncodingD0_pyF"
          }
        ],
        "key.typename" : "_DataEncoder.Type",
        "key.typeusr" : "$S5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLCmD",
        "key.usr" : "s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private final class DataEncodingContainer : <Type usr=\"s:s28SingleValueEncodingContainerP\">SingleValueEncodingContainer<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 1995
          },
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 1987
          }
        ],
        "key.bodylength" : 1678,
        "key.bodyoffset" : 2060,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 28,
            "key.offset" : 2030
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>DataEncodingContainer<\/decl.name> : <ref.protocol usr=\"s:s28SingleValueEncodingContainerP\">SingleValueEncodingContainer<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "SingleValueEncodingContainer"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1738,
        "key.name" : "DataEncodingContainer",
        "key.namelength" : 21,
        "key.nameoffset" : 2007,
        "key.offset" : 2001,
        "key.parsed_declaration" : "private final class DataEncodingContainer: SingleValueEncodingContainer",
        "key.parsed_scope.end" : 112,
        "key.parsed_scope.start" : 63,
        "key.runtime_name" : "_TtC4main21DataEncodingContainer",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>var codingPath: [<Type usr=\"s:s9CodingKeyP\">CodingKey<\/Type>] { get }<\/Declaration>",
            "key.bodylength" : 39,
            "key.bodyoffset" : 2094,
            "key.doc.declaration" : "var codingPath: [CodingKey] { get }",
            "key.doc.full_as_xml" : "<Other><Name>codingPath<\/Name><USR>s:s28SingleValueEncodingContainerP10codingPathSays9CodingKey_pGvp<\/USR><Declaration>var codingPath: [CodingKey] { get }<\/Declaration><CommentParts><Abstract><Para>The path of coding keys taken to get to this point in encoding.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.name" : "codingPath",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>codingPath<\/decl.name>: <decl.var.type>[<ref.protocol usr=\"s:s9CodingKeyP\">CodingKey<\/ref.protocol>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 69,
            "key.name" : "codingPath",
            "key.namelength" : 10,
            "key.nameoffset" : 2069,
            "key.offset" : 2065,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP10codingPathSays9CodingKey_pGvp"
              }
            ],
            "key.parsed_declaration" : "var codingPath: [CodingKey]",
            "key.parsed_scope.end" : 66,
            "key.parsed_scope.start" : 64,
            "key.typename" : "[CodingKey]",
            "key.typeusr" : "$SSays9CodingKey_pGD",
            "key.usr" : "s:s28SingleValueEncodingContainerP10codingPathSays9CodingKey_pGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let encoder: <Type usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC\">_DataEncoder<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>encoder<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC\">_DataEncoder<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.name" : "encoder",
            "key.namelength" : 7,
            "key.nameoffset" : 2144,
            "key.offset" : 2140,
            "key.parsed_declaration" : "let encoder: _DataEncoder",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 68,
            "key.typename" : "_DataEncoder",
            "key.typeusr" : "$S5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLCD",
            "key.usr" : "s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC7encoderAA01_B7EncoderACLLCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(encoder: <Type usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC\">_DataEncoder<\/Type>)<\/Declaration>",
            "key.bodylength" : 36,
            "key.bodyoffset" : 2199,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>encoder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor12_DataEncoder33_53363B4C951E080EEDD50B5E33E9C0FDLLC\">_DataEncoder<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 66,
            "key.name" : "init(encoder:)",
            "key.namelength" : 27,
            "key.nameoffset" : 2170,
            "key.offset" : 2170,
            "key.parsed_declaration" : "init(encoder: _DataEncoder)",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 69,
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer.Type) -> (_DataEncoder) -> DataEncodingContainer",
            "key.typeusr" : "$S7encoder5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLCAB01_C7EncoderADLLC_tcD",
            "key.usr" : "s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC7encoderAdA01_B7EncoderACLLC_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encodeNil() throws<\/Declaration>",
            "key.bodylength" : 37,
            "key.bodyoffset" : 2267,
            "key.doc.declaration" : "mutating func encodeNil() throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encodeNil()<\/Name><USR>s:s28SingleValueEncodingContainerP9encodeNilyyKF<\/USR><Declaration>mutating func encodeNil() throws<\/Declaration><CommentParts><Abstract><Para>Encodes a null value.<\/Para><\/Abstract><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if a null value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encodeNil()",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encodeNil<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 63,
            "key.name" : "encodeNil()",
            "key.namelength" : 11,
            "key.nameoffset" : 2247,
            "key.offset" : 2242,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP9encodeNilyyKF"
              }
            ],
            "key.parsed_declaration" : "func encodeNil() throws",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 73,
            "key.typename" : "(DataEncodingContainer) -> () throws -> ()",
            "key.typeusr" : "$SyyKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP9encodeNilyyKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:Sb\">Bool<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 51,
            "key.bodyoffset" : 2346,
            "key.doc.declaration" : "mutating func encode(_ value: Bool) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyySbKF<\/USR><Declaration>mutating func encode(_ value: Bool) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 87,
            "key.name" : "encode(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 2316,
            "key.offset" : 2311,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySbKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: Bool) throws",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 77,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (Bool) throws -> ()",
            "key.typeusr" : "$SyySbKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySbKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:Si\">Int<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 51,
            "key.bodyoffset" : 2438,
            "key.doc.declaration" : "mutating func encode(_ value: Int) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyySiKF<\/USR><Declaration>mutating func encode(_ value: Int) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 86,
            "key.name" : "encode(_:)",
            "key.namelength" : 20,
            "key.nameoffset" : 2409,
            "key.offset" : 2404,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySiKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: Int) throws",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 81,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (Int) throws -> ()",
            "key.typeusr" : "$SyySiKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySiKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:Sd\">Double<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 51,
            "key.bodyoffset" : 2533,
            "key.doc.declaration" : "mutating func encode(_ value: Double) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyySdKF<\/USR><Declaration>mutating func encode(_ value: Double) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 89,
            "key.name" : "encode(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 2501,
            "key.offset" : 2496,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySdKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: Double) throws",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 85,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (Double) throws -> ()",
            "key.typeusr" : "$SyySdKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySdKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:SS\">String<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 27,
            "key.bodyoffset" : 2628,
            "key.doc.declaration" : "mutating func encode(_ value: String) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyySSKF<\/USR><Declaration>mutating func encode(_ value: String) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 65,
            "key.name" : "encode(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 2596,
            "key.offset" : 2591,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySSKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: String) throws",
            "key.parsed_scope.end" : 89,
            "key.parsed_scope.start" : 89,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (String) throws -> ()",
            "key.typeusr" : "$SyySSKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySSKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:s4Int8V\">Int8<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 2696,
            "key.doc.declaration" : "mutating func encode(_ value: Int8) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyys4Int8VKF<\/USR><Declaration>mutating func encode(_ value: Int8) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s4Int8V\">Int8<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 60,
            "key.name" : "encode(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 2666,
            "key.offset" : 2661,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys4Int8VKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: Int8) throws",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 90,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (Int8) throws -> ()",
            "key.typeusr" : "$Syys4Int8VKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys4Int8VKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:s5Int16V\">Int16<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 2762,
            "key.doc.declaration" : "mutating func encode(_ value: Int16) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyys5Int16VKF<\/USR><Declaration>mutating func encode(_ value: Int16) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int16V\">Int16<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 61,
            "key.name" : "encode(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 2731,
            "key.offset" : 2726,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys5Int16VKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: Int16) throws",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 91,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (Int16) throws -> ()",
            "key.typeusr" : "$Syys5Int16VKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys5Int16VKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:s5Int32V\">Int32<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 2828,
            "key.doc.declaration" : "mutating func encode(_ value: Int32) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyys5Int32VKF<\/USR><Declaration>mutating func encode(_ value: Int32) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 61,
            "key.name" : "encode(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 2797,
            "key.offset" : 2792,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys5Int32VKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: Int32) throws",
            "key.parsed_scope.end" : 92,
            "key.parsed_scope.start" : 92,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (Int32) throws -> ()",
            "key.typeusr" : "$Syys5Int32VKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys5Int32VKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:s5Int64V\">Int64<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 2894,
            "key.doc.declaration" : "mutating func encode(_ value: Int64) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyys5Int64VKF<\/USR><Declaration>mutating func encode(_ value: Int64) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int64V\">Int64<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 61,
            "key.name" : "encode(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 2863,
            "key.offset" : 2858,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys5Int64VKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: Int64) throws",
            "key.parsed_scope.end" : 93,
            "key.parsed_scope.start" : 93,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (Int64) throws -> ()",
            "key.typeusr" : "$Syys5Int64VKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys5Int64VKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:Su\">UInt<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 24,
            "key.bodyoffset" : 2959,
            "key.doc.declaration" : "mutating func encode(_ value: UInt) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyySuKF<\/USR><Declaration>mutating func encode(_ value: UInt) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 60,
            "key.name" : "encode(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 2929,
            "key.offset" : 2924,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySuKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: UInt) throws",
            "key.parsed_scope.end" : 94,
            "key.parsed_scope.start" : 94,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (UInt) throws -> ()",
            "key.typeusr" : "$SyySuKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySuKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:s5UInt8V\">UInt8<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 25,
            "key.bodyoffset" : 3025,
            "key.doc.declaration" : "mutating func encode(_ value: UInt8) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyys5UInt8VKF<\/USR><Declaration>mutating func encode(_ value: UInt8) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 62,
            "key.name" : "encode(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 2994,
            "key.offset" : 2989,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys5UInt8VKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: UInt8) throws",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 95,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (UInt8) throws -> ()",
            "key.typeusr" : "$Syys5UInt8VKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys5UInt8VKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:s6UInt16V\">UInt16<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 25,
            "key.bodyoffset" : 3093,
            "key.doc.declaration" : "mutating func encode(_ value: UInt16) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyys6UInt16VKF<\/USR><Declaration>mutating func encode(_ value: UInt16) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt16V\">UInt16<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 63,
            "key.name" : "encode(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 3061,
            "key.offset" : 3056,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys6UInt16VKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: UInt16) throws",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 96,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (UInt16) throws -> ()",
            "key.typeusr" : "$Syys6UInt16VKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys6UInt16VKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:s6UInt32V\">UInt32<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 25,
            "key.bodyoffset" : 3161,
            "key.doc.declaration" : "mutating func encode(_ value: UInt32) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyys6UInt32VKF<\/USR><Declaration>mutating func encode(_ value: UInt32) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 63,
            "key.name" : "encode(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 3129,
            "key.offset" : 3124,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys6UInt32VKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: UInt32) throws",
            "key.parsed_scope.end" : 97,
            "key.parsed_scope.start" : 97,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (UInt32) throws -> ()",
            "key.typeusr" : "$Syys6UInt32VKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys6UInt32VKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:s6UInt64V\">UInt64<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 25,
            "key.bodyoffset" : 3229,
            "key.doc.declaration" : "mutating func encode(_ value: UInt64) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyys6UInt64VKF<\/USR><Declaration>mutating func encode(_ value: UInt64) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt64V\">UInt64<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 63,
            "key.name" : "encode(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 3197,
            "key.offset" : 3192,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys6UInt64VKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: UInt64) throws",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 98,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (UInt64) throws -> ()",
            "key.typeusr" : "$Syys6UInt64VKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyys6UInt64VKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode(_ value: <Type usr=\"s:Sf\">Float<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 27,
            "key.bodyoffset" : 3296,
            "key.doc.declaration" : "mutating func encode(_ value: Float) throws",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyySfKF<\/USR><Declaration>mutating func encode(_ value: Float) throws<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 64,
            "key.name" : "encode(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 3265,
            "key.offset" : 3260,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySfKF"
              }
            ],
            "key.parsed_declaration" : "func encode(_ value: Float) throws",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 99,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF\">encode&lt;T&gt;(_: T) throws where T : Encodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(DataEncodingContainer) -> (Float) throws -> ()",
            "key.typeusr" : "$SyySfKcD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyySfKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func encode&lt;T&gt;(_ value: <Type usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF1TL_xmfp\">T<\/Type>) throws where T : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.bodylength" : 353,
            "key.bodyoffset" : 3383,
            "key.doc.declaration" : "mutating func encode<T>(_ value: T) throws where T : Encodable",
            "key.doc.discussion" : [
              {
                "Precondition" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>encode(_:)<\/Name><USR>s:s28SingleValueEncodingContainerP6encodeyyqd__KSERd__lF<\/USR><Declaration>mutating func encode&lt;T&gt;(_ value: T) throws where T : Encodable<\/Declaration><CommentParts><Abstract><Para>Encodes a single value of the given type.<\/Para><\/Abstract><Parameters><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The value to encode.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para><codeVoice>EncodingError.invalidValue<\/codeVoice> if the given value is invalid in the current context for this format.<\/Para><\/ThrowsDiscussion><Discussion><Precondition><Para>May not be called after a previous <codeVoice>self.encode(_:)<\/codeVoice> call.<\/Para><\/Precondition><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The value to encode."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>value<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 408,
            "key.name" : "encode(_:)",
            "key.namelength" : 21,
            "key.nameoffset" : 3334,
            "key.offset" : 3329,
            "key.overrides" : [
              {
                "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyyqd__KSERd__lF"
              }
            ],
            "key.parsed_declaration" : "func encode<T>(_ value: T) throws where T: Encodable",
            "key.parsed_scope.end" : 111,
            "key.parsed_scope.start" : 100,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySbKF\">encode(_: Bool) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySiKF\">encode(_: Int) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySdKF\">encode(_: Double) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySSKF\">encode(_: String) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys4Int8VKF\">encode(_: Int8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int16VKF\">encode(_: Int16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int32VKF\">encode(_: Int32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5Int64VKF\">encode(_: Int64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySuKF\">encode(_: UInt) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys5UInt8VKF\">encode(_: UInt8) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt16VKF\">encode(_: UInt16) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt32VKF\">encode(_: UInt32) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyys6UInt64VKF\">encode(_: UInt64) throws<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyySfKF\">encode(_: Float) throws<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/PlaintextEncoder.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 3341,
                "key.offset" : 3341,
                "key.parsed_declaration" : "func encode<T>(_ value: T) throws where T: Encodable",
                "key.parsed_scope.end" : 100,
                "key.parsed_scope.start" : 100,
                "key.typename" : "T.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC6encodeyyxKSERzlF1TL_xmfp"
              }
            ],
            "key.typename" : "<T where T : Encodable> (DataEncodingContainer) -> (T) throws -> ()",
            "key.typeusr" : "$SyyxKcSERzluD",
            "key.usr" : "s:s28SingleValueEncodingContainerP6encodeyyqd__KSERd__lF"
          }
        ],
        "key.typename" : "DataEncodingContainer.Type",
        "key.typeusr" : "$S5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLCmD",
        "key.usr" : "s:5Vapor21DataEncodingContainer33_53363B4C951E080EEDD50B5E33E9C0FDLLC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5804,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct QueryContainer<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 127
          }
        ],
        "key.bodylength" : 5645,
        "key.bodyoffset" : 157,
        "key.doc.column" : 15,
        "key.doc.comment" : "Helper for encoding and decoding data from an HTTP request query string.\n\nSee `Request.query` for more information.",
        "key.doc.declaration" : "public struct QueryContainer",
        "key.doc.discussion" : [
          {
            "Para" : "See `Request.query` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"4\" column=\"15\"><Name>QueryContainer<\/Name><USR>s:5Vapor14QueryContainerV<\/USR><Declaration>public struct QueryContainer<\/Declaration><CommentParts><Abstract><Para>Helper for encoding and decoding data from an HTTP request query string.<\/Para><\/Abstract><Discussion><Para>See <codeVoice>Request.query<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 4,
        "key.doc.name" : "QueryContainer",
        "key.doc.type" : "Class",
        "key.doclength" : 127,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>QueryContainer<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 5669,
        "key.name" : "QueryContainer",
        "key.namelength" : 14,
        "key.nameoffset" : 141,
        "key.offset" : 134,
        "key.parsed_declaration" : "public struct QueryContainer",
        "key.parsed_scope.end" : 147,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal var req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 188
              }
            ],
            "key.doc.column" : 18,
            "key.doc.comment" : "Wrapped `Request`",
            "key.doc.declaration" : "internal var req: Request",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"6\" column=\"18\"><Name>req<\/Name><USR>s:5Vapor14QueryContainerV3reqAA7RequestCvp<\/USR><Declaration>internal var req: Request<\/Declaration><CommentParts><Abstract><Para>Wrapped <codeVoice>Request<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 6,
            "key.doc.name" : "req",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 162,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>req<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "req",
            "key.namelength" : 3,
            "key.nameoffset" : 201,
            "key.offset" : 197,
            "key.parsed_declaration" : "internal var req: Request",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Request",
            "key.typeusr" : "$S5Vapor7RequestCD",
            "key.usr" : "s:5Vapor14QueryContainerV3reqAA7RequestCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal var query: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 250
              }
            ],
            "key.bodylength" : 45,
            "key.bodyoffset" : 278,
            "key.doc.column" : 18,
            "key.doc.comment" : "URL query string or \"\"",
            "key.doc.declaration" : "internal var query: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"9\" column=\"18\"><Name>query<\/Name><USR>s:5Vapor14QueryContainerV5querySSvp<\/USR><Declaration>internal var query: String { get }<\/Declaration><CommentParts><Abstract><Para>URL query string or “”<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 9,
            "key.doc.name" : "query",
            "key.doc.type" : "Other",
            "key.doclength" : 27,
            "key.docoffset" : 219,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>query<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.name" : "query",
            "key.namelength" : 5,
            "key.nameoffset" : 263,
            "key.offset" : 259,
            "key.parsed_declaration" : "internal var query: String",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 9,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor14QueryContainerV5querySSvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Content",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 333
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;E&gt;(_ encodable: <Type usr=\"s:5Vapor14QueryContainerV6encodeyyxKSERzlF1EL_xmfp\">E<\/Type>) throws where E : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 779
              }
            ],
            "key.bodylength" : 507,
            "key.bodyoffset" : 844,
            "key.doc.column" : 17,
            "key.doc.comment" : "Serializes an `Encodable` type to this HTTP request query string.\n\n    let flags: Flags ...\n    try req.query.encode(flags)\n\nA `MediaType.urlEncodedForm` encoder will be used.\n\n- parameters:\n    - encodable: `Encodable` type to encode to this HTTP message.\n- throws: Any errors making the decoder for this media type or serializing the query string.",
            "key.doc.declaration" : "public func encode<E>(_ encodable: E) throws where E : Encodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "A `MediaType.urlEncodedForm` encoder will be used."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"25\" column=\"17\"><Name>encode(_:)<\/Name><USR>s:5Vapor14QueryContainerV6encodeyyxKSERzlF<\/USR><Declaration>public func encode&lt;E&gt;(_ encodable: E) throws where E : Encodable<\/Declaration><CommentParts><Abstract><Para>Serializes an <codeVoice>Encodable<\/codeVoice> type to this HTTP request query string.<\/Para><\/Abstract><Parameters><Parameter><Name>encodable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Encodable<\/codeVoice> type to encode to this HTTP message.<\/Para><\/Discussion><\/Parameter><\/Parameters><ThrowsDiscussion><Para>Any errors making the decoder for this media type or serializing the query string.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flags: Flags ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[try req.query.encode(flags)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A <codeVoice>MediaType.urlEncodedForm<\/codeVoice> encoder will be used.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "encode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Encodable` type to encode to this HTTP message."
                  }
                ],
                "name" : "encodable"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 423,
            "key.docoffset" : 352,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor14QueryContainerV6encodeyyxKSERzlF1EL_xmfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV6encodeyyxKSERzlF1EL_xmfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 566,
            "key.name" : "encode(_:)",
            "key.namelength" : 25,
            "key.nameoffset" : 791,
            "key.offset" : 786,
            "key.parsed_declaration" : "public func encode<E>(_ encodable: E) throws where E: Encodable",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 25,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 798,
                "key.offset" : 798,
                "key.parsed_declaration" : "public func encode<E>(_ encodable: E) throws where E: Encodable",
                "key.parsed_scope.end" : 25,
                "key.parsed_scope.start" : 25,
                "key.typename" : "E.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor14QueryContainerV6encodeyyxKSERzlF1EL_xmfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 53,
                "key.name" : "data",
                "key.namelength" : 4,
                "key.nameoffset" : 1043,
                "key.offset" : 1039,
                "key.parsed_declaration" : "let data = try requireDataEncoder().encode(encodable)",
                "key.parsed_scope.end" : 29,
                "key.parsed_scope.start" : 29,
                "key.typename" : "Data",
                "key.typeusr" : "$S10Foundation4DataVD",
                "key.usr" : "s:5Vapor14QueryContainerV6encodeyyxKSERzlF4dataL_10Foundation4DataVvp"
              }
            ],
            "key.typename" : "<E where E : Encodable> (QueryContainer) -> (E) throws -> ()",
            "key.typeusr" : "$SyyxKcSERzluD",
            "key.usr" : "s:5Vapor14QueryContainerV6encodeyyxKSERzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func decode&lt;D&gt;(_ decodable: <Type usr=\"s:5Vapor14QueryContainerV6decodeyxxmKSeRzlF1DL_xmfp\">D<\/Type>.Type) throws -&gt; <Type usr=\"s:5Vapor14QueryContainerV6decodeyxxmKSeRzlF1DL_xmfp\">D<\/Type> where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1851
              }
            ],
            "key.bodylength" : 73,
            "key.bodyoffset" : 1926,
            "key.doc.column" : 17,
            "key.doc.comment" : "Parses a `Decodable` type from this HTTP request query string.\n\n    let flags = try req.query.decode(Flags.self)\n    print(flags) \/\/ Flags\n\nA `MediaType.urlEncodedForm` decoder will be used.\n\n- parameters:\n    - decodable: `Decodable` type to decode from this HTTP message.\n- returns: Instance of the `Decodable` type.\n- throws: Any errors making the decoder for this media type or parsing the query string.",
            "key.doc.declaration" : "public func decode<D>(_ decodable: D.Type) throws -> D where D : Decodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "A `MediaType.urlEncodedForm` decoder will be used."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"48\" column=\"17\"><Name>decode(_:)<\/Name><USR>s:5Vapor14QueryContainerV6decodeyxxmKSeRzlF<\/USR><Declaration>public func decode&lt;D&gt;(_ decodable: D.Type) throws -&gt; D where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Parses a <codeVoice>Decodable<\/codeVoice> type from this HTTP request query string.<\/Para><\/Abstract><Parameters><Parameter><Name>decodable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Decodable<\/codeVoice> type to decode from this HTTP message.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Instance of the <codeVoice>Decodable<\/codeVoice> type.<\/Para><\/ResultDiscussion><ThrowsDiscussion><Para>Any errors making the decoder for this media type or parsing the query string.<\/Para><\/ThrowsDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flags = try req.query.decode(Flags.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flags) \/\/ Flags]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>A <codeVoice>MediaType.urlEncodedForm<\/codeVoice> decoder will be used.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 48,
            "key.doc.name" : "decode(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Decodable` type to decode from this HTTP message."
                  }
                ],
                "name" : "decodable"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Instance of the `Decodable` type."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 489,
            "key.docoffset" : 1358,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor14QueryContainerV6decodeyxxmKSeRzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV6decodeyxxmKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV6decodeyxxmKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 142,
            "key.name" : "decode(_:)",
            "key.namelength" : 30,
            "key.nameoffset" : 1863,
            "key.offset" : 1858,
            "key.parsed_declaration" : "public func decode<D>(_ decodable: D.Type) throws -> D where D: Decodable",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 48,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 1870,
                "key.offset" : 1870,
                "key.parsed_declaration" : "public func decode<D>(_ decodable: D.Type) throws -> D where D: Decodable",
                "key.parsed_scope.end" : 48,
                "key.parsed_scope.start" : 48,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor14QueryContainerV6decodeyxxmKSeRzlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : Decodable> (QueryContainer) -> (D.Type) throws -> D",
            "key.typeusr" : "$SyxxmKcSeRzluD",
            "key.usr" : "s:5Vapor14QueryContainerV6decodeyxxmKSeRzlF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: Single Value",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2009
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript&lt;D&gt;(keyPath: <Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>...) -&gt; <Type usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/Type>? where D : <Type usr=\"s:Se\">Decodable<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2487
              }
            ],
            "key.bodylength" : 46,
            "key.bodyoffset" : 2582,
            "key.doc.column" : 12,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP request's query string.\n\nNote: This is a non-throwing subscript convenience method for `get(_:at:)`.\n\n    let name: String? = req.query[\"user\", \"name\"]\n    print(name) \/\/\/ String?\n\n- parameters:\n    - keyPath: One or more key path components to the desired value.\n- returns: Decoded `Decodable` value.",
            "key.doc.declaration" : "public subscript<D>(keyPath: BasicKeyRepresentable...) -> D? where D : Decodable { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Note: This is a non-throwing subscript convenience method for `get(_:at:)`."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"64\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:5Vapor14QueryContainerVyxSg4Core21BasicKeyRepresentable_pd_tcSeRzluip<\/USR><Declaration>public subscript&lt;D&gt;(keyPath: BasicKeyRepresentable...) -&gt; D? where D : Decodable { get }<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP request’s query string.<\/Para><\/Abstract><Parameters><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><Para>Note: This is a non-throwing subscript convenience method for <codeVoice>get(_:at:)<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name: String? = req.query[\"user\", \"name\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/\/ String?]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 64,
            "key.doc.name" : "subscript(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 450,
            "key.docoffset" : 2033,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:5Vapor14QueryContainerV1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 135,
            "key.name" : "subscript(_:)",
            "key.namelength" : 49,
            "key.nameoffset" : 2494,
            "key.offset" : 2494,
            "key.parsed_declaration" : "public subscript<D>(_ keyPath: BasicKeyRepresentable...) -> D?\n    where D: Decodable",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 64,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14QueryContainerV_2atxSgxm_4Core21BasicKeyRepresentable_pdtcSeRzluip\">subscript(_:at:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14QueryContainerV_2atxSgxm_Say4Core21BasicKeyRepresentable_pGtcSeRzluip\">subscript(_:at:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 2504,
                "key.offset" : 2504,
                "key.parsed_declaration" : "public subscript<D>(_ keyPath: BasicKeyRepresentable...) -> D?",
                "key.parsed_scope.end" : 64,
                "key.parsed_scope.start" : 64,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor14QueryContainerV1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : Decodable> (BasicKeyRepresentable...) -> D?",
            "key.typeusr" : "$SyxSg4Core21BasicKeyRepresentable_pd_tcSeRzluD",
            "key.usr" : "s:5Vapor14QueryContainerVyxSg4Core21BasicKeyRepresentable_pd_tcSeRzluip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript&lt;D&gt;(type: <Type usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/Type>.Type, at keyPath: <Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>...) -&gt; <Type usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/Type>? where D : <Type usr=\"s:Se\">Decodable<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3155
              }
            ],
            "key.bodylength" : 46,
            "key.bodyoffset" : 3267,
            "key.doc.column" : 12,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP request's query string.\n\nNote: This is a non-throwing subscript convenience method for `get(_:at:)`.\n\n    let name = req.query[String.self, at: \"user\", \"name\"]\n    print(name) \/\/\/ String?\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n- returns: Decoded `Decodable` value.",
            "key.doc.declaration" : "public subscript<D>(type: D.Type, at keyPath: BasicKeyRepresentable...) -> D? where D : Decodable { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Note: This is a non-throwing subscript convenience method for `get(_:at:)`."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"81\" column=\"12\"><Name>subscript(_:at:)<\/Name><USR>s:5Vapor14QueryContainerV_2atxSgxm_4Core21BasicKeyRepresentable_pdtcSeRzluip<\/USR><Declaration>public subscript&lt;D&gt;(type: D.Type, at keyPath: BasicKeyRepresentable...) -&gt; D? where D : Decodable { get }<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP request’s query string.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><Para>Note: This is a non-throwing subscript convenience method for <codeVoice>get(_:at:)<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = req.query[String.self, at: \"user\", \"name\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/\/ String?]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 81,
            "key.doc.name" : "subscript(_:at:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 516,
            "key.docoffset" : 2635,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:5Vapor14QueryContainerV1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 152,
            "key.name" : "subscript(_:at:)",
            "key.namelength" : 66,
            "key.nameoffset" : 3162,
            "key.offset" : 3162,
            "key.parsed_declaration" : "public subscript<D>(_ type: D.Type, at keyPath: BasicKeyRepresentable...) -> D?\n    where D: Decodable",
            "key.parsed_scope.end" : 85,
            "key.parsed_scope.start" : 81,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14QueryContainerVyxSg4Core21BasicKeyRepresentable_pd_tcSeRzluip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14QueryContainerV_2atxSgxm_Say4Core21BasicKeyRepresentable_pGtcSeRzluip\">subscript(_:at:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 3172,
                "key.offset" : 3172,
                "key.parsed_declaration" : "public subscript<D>(_ type: D.Type, at keyPath: BasicKeyRepresentable...) -> D?",
                "key.parsed_scope.end" : 81,
                "key.parsed_scope.start" : 81,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor14QueryContainerV1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : Decodable> (D.Type, at: BasicKeyRepresentable...) -> D?",
            "key.typeusr" : "$S_2atxSgxm_4Core21BasicKeyRepresentable_pdtcSeRzluD",
            "key.usr" : "s:5Vapor14QueryContainerV_2atxSgxm_4Core21BasicKeyRepresentable_pdtcSeRzluip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript&lt;D&gt;(type: <Type usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/Type>.Type, at keyPath: [<Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>]) -&gt; <Type usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/Type>? where D : <Type usr=\"s:Se\">Decodable<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3874
              }
            ],
            "key.bodylength" : 42,
            "key.bodyoffset" : 3985,
            "key.doc.column" : 12,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP request's query string.\n\nNote: This is a non-throwing subscript convenience method for `get(_:at:)`. This is the non-variadic version.\n\n    let name = req.query[String.self, at: \"user\", \"name\"]\n    print(name) \/\/\/ String?\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n- returns: Decoded `Decodable` value.",
            "key.doc.declaration" : "public subscript<D>(type: D.Type, at keyPath: [BasicKeyRepresentable]) -> D? where D : Decodable { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Note: This is a non-throwing subscript convenience method for `get(_:at:)`. This is the non-variadic version."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"98\" column=\"12\"><Name>subscript(_:at:)<\/Name><USR>s:5Vapor14QueryContainerV_2atxSgxm_Say4Core21BasicKeyRepresentable_pGtcSeRzluip<\/USR><Declaration>public subscript&lt;D&gt;(type: D.Type, at keyPath: [BasicKeyRepresentable]) -&gt; D? where D : Decodable { get }<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP request’s query string.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><Para>Note: This is a non-throwing subscript convenience method for <codeVoice>get(_:at:)<\/codeVoice>. This is the non-variadic version.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = req.query[String.self, at: \"user\", \"name\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/\/ String?]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 98,
            "key.doc.name" : "subscript(_:at:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 550,
            "key.docoffset" : 3320,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:5Vapor14QueryContainerV1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV1DL_xmfp\">D<\/ref.generic_type_param>?<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 147,
            "key.name" : "subscript(_:at:)",
            "key.namelength" : 65,
            "key.nameoffset" : 3881,
            "key.offset" : 3881,
            "key.parsed_declaration" : "public subscript<D>(_ type: D.Type, at keyPath: [BasicKeyRepresentable]) -> D?\n    where D: Decodable",
            "key.parsed_scope.end" : 102,
            "key.parsed_scope.start" : 98,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14QueryContainerVyxSg4Core21BasicKeyRepresentable_pd_tcSeRzluip\">subscript(_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14QueryContainerV_2atxSgxm_4Core21BasicKeyRepresentable_pdtcSeRzluip\">subscript(_:at:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 3891,
                "key.offset" : 3891,
                "key.parsed_declaration" : "public subscript<D>(_ type: D.Type, at keyPath: [BasicKeyRepresentable]) -> D?",
                "key.parsed_scope.end" : 98,
                "key.parsed_scope.start" : 98,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor14QueryContainerV1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : Decodable> (D.Type, at: [BasicKeyRepresentable]) -> D?",
            "key.typeusr" : "$S_2atxSgxm_Say4Core21BasicKeyRepresentable_pGtcSeRzluD",
            "key.usr" : "s:5Vapor14QueryContainerV_2atxSgxm_Say4Core21BasicKeyRepresentable_pGtcSeRzluip"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func get&lt;D&gt;(_ type: <Type usr=\"s:5Vapor14QueryContainerV3get_2atxxm_4Core21BasicKeyRepresentable_pdtKSeRzlF1DL_xmfp\">D<\/Type>.Type = default, at keyPath: <Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>...) throws -&gt; <Type usr=\"s:5Vapor14QueryContainerV3get_2atxxm_4Core21BasicKeyRepresentable_pdtKSeRzlF1DL_xmfp\">D<\/Type> where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4469
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 4595,
            "key.doc.column" : 17,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP request's query string.\n\n    let name = try req.query.get(String.self, at: \"user\", \"name\")\n    print(name) \/\/\/ String\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n- returns: Decoded `Decodable` value.",
            "key.doc.declaration" : "public func get<D>(_ type: D.Type = default, at keyPath: BasicKeyRepresentable...) throws -> D where D : Decodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"113\" column=\"17\"><Name>get(_:at:)<\/Name><USR>s:5Vapor14QueryContainerV3get_2atxxm_4Core21BasicKeyRepresentable_pdtKSeRzlF<\/USR><Declaration>public func get&lt;D&gt;(_ type: D.Type = default, at keyPath: BasicKeyRepresentable...) throws -&gt; D where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP request’s query string.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = try req.query.get(String.self, at: \"user\", \"name\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/\/ String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 113,
            "key.doc.name" : "get(_:at:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 431,
            "key.docoffset" : 4034,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor14QueryContainerV3get_2atxxm_4Core21BasicKeyRepresentable_pdtKSeRzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV3get_2atxxm_4Core21BasicKeyRepresentable_pdtKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV3get_2atxxm_4Core21BasicKeyRepresentable_pdtKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 161,
            "key.name" : "get(_:at:)",
            "key.namelength" : 69,
            "key.nameoffset" : 4481,
            "key.offset" : 4476,
            "key.parsed_declaration" : "public func get<D>(_ type: D.Type = D.self, at keyPath: BasicKeyRepresentable...) throws -> D\n    where D: Decodable",
            "key.parsed_scope.end" : 117,
            "key.parsed_scope.start" : 113,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14QueryContainerV3get_2atxxm_Say4Core21BasicKeyRepresentable_pGtKSeRzlF\">get&lt;D&gt;(_: D.Type = default, at: [BasicKeyRepresentable]) throws -&gt; D where D : Decodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 4485,
                "key.offset" : 4485,
                "key.parsed_declaration" : "public func get<D>(_ type: D.Type = D.self, at keyPath: BasicKeyRepresentable...) throws -> D",
                "key.parsed_scope.end" : 113,
                "key.parsed_scope.start" : 113,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor14QueryContainerV3get_2atxxm_4Core21BasicKeyRepresentable_pdtKSeRzlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : Decodable> (QueryContainer) -> (D.Type, BasicKeyRepresentable...) throws -> D",
            "key.typeusr" : "$S_2atxxm_4Core21BasicKeyRepresentable_pdtKcSeRzluD",
            "key.usr" : "s:5Vapor14QueryContainerV3get_2atxxm_4Core21BasicKeyRepresentable_pdtKSeRzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func get&lt;D&gt;(_ type: <Type usr=\"s:5Vapor14QueryContainerV3get_2atxxm_Say4Core21BasicKeyRepresentable_pGtKSeRzlF1DL_xmfp\">D<\/Type>.Type = default, at keyPath: [<Type usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/Type>]) throws -&gt; <Type usr=\"s:5Vapor14QueryContainerV3get_2atxxm_Say4Core21BasicKeyRepresentable_pGtKSeRzlF1DL_xmfp\">D<\/Type> where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5134
              }
            ],
            "key.bodylength" : 102,
            "key.bodyoffset" : 5259,
            "key.doc.column" : 17,
            "key.doc.comment" : "Fetches a single `Decodable` value at the supplied key-path from this HTTP request's query string.\n\nNote: This is the non-variadic version.\n\n    let name = try req.query.get(String.self, at: \"user\", \"name\")\n    print(name) \/\/\/ String\n\n- parameters:\n    - type: The `Decodable` value type to decode.\n    - keyPath: One or more key path components to the desired value.\n- returns: Decoded `Decodable` value.",
            "key.doc.declaration" : "public func get<D>(_ type: D.Type = default, at keyPath: [BasicKeyRepresentable]) throws -> D where D : Decodable",
            "key.doc.discussion" : [
              {
                "Para" : "Note: This is the non-variadic version."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"130\" column=\"17\"><Name>get(_:at:)<\/Name><USR>s:5Vapor14QueryContainerV3get_2atxxm_Say4Core21BasicKeyRepresentable_pGtKSeRzlF<\/USR><Declaration>public func get&lt;D&gt;(_ type: D.Type = default, at keyPath: [BasicKeyRepresentable]) throws -&gt; D where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Fetches a single <codeVoice>Decodable<\/codeVoice> value at the supplied key-path from this HTTP request’s query string.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Decodable<\/codeVoice> value type to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>keyPath<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>One or more key path components to the desired value.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Decoded <codeVoice>Decodable<\/codeVoice> value.<\/Para><\/ResultDiscussion><Discussion><Para>Note: This is the non-variadic version.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = try req.query.get(String.self, at: \"user\", \"name\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/\/ String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 130,
            "key.doc.name" : "get(_:at:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Decodable` value type to decode."
                  }
                ],
                "name" : "type"
              },
              {
                "discussion" : [
                  {
                    "Para" : "One or more key path components to the desired value."
                  }
                ],
                "name" : "keyPath"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Decoded `Decodable` value."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 487,
            "key.docoffset" : 4643,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor14QueryContainerV3get_2atxxm_Say4Core21BasicKeyRepresentable_pGtKSeRzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV3get_2atxxm_Say4Core21BasicKeyRepresentable_pGtKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:4Core21BasicKeyRepresentableP\">BasicKeyRepresentable<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor14QueryContainerV3get_2atxxm_Say4Core21BasicKeyRepresentable_pGtKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 221,
            "key.name" : "get(_:at:)",
            "key.namelength" : 68,
            "key.nameoffset" : 5146,
            "key.offset" : 5141,
            "key.parsed_declaration" : "public func get<D>(_ type: D.Type = D.self, at keyPath: [BasicKeyRepresentable]) throws -> D\n    where D: Decodable",
            "key.parsed_scope.end" : 134,
            "key.parsed_scope.start" : 130,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14QueryContainerV3get_2atxxm_4Core21BasicKeyRepresentable_pdtKSeRzlF\">get&lt;D&gt;(_: D.Type = default, at: BasicKeyRepresentable...) throws -&gt; D where D : Decodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 5150,
                "key.offset" : 5150,
                "key.parsed_declaration" : "public func get<D>(_ type: D.Type = D.self, at keyPath: [BasicKeyRepresentable]) throws -> D",
                "key.parsed_scope.end" : 130,
                "key.parsed_scope.start" : 130,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor14QueryContainerV3get_2atxxm_Say4Core21BasicKeyRepresentable_pGtKSeRzlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : Decodable> (QueryContainer) -> (D.Type, [BasicKeyRepresentable]) throws -> D",
            "key.typeusr" : "$S_2atxxm_Say4Core21BasicKeyRepresentable_pGtKcSeRzluD",
            "key.usr" : "s:5Vapor14QueryContainerV3get_2atxxm_Say4Core21BasicKeyRepresentable_pGtKSeRzlF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Private",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 5371
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func requireDataDecoder() throws -&gt; <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 5440
              }
            ],
            "key.bodylength" : 94,
            "key.bodyoffset" : 5497,
            "key.doc.column" : 18,
            "key.doc.comment" : "Gets the`DataDecoder` or throws an error.",
            "key.doc.declaration" : "private func requireDataDecoder() throws -> DataDecoder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"139\" column=\"18\"><Name>requireDataDecoder()<\/Name><USR>s:5Vapor14QueryContainerV18requireDataDecoder33_3FA1CB4B7F4AB9E2B37D0D9BFFE8741FLL4Core0eF0_pyKF<\/USR><Declaration>private func requireDataDecoder() throws -&gt; DataDecoder<\/Declaration><CommentParts><Abstract><Para>Gets the<codeVoice>DataDecoder<\/codeVoice> or throws an error.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 139,
            "key.doc.name" : "requireDataDecoder()",
            "key.doc.type" : "Function",
            "key.doclength" : 46,
            "key.docoffset" : 5390,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireDataDecoder<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 144,
            "key.name" : "requireDataDecoder()",
            "key.namelength" : 20,
            "key.nameoffset" : 5453,
            "key.offset" : 5448,
            "key.parsed_declaration" : "private func requireDataDecoder() throws -> DataDecoder",
            "key.parsed_scope.end" : 141,
            "key.parsed_scope.start" : 139,
            "key.substructure" : [

            ],
            "key.typename" : "(QueryContainer) -> () throws -> DataDecoder",
            "key.typeusr" : "$S4Core11DataDecoder_pyKcD",
            "key.usr" : "s:5Vapor14QueryContainerV18requireDataDecoder33_3FA1CB4B7F4AB9E2B37D0D9BFFE8741FLL4Core0eF0_pyKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func requireDataEncoder() throws -&gt; <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 5649
              }
            ],
            "key.bodylength" : 94,
            "key.bodyoffset" : 5706,
            "key.doc.column" : 18,
            "key.doc.comment" : "Gets the `DataEncoder` or throws an error.",
            "key.doc.declaration" : "private func requireDataEncoder() throws -> DataEncoder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift\" line=\"144\" column=\"18\"><Name>requireDataEncoder()<\/Name><USR>s:5Vapor14QueryContainerV18requireDataEncoder33_3FA1CB4B7F4AB9E2B37D0D9BFFE8741FLL4Core0eF0_pyKF<\/USR><Declaration>private func requireDataEncoder() throws -&gt; DataEncoder<\/Declaration><CommentParts><Abstract><Para>Gets the <codeVoice>DataEncoder<\/codeVoice> or throws an error.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 144,
            "key.doc.name" : "requireDataEncoder()",
            "key.doc.type" : "Function",
            "key.doclength" : 47,
            "key.docoffset" : 5598,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/QueryContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>requireDataEncoder<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 144,
            "key.name" : "requireDataEncoder()",
            "key.namelength" : 20,
            "key.nameoffset" : 5662,
            "key.offset" : 5657,
            "key.parsed_declaration" : "private func requireDataEncoder() throws -> DataEncoder",
            "key.parsed_scope.end" : 146,
            "key.parsed_scope.start" : 144,
            "key.substructure" : [

            ],
            "key.typename" : "(QueryContainer) -> () throws -> DataEncoder",
            "key.typeusr" : "$S4Core11DataEncoder_pyKcD",
            "key.usr" : "s:5Vapor14QueryContainerV18requireDataEncoder33_3FA1CB4B7F4AB9E2B37D0D9BFFE8741FLL4Core0eF0_pyKF"
          }
        ],
        "key.typename" : "QueryContainer.Type",
        "key.typeusr" : "$S5Vapor14QueryContainerVmD",
        "key.usr" : "s:5Vapor14QueryContainerV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3254,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>protocol DataDecoder<\/Declaration>",
        "key.bodylength" : 269,
        "key.bodyoffset" : 23,
        "key.doc.declaration" : "protocol DataDecoder",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>DataDecoder<\/Name><USR>s:4Core11DataDecoderP<\/USR><Declaration>protocol DataDecoder<\/Declaration><CommentParts><Abstract><Para>A type capable of decoding <codeVoice>Decodable<\/codeVoice> types from <codeVoice>Data<\/codeVoice>.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(data) \/\/\/ Data]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let user = try JSONDecoder().decode(User.self, from: data)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(user) \/\/\/ User]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "DataDecoder",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>DataDecoder<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 293,
        "key.modulename" : "Core",
        "key.name" : "DataDecoder",
        "key.namelength" : 11,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal func get&lt;D&gt;(at keyPath: [<Type usr=\"s:4Core8BasicKeyV\">BasicKey<\/Type>], from data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>) throws -&gt; <Type usr=\"s:4Core11DataDecoderP5VaporE3get2at4fromqd__SayAA8BasicKeyVG_10Foundation0B0VtKSeRd__lF1DL_qd__mfp\">D<\/Type> where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 106
              }
            ],
            "key.bodylength" : 90,
            "key.bodyoffset" : 200,
            "key.doc.column" : 19,
            "key.doc.comment" : "Gets a single decodable value at the supplied key path from the data.",
            "key.doc.declaration" : "internal func get<D>(at keyPath: [BasicKey], from data: Data) throws -> D where D : Decodable",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift\" line=\"3\" column=\"19\"><Name>get(at:from:)<\/Name><USR>s:4Core11DataDecoderP5VaporE3get2at4fromqd__SayAA8BasicKeyVG_10Foundation0B0VtKSeRd__lF<\/USR><Declaration>internal func get&lt;D&gt;(at keyPath: [BasicKey], from data: Data) throws -&gt; D where D : Decodable<\/Declaration><CommentParts><Abstract><Para>Gets a single decodable value at the supplied key path from the data.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 3,
            "key.doc.name" : "get(at:from:)",
            "key.doc.type" : "Function",
            "key.doclength" : 74,
            "key.docoffset" : 28,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>&lt;<decl.generic_type_param usr=\"s:4Core11DataDecoderP5VaporE3get2at4fromqd__SayAA8BasicKeyVG_10Foundation0B0VtKSeRd__lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:4Core8BasicKeyV\">BasicKey<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>data<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:4Core11DataDecoderP5VaporE3get2at4fromqd__SayAA8BasicKeyVG_10Foundation0B0VtKSeRd__lF1DL_qd__mfp\">D<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 176,
            "key.name" : "get(at:from:)",
            "key.namelength" : 47,
            "key.nameoffset" : 120,
            "key.offset" : 115,
            "key.parsed_declaration" : "internal func get<D>(at keyPath: [BasicKey], from data: Data) throws -> D where D: Decodable",
            "key.parsed_scope.end" : 5,
            "key.parsed_scope.start" : 3,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 124,
                "key.offset" : 124,
                "key.parsed_declaration" : "internal func get<D>(at keyPath: [BasicKey], from data: Data) throws -> D where D: Decodable",
                "key.parsed_scope.end" : 3,
                "key.parsed_scope.start" : 3,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:4Core11DataDecoderP5VaporE3get2at4fromqd__SayAA8BasicKeyVG_10Foundation0B0VtKSeRd__lF1DL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, D where Self : DataDecoder, D : Decodable> (Self) -> ([BasicKey], Data) throws -> D",
            "key.typeusr" : "$S2at4fromqd__Say4Core8BasicKeyVG_10Foundation4DataVtKcSeRd__luD",
            "key.usr" : "s:4Core11DataDecoderP5VaporE3get2at4fromqd__SayAA8BasicKeyVG_10Foundation0B0VtKSeRd__lF"
          }
        ],
        "key.typename" : "DataDecoder.Protocol",
        "key.typeusr" : "$S4Core11DataDecoder_pmD",
        "key.usr" : "s:4Core11DataDecoderP"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol HTTPMessageDecoder<\/Declaration>",
        "key.bodylength" : 432,
        "key.bodyoffset" : 325,
        "key.doc.declaration" : "protocol HTTPMessageDecoder",
        "key.doc.discussion" : [
          {
            "Para" : "`HTTPMessageDecoder`s must handle all cases of an `HTTPBody`, including streaming bodies. Because the `HTTPBody` may be streaming (async), the `decode(_:from:on:)` method returns a `Future`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `HTTPMessageDecoder` protocol is what powers the `ContentContainer`s on `Request` and `Response`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`HTTPMessageDecoder`s can be registered with `ContentConfig` during the application config phase. The decoders are associated with a `MediaType` when registered. When decoding content, the HTTP message’s `MediaType` is used to lookup an appropriate coder."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>HTTPMessageDecoder<\/Name><USR>s:4HTTP18HTTPMessageDecoderP<\/USR><Declaration>protocol HTTPMessageDecoder<\/Declaration><CommentParts><Abstract><Para>Capable of decoding a <codeVoice>Decodable<\/codeVoice> type from an <codeVoice>HTTPBody<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para><codeVoice>HTTPMessageDecoder<\/codeVoice>s must handle all cases of an <codeVoice>HTTPBody<\/codeVoice>, including streaming bodies. Because the <codeVoice>HTTPBody<\/codeVoice> may be streaming (async), the <codeVoice>decode(_:from:on:)<\/codeVoice> method returns a <codeVoice>Future<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let jsonDecoder: BodyDecoder = JSONDecoder()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let string = try jsonDecoder.decode(String.self, from: HTTPBody(string: \"hello\"), on: ...).wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(string) \/\/\/ \"hello\" from the HTTP body]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>HTTPMessageDecoder<\/codeVoice> protocol is what powers the <codeVoice>ContentContainer<\/codeVoice>s on <codeVoice>Request<\/codeVoice> and <codeVoice>Response<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let string = try req.content.decode(String.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(string) \/\/ Future<String>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>HTTPMessageDecoder<\/codeVoice>s can be registered with <codeVoice>ContentConfig<\/codeVoice> during the application config phase. The decoders are associated with a <codeVoice>MediaType<\/codeVoice> when registered. When decoding content, the HTTP message’s <codeVoice>MediaType<\/codeVoice> is used to lookup an appropriate coder.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var contentConfig = ContentConfig.default()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[contentConfig.use(decoder: JSONDecoder(), for: .json)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(contentConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "HTTPMessageDecoder",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>HTTPMessageDecoder<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 463,
        "key.modulename" : "HTTP",
        "key.name" : "HTTPMessageDecoder",
        "key.namelength" : 18,
        "key.nameoffset" : 305,
        "key.offset" : 295,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal func get&lt;D, M&gt;(at keyPath: [<Type usr=\"s:4Core8BasicKeyV\">BasicKey<\/Type>], from message: <Type usr=\"s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF1ML_qd_0_mfp\">M<\/Type>, maxSize: <Type usr=\"s:Si\">Int<\/Type>, on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF1DL_qd__mfp\">D<\/Type>&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type>, M : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 408
              }
            ],
            "key.bodylength" : 181,
            "key.bodyoffset" : 574,
            "key.doc.column" : 19,
            "key.doc.comment" : "Gets a single decodable value at the supplied key path from the data.",
            "key.doc.declaration" : "internal func get<D, M>(at keyPath: [BasicKey], from message: M, maxSize: Int, on worker: Worker) throws -> Future<D> where D : Decodable, M : HTTPMessage",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift\" line=\"10\" column=\"19\"><Name>get(at:from:maxSize:on:)<\/Name><USR>s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF<\/USR><Declaration>internal func get&lt;D, M&gt;(at keyPath: [BasicKey], from message: M, maxSize: Int, on worker: Worker) throws -&gt; Future&lt;D&gt; where D : Decodable, M : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>Gets a single decodable value at the supplied key path from the data.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 10,
            "key.doc.name" : "get(at:from:maxSize:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 74,
            "key.docoffset" : 330,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>&lt;<decl.generic_type_param usr=\"s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF1DL_qd__mfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF1ML_qd_0_mfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:4Core8BasicKeyV\">BasicKey<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>message<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF1ML_qd_0_mfp\">M<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF1DL_qd__mfp\">D<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>M : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 339,
            "key.name" : "get(at:from:maxSize:on:)",
            "key.namelength" : 83,
            "key.nameoffset" : 422,
            "key.offset" : 417,
            "key.parsed_declaration" : "internal func get<D, M>(at keyPath: [BasicKey], from message: M, maxSize: Int, on worker: Worker) throws -> Future<D>\n    where D: Decodable, M: HTTPMessage",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 10,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 426,
                "key.offset" : 426,
                "key.parsed_declaration" : "internal func get<D, M>(at keyPath: [BasicKey], from message: M, maxSize: Int, on worker: Worker) throws -> Future<D>",
                "key.parsed_scope.end" : 10,
                "key.parsed_scope.start" : 10,
                "key.typename" : "D.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF1DL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 429,
                "key.offset" : 429,
                "key.parsed_declaration" : "internal func get<D, M>(at keyPath: [BasicKey], from message: M, maxSize: Int, on worker: Worker) throws -> Future<D>",
                "key.parsed_scope.end" : 10,
                "key.parsed_scope.start" : 10,
                "key.typename" : "M.Type",
                "key.typeusr" : "$Sqd_0_mD",
                "key.usr" : "s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF1ML_qd_0_mfp"
              }
            ],
            "key.typename" : "<Self, D, M where Self : HTTPMessageDecoder, D : Decodable, M : HTTPMessage> (Self) -> ([BasicKey], M, Int, EventLoopGroup) throws -> EventLoopFuture<D>",
            "key.typeusr" : "$S2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAE0gH5Group_ptKcSeRd__4HTTP11HTTPMessageRd_0_r0_luD",
            "key.usr" : "s:4HTTP18HTTPMessageDecoderP5VaporE3get2at4from7maxSize2on3NIO15EventLoopFutureCyqd__GSay4Core8BasicKeyVG_qd_0_SiAJ0lM5Group_ptKSeRd__AA0B0Rd_0_r0_lF"
          }
        ],
        "key.typename" : "HTTPMessageDecoder.Protocol",
        "key.typeusr" : "$S4HTTP18HTTPMessageDecoder_pmD",
        "key.usr" : "s:4HTTP18HTTPMessageDecoderP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private struct SingleValueDecoder : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 838
          }
        ],
        "key.bodylength" : 1995,
        "key.bodyoffset" : 884,
        "key.doc.column" : 16,
        "key.doc.comment" : "MARK: Private\nDecodes nested, single values from data at a key path.",
        "key.doc.declaration" : "private struct SingleValueDecoder : Decodable",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift\" line=\"22\" column=\"16\"><Name>SingleValueDecoder<\/Name><USR>s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV<\/USR><Declaration>private struct SingleValueDecoder : Decodable<\/Declaration><CommentParts><Abstract><Para>MARK: Private Decodes nested, single values from data at a key path.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 22,
        "key.doc.name" : "SingleValueDecoder",
        "key.doc.type" : "Class",
        "key.doclength" : 78,
        "key.docoffset" : 760,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 873
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SingleValueDecoder<\/decl.name> : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Decodable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 2034,
        "key.name" : "SingleValueDecoder",
        "key.namelength" : 18,
        "key.nameoffset" : 853,
        "key.offset" : 846,
        "key.parsed_declaration" : "private struct SingleValueDecoder: Decodable",
        "key.parsed_scope.end" : 71,
        "key.parsed_scope.start" : 22,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let decoder: <Type usr=\"s:s7DecoderP\">Decoder<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>decoder<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:s7DecoderP\">Decoder<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "decoder",
            "key.namelength" : 7,
            "key.nameoffset" : 893,
            "key.offset" : 889,
            "key.parsed_declaration" : "let decoder: Decoder",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.typename" : "Decoder",
            "key.typeusr" : "$Ss7Decoder_pD",
            "key.usr" : "s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV7decoders0D0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(from decoder: <Type usr=\"s:s7DecoderP\">Decoder<\/Type>) throws<\/Declaration>",
            "key.bodylength" : 36,
            "key.bodyoffset" : 950,
            "key.doc.declaration" : "init(from decoder: Decoder) throws",
            "key.doc.discussion" : [
              {
                "Para" : "This initializer throws an error if reading from the decoder fails, or if the data read is corrupted or otherwise invalid."
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>init(from:)<\/Name><USR>s:Se4fromxs7Decoder_p_tKcfc<\/USR><Declaration>init(from decoder: Decoder) throws<\/Declaration><CommentParts><Abstract><Para>Creates a new instance by decoding from the given decoder.<\/Para><\/Abstract><Parameters><Parameter><Name>decoder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The decoder to read data from.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This initializer throws an error if reading from the decoder fails, or if the data read is corrupted or otherwise invalid.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "init(from:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The decoder to read data from."
                  }
                ],
                "name" : "decoder"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7DecoderP\">Decoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 73,
            "key.name" : "init(from:)",
            "key.namelength" : 27,
            "key.nameoffset" : 914,
            "key.offset" : 914,
            "key.overrides" : [
              {
                "key.usr" : "s:Se4fromxs7Decoder_p_tKcfc"
              }
            ],
            "key.parsed_declaration" : "init(from decoder: Decoder) throws",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 24,
            "key.substructure" : [

            ],
            "key.typename" : "(SingleValueDecoder.Type) -> (Decoder) throws -> SingleValueDecoder",
            "key.typeusr" : "$S4from5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLVs0E0_p_tKcD",
            "key.usr" : "s:Se4fromxs7Decoder_p_tKcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func get&lt;D&gt;(at keyPath: [<Type usr=\"s:4Core8BasicKeyV\">BasicKey<\/Type>]) throws -&gt; <Type usr=\"s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV3get2atxSay4Core8BasicKeyVG_tKSeRzlF1DL_xmfp\">D<\/Type> where D : <Type usr=\"s:Se\">Decodable<\/Type><\/Declaration>",
            "key.bodylength" : 1816,
            "key.bodyoffset" : 1061,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV3get2atxSay4Core8BasicKeyVG_tKSeRzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>keyPath<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:4Core8BasicKeyV\">BasicKey<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV3get2atxSay4Core8BasicKeyVG_tKSeRzlF1DL_xmfp\">D<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1885,
            "key.name" : "get(at:)",
            "key.namelength" : 30,
            "key.nameoffset" : 998,
            "key.offset" : 993,
            "key.parsed_declaration" : "func get<D>(at keyPath: [BasicKey]) throws -> D where D: Decodable",
            "key.parsed_scope.end" : 70,
            "key.parsed_scope.start" : 28,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 1002,
                "key.offset" : 1002,
                "key.parsed_declaration" : "func get<D>(at keyPath: [BasicKey]) throws -> D where D: Decodable",
                "key.parsed_scope.end" : 28,
                "key.parsed_scope.start" : 28,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV3get2atxSay4Core8BasicKeyVG_tKSeRzlF1DL_xmfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let unwrapper: <Type usr=\"s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV\">SingleValueDecoder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>unwrapper<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV\">SingleValueDecoder<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 20,
                "key.name" : "unwrapper",
                "key.namelength" : 9,
                "key.nameoffset" : 1074,
                "key.offset" : 1070,
                "key.parsed_declaration" : "let unwrapper = self",
                "key.parsed_scope.end" : 29,
                "key.parsed_scope.start" : 29,
                "key.typename" : "SingleValueDecoder",
                "key.typeusr" : "$S5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLVD",
                "key.usr" : "s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV3get2atxSay4Core8BasicKeyVG_tKSeRzlF9unwrapperL_ADvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var state: <Type usr=\"s:5Vapor14ContainerState33_BCB7B3DE027437510A515B6F7D9B03B9LLO\">ContainerState<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>state<\/decl.name>: <decl.var.type><ref.enum usr=\"s:5Vapor14ContainerState33_BCB7B3DE027437510A515B6F7D9B03B9LLO\">ContainerState<\/ref.enum><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 89,
                "key.name" : "state",
                "key.namelength" : 5,
                "key.nameoffset" : 1103,
                "key.offset" : 1099,
                "key.parsed_declaration" : "var state = try ContainerState.keyed(unwrapper.decoder.container(keyedBy: BasicKey.self))",
                "key.parsed_scope.end" : 30,
                "key.parsed_scope.start" : 30,
                "key.typename" : "ContainerState",
                "key.typeusr" : "$S5Vapor14ContainerState33_BCB7B3DE027437510A515B6F7D9B03B9LLOD",
                "key.usr" : "s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV3get2atxSay4Core8BasicKeyVG_tKSeRzlF5stateL_AA14ContainerStateACLLOvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var keys: [<Type usr=\"s:4Core8BasicKeyV\">BasicKey<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>keys<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:4Core8BasicKeyV\">BasicKey<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 36,
                "key.name" : "keys",
                "key.namelength" : 4,
                "key.nameoffset" : 1202,
                "key.offset" : 1198,
                "key.parsed_declaration" : "var keys = Array(keyPath.reversed())",
                "key.parsed_scope.end" : 32,
                "key.parsed_scope.start" : 32,
                "key.typename" : "[BasicKey]",
                "key.typeusr" : "$SSay4Core8BasicKeyVGD",
                "key.usr" : "s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV3get2atxSay4Core8BasicKeyVG_tKSeRzlF4keysL_AJvp"
              }
            ],
            "key.typename" : "<D where D : Decodable> (SingleValueDecoder) -> ([BasicKey]) throws -> D",
            "key.typeusr" : "$S2atxSay4Core8BasicKeyVG_tKcSeRzluD",
            "key.usr" : "s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV3get2atxSay4Core8BasicKeyVG_tKSeRzlF"
          }
        ],
        "key.typename" : "SingleValueDecoder.Type",
        "key.typeusr" : "$S5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLVmD",
        "key.usr" : "s:5Vapor18SingleValueDecoder33_BCB7B3DE027437510A515B6F7D9B03B9LLV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private enum ContainerState<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 2882
          }
        ],
        "key.bodylength" : 93,
        "key.bodyoffset" : 2911,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>ContainerState<\/decl.name><\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 115,
        "key.name" : "ContainerState",
        "key.namelength" : 14,
        "key.nameoffset" : 2895,
        "key.offset" : 2890,
        "key.parsed_declaration" : "private enum ContainerState",
        "key.parsed_scope.end" : 76,
        "key.parsed_scope.start" : 73,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 44,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2916,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>case keyed(<Type usr=\"s:s22KeyedDecodingContainerV\">KeyedDecodingContainer<\/Type>&lt;<Type usr=\"s:4Core8BasicKeyV\">BasicKey<\/Type>&gt;)<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>keyed<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:s22KeyedDecodingContainerV\">KeyedDecodingContainer<\/ref.struct>&lt;<ref.struct usr=\"s:4Core8BasicKeyV\">BasicKey<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 39,
                "key.name" : "keyed(_:)",
                "key.namelength" : 39,
                "key.nameoffset" : 2921,
                "key.offset" : 2921,
                "key.parsed_declaration" : "case keyed(KeyedDecodingContainer<BasicKey>)",
                "key.parsed_scope.end" : 74,
                "key.parsed_scope.start" : 74,
                "key.typename" : "(ContainerState.Type) -> (KeyedDecodingContainer<BasicKey>) -> ContainerState",
                "key.typeusr" : "$Sy5Vapor14ContainerState33_BCB7B3DE027437510A515B6F7D9B03B9LLOs013KeyedDecodingB0Vy4Core8BasicKeyVGcADmcD",
                "key.usr" : "s:5Vapor14ContainerState33_BCB7B3DE027437510A515B6F7D9B03B9LLO5keyedyADs013KeyedDecodingB0Vy4Core8BasicKeyVGcADmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 38,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2965,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>case unkeyed(<Type usr=\"s:s24UnkeyedDecodingContainerP\">UnkeyedDecodingContainer<\/Type>)<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>unkeyed<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s24UnkeyedDecodingContainerP\">UnkeyedDecodingContainer<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 33,
                "key.name" : "unkeyed(_:)",
                "key.namelength" : 33,
                "key.nameoffset" : 2970,
                "key.offset" : 2970,
                "key.parsed_declaration" : "case unkeyed(UnkeyedDecodingContainer)",
                "key.parsed_scope.end" : 75,
                "key.parsed_scope.start" : 75,
                "key.typename" : "(ContainerState.Type) -> (UnkeyedDecodingContainer) -> ContainerState",
                "key.typeusr" : "$Sy5Vapor14ContainerState33_BCB7B3DE027437510A515B6F7D9B03B9LLOs015UnkeyedDecodingB0_pcADmcD",
                "key.usr" : "s:5Vapor14ContainerState33_BCB7B3DE027437510A515B6F7D9B03B9LLO7unkeyedyADs015UnkeyedDecodingB0_pcADmF"
              }
            ]
          }
        ],
        "key.typename" : "ContainerState.Type",
        "key.typeusr" : "$S5Vapor14ContainerState33_BCB7B3DE027437510A515B6F7D9B03B9LLOmD",
        "key.usr" : "s:5Vapor14ContainerState33_BCB7B3DE027437510A515B6F7D9B03B9LLO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>protocol UnkeyedDecodingContainer<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 3007
          }
        ],
        "key.bodylength" : 201,
        "key.bodyoffset" : 3051,
        "key.doc.declaration" : "protocol UnkeyedDecodingContainer",
        "key.doc.discussion" : [
          {
            "Para" : "Decoders should provide types conforming to `UnkeyedDecodingContainer` for their format."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>UnkeyedDecodingContainer<\/Name><USR>s:s24UnkeyedDecodingContainerP<\/USR><Declaration>protocol UnkeyedDecodingContainer<\/Declaration><CommentParts><Abstract><Para>A type that provides a view into a decoder’s storage and is used to hold the encoded properties of a decodable type sequentially, without keys.<\/Para><\/Abstract><Discussion><Para>Decoders should provide types conforming to <codeVoice>UnkeyedDecodingContainer<\/codeVoice> for their format.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "UnkeyedDecodingContainer",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>UnkeyedDecodingContainer<\/decl.name><\/decl.protocol>",
        "key.groupname" : "Misc",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 238,
        "key.modulename" : "Swift",
        "key.name" : "UnkeyedDecodingContainer",
        "key.namelength" : 24,
        "key.nameoffset" : 3025,
        "key.offset" : 3015,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>mutating func skip(to count: <Type usr=\"s:Si\">Int<\/Type>) throws -&gt; <Type usr=\"s:s24UnkeyedDecodingContainerP\">UnkeyedDecodingContainer<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 3056
              }
            ],
            "key.bodylength" : 124,
            "key.bodyoffset" : 3126,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/SingleValueGet.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>skip<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>count<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:s24UnkeyedDecodingContainerP\">UnkeyedDecodingContainer<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 186,
            "key.name" : "skip(to:)",
            "key.namelength" : 19,
            "key.nameoffset" : 3070,
            "key.offset" : 3065,
            "key.parsed_declaration" : "mutating func skip(to count: Int) throws -> UnkeyedDecodingContainer",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 79,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : UnkeyedDecodingContainer> (inout Self) -> (Int) throws -> UnkeyedDecodingContainer",
            "key.typeusr" : "$S2tos24UnkeyedDecodingContainer_pSi_tKcD",
            "key.usr" : "s:s24UnkeyedDecodingContainerP5VaporE4skip33_BCB7B3DE027437510A515B6F7D9B03B9LL2tosAA_pSi_tKF"
          }
        ],
        "key.typename" : "UnkeyedDecodingContainer.Protocol",
        "key.typeusr" : "$Ss24UnkeyedDecodingContainer_pmD",
        "key.usr" : "s:s24UnkeyedDecodingContainerP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1241,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>final class URLEncodedFormDecoder : <Type usr=\"s:4Core11DataDecoderP\">DataDecoder<\/Type><\/Declaration>",
        "key.bodylength" : 841,
        "key.bodyoffset" : 53,
        "key.doc.declaration" : "final class URLEncodedFormDecoder : DataDecoder",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "URL-encoded forms are commonly used by websites to send form data via POST requests. This encoding is relatively efficient for small amounts of data but must be percent-encoded.  `multipart\/form-data` is more efficient for sending large data blobs like files."
          },
          {
            "Para" : "See  docs for more information about url-encoded forms."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>URLEncodedFormDecoder<\/Name><USR>s:14URLEncodedForm0aB7DecoderC<\/USR><Declaration>final class URLEncodedFormDecoder : DataDecoder<\/Declaration><CommentParts><Abstract><Para>Decodes instances of <codeVoice>Decodable<\/codeVoice> types from <codeVoice>application\/x-www-form-urlencoded<\/codeVoice> <codeVoice>Data<\/codeVoice>.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(data) \/\/ \"name=Vapor&age=3\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let user = try URLEncodedFormDecoder().decode(User.self, from: data)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(user) \/\/ User]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>URL-encoded forms are commonly used by websites to send form data via POST requests. This encoding is relatively efficient for small amounts of data but must be percent-encoded.  <codeVoice>multipart\/form-data<\/codeVoice> is more efficient for sending large data blobs like files.<\/Para><Para>See <Link href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Methods\/POST\">Mozilla’s<\/Link> docs for more information about url-encoded forms.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "URLEncodedFormDecoder",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 33
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>URLEncodedFormDecoder<\/decl.name> : <ref.protocol usr=\"s:4Core11DataDecoderP\">DataDecoder<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "HTTPMessageDecoder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 895,
        "key.modulename" : "URLEncodedForm",
        "key.name" : "URLEncodedFormDecoder",
        "key.namelength" : 21,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func decode&lt;D, M&gt;(_ decodable: <Type usr=\"s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\">D<\/Type>.Type, from message: <Type usr=\"s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/Type>, maxSize: <Type usr=\"s:Si\">Int<\/Type>, on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\">D<\/Type>&gt; where D : <Type usr=\"s:Se\">Decodable<\/Type>, M : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 92
              }
            ],
            "key.bodylength" : 636,
            "key.bodyoffset" : 256,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `HTTPMessageDecoder`.",
            "key.doc.declaration" : "public func decode<D, M>(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -> Future<D> where D : Decodable, M : HTTPMessage",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift\" line=\"3\" column=\"17\"><Name>decode(_:from:maxSize:on:)<\/Name><USR>s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF<\/USR><Declaration>public func decode&lt;D, M&gt;(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -&gt; Future&lt;D&gt; where D : Decodable, M : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>HTTPMessageDecoder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 3,
            "key.doc.name" : "decode(_:from:maxSize:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 30,
            "key.docoffset" : 58,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\">D<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>message<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp\">D<\/ref.generic_type_param>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:Se\">Decodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>M : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 794,
            "key.name" : "decode(_:from:maxSize:on:)",
            "key.namelength" : 83,
            "key.nameoffset" : 104,
            "key.offset" : 99,
            "key.overrides" : [
              {
                "key.usr" : "s:4HTTP18HTTPMessageDecoderP6decode_4from7maxSize2on3NIO15EventLoopFutureCyqd__Gqd__m_qd_0_SiAH0jK5Group_ptKSeRd__AA0B0Rd_0_r0_lF"
              }
            ],
            "key.parsed_declaration" : "public func decode<D, M>(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -> Future<D>\n    where D: Decodable, M: HTTPMessage",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 3,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14URLEncodedForm0aB7DecoderC6decode_4fromxxm_10Foundation4DataVtKSeRzlF\">decode(_:from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 111,
                "key.offset" : 111,
                "key.parsed_declaration" : "public func decode<D, M>(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -> Future<D>",
                "key.parsed_scope.end" : 3,
                "key.parsed_scope.start" : 3,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1DL_xmfp"
              },
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 114,
                "key.offset" : 114,
                "key.parsed_declaration" : "public func decode<D, M>(_ decodable: D.Type, from message: M, maxSize: Int, on worker: Worker) throws -> Future<D>",
                "key.parsed_scope.end" : 3,
                "key.parsed_scope.start" : 3,
                "key.typename" : "M.Type",
                "key.typeusr" : "$Sq_mD",
                "key.usr" : "s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp"
              }
            ],
            "key.typename" : "<D, M where D : Decodable, M : HTTPMessage> (URLEncodedFormDecoder) -> (D.Type, M, Int, EventLoopGroup) throws -> EventLoopFuture<D>",
            "key.typeusr" : "$S_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAD0fG5Group_ptKcSeRz4HTTP11HTTPMessageR_r0_luD",
            "key.usr" : "s:14URLEncodedForm0aB7DecoderC5VaporE6decode_4from7maxSize2on3NIO15EventLoopFutureCyxGxm_q_SiAI0kL5Group_ptKSeRz4HTTP11HTTPMessageR_r0_lF"
          }
        ],
        "key.typename" : "URLEncodedFormDecoder.Type",
        "key.typeusr" : "$S14URLEncodedForm0aB7DecoderCmD",
        "key.usr" : "s:14URLEncodedForm0aB7DecoderC"
      },
      {
        "key.annotated_decl" : "<Declaration>final class URLEncodedFormEncoder : <Type usr=\"s:4Core11DataEncoderP\">DataEncoder<\/Type><\/Declaration>",
        "key.bodylength" : 289,
        "key.bodyoffset" : 950,
        "key.doc.declaration" : "final class URLEncodedFormEncoder : DataEncoder",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "URL-encoded forms are commonly used by websites to send form data via POST requests. This encoding is relatively efficient for small amounts of data but must be percent-encoded.  `multipart\/form-data` is more efficient for sending large data blobs like files."
          },
          {
            "Para" : "See  docs for more information about url-encoded forms."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>URLEncodedFormEncoder<\/Name><USR>s:14URLEncodedForm0aB7EncoderC<\/USR><Declaration>final class URLEncodedFormEncoder : DataEncoder<\/Declaration><CommentParts><Abstract><Para>Encodes <codeVoice>Encodable<\/codeVoice> instances to <codeVoice>application\/x-www-form-urlencoded<\/codeVoice> data.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(user) \/\/\/ User]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let data = try URLEncodedFormEncoder().encode(user)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(data) \/\/\/ Data]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>URL-encoded forms are commonly used by websites to send form data via POST requests. This encoding is relatively efficient for small amounts of data but must be percent-encoded.  <codeVoice>multipart\/form-data<\/codeVoice> is more efficient for sending large data blobs like files.<\/Para><Para>See <Link href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Methods\/POST\">Mozilla’s<\/Link> docs for more information about url-encoded forms.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "URLEncodedFormEncoder",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 18,
            "key.offset" : 930
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>URLEncodedFormEncoder<\/decl.name> : <ref.protocol usr=\"s:4Core11DataEncoderP\">DataEncoder<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "HTTPMessageEncoder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 343,
        "key.modulename" : "URLEncodedForm",
        "key.name" : "URLEncodedFormEncoder",
        "key.namelength" : 21,
        "key.nameoffset" : 907,
        "key.offset" : 897,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode&lt;E, M&gt;(_ encodable: <Type usr=\"s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp\">E<\/Type>, to message: inout <Type usr=\"s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/Type>, on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>) throws where E : <Type usr=\"s:SE\">Encodable<\/Type>, M : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 989
              }
            ],
            "key.bodylength" : 112,
            "key.bodyoffset" : 1125,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `HTTPMessageEncoder`.",
            "key.doc.declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws where E : Encodable, M : HTTPMessage",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift\" line=\"24\" column=\"17\"><Name>encode(_:to:on:)<\/Name><USR>s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF<\/USR><Declaration>public func encode&lt;E, M&gt;(_ encodable: E, to message: inout M, on worker: Worker) throws where E : Encodable, M : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>HTTPMessageEncoder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 24,
            "key.doc.name" : "encode(_:to:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 30,
            "key.docoffset" : 955,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp\"><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp\">E<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>message<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.generic_type_param usr=\"s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp\">M<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>E : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>M : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 242,
            "key.name" : "encode(_:to:on:)",
            "key.namelength" : 68,
            "key.nameoffset" : 1001,
            "key.offset" : 996,
            "key.overrides" : [
              {
                "key.usr" : "s:4HTTP18HTTPMessageEncoderP6encode_2to2onyqd___qd_0_z3NIO14EventLoopGroup_ptKSERd__AA0B0Rd_0_r0_lF"
              }
            ],
            "key.parsed_declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws\n    where E: Encodable, M: HTTPMessage",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 24,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:14URLEncodedForm0aB7EncoderC6encodey10Foundation4DataVxKSERzlF\">encode(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>E<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>E<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "E",
                "key.namelength" : 1,
                "key.nameoffset" : 1008,
                "key.offset" : 1008,
                "key.parsed_declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws",
                "key.parsed_scope.end" : 24,
                "key.parsed_scope.start" : 24,
                "key.typename" : "E.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1EL_xmfp"
              },
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Content\/URLEncoded.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 1011,
                "key.offset" : 1011,
                "key.parsed_declaration" : "public func encode<E, M>(_ encodable: E, to message: inout M, on worker: Worker) throws",
                "key.parsed_scope.end" : 24,
                "key.parsed_scope.start" : 24,
                "key.typename" : "M.Type",
                "key.typeusr" : "$Sq_mD",
                "key.usr" : "s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF1ML_q_mfp"
              }
            ],
            "key.typename" : "<E, M where E : Encodable, M : HTTPMessage> (URLEncodedFormEncoder) -> (E, inout M, EventLoopGroup) throws -> ()",
            "key.typeusr" : "$S_2to2onyx_q_z3NIO14EventLoopGroup_ptKcSERz4HTTP11HTTPMessageR_r0_luD",
            "key.usr" : "s:14URLEncodedForm0aB7EncoderC5VaporE6encode_2to2onyx_q_z3NIO14EventLoopGroup_ptKSERz4HTTP11HTTPMessageR_r0_lF"
          }
        ],
        "key.typename" : "URLEncodedFormEncoder.Type",
        "key.typeusr" : "$S14URLEncodedForm0aB7EncoderCmD",
        "key.usr" : "s:14URLEncodedForm0aB7EncoderC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1506,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias EngineServerConfig = <Type usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 105
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 53,
            "key.offset" : 51
          }
        ],
        "key.doc.column" : 18,
        "key.doc.comment" : "See `NIOServerConfig`.",
        "key.doc.declaration" : "@available(*, deprecated, renamed: \"NIOServerConfig\")\npublic typealias EngineServerConfig = NIOServerConfig",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift\" line=\"5\" column=\"18\"><Name>EngineServerConfig<\/Name><USR>s:5Vapor18EngineServerConfiga<\/USR><Declaration>@available(*, deprecated, renamed: &quot;NIOServerConfig&quot;)\npublic typealias EngineServerConfig = NIOServerConfig<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>NIOServerConfig<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 5,
        "key.doc.name" : "EngineServerConfig",
        "key.doc.type" : "Other",
        "key.doclength" : 27,
        "key.docoffset" : 24,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>EngineServerConfig<\/decl.name> = <ref.struct usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/ref.struct><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 46,
        "key.name" : "EngineServerConfig",
        "key.namelength" : 18,
        "key.nameoffset" : 122,
        "key.offset" : 112,
        "key.parsed_declaration" : "public typealias EngineServerConfig = NIOServerConfig",
        "key.parsed_scope.end" : 5,
        "key.parsed_scope.start" : 5,
        "key.typename" : "NIOServerConfig.Type",
        "key.typeusr" : "$S5Vapor15NIOServerConfigVmD",
        "key.usr" : "s:5Vapor18EngineServerConfiga"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias EngineServer = <Type usr=\"s:5Vapor9NIOServerC\">NIOServer<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 235
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 47,
            "key.offset" : 187
          }
        ],
        "key.doc.column" : 18,
        "key.doc.comment" : "See `NIOServerConfig`.",
        "key.doc.declaration" : "@available(*, deprecated, renamed: \"NIOServer\")\npublic typealias EngineServer = NIOServer",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift\" line=\"9\" column=\"18\"><Name>EngineServer<\/Name><USR>s:5Vapor12EngineServera<\/USR><Declaration>@available(*, deprecated, renamed: &quot;NIOServer&quot;)\npublic typealias EngineServer = NIOServer<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>NIOServerConfig<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 9,
        "key.doc.name" : "EngineServer",
        "key.doc.type" : "Other",
        "key.doclength" : 27,
        "key.docoffset" : 160,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>EngineServer<\/decl.name> = <ref.class usr=\"s:5Vapor9NIOServerC\">NIOServer<\/ref.class><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 34,
        "key.name" : "EngineServer",
        "key.namelength" : 12,
        "key.nameoffset" : 252,
        "key.offset" : 242,
        "key.parsed_declaration" : "public typealias EngineServer = NIOServer",
        "key.parsed_scope.end" : 9,
        "key.parsed_scope.start" : 9,
        "key.typename" : "NIOServer.Type",
        "key.typeusr" : "$S5Vapor9NIOServerCmD",
        "key.usr" : "s:5Vapor12EngineServera"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol Client<\/Declaration>",
        "key.bodylength" : 1023,
        "key.bodyoffset" : 297,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Client",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"18\" column=\"17\"><Name>Client<\/Name><USR>s:5Vapor6ClientP<\/USR><Declaration>public protocol Client<\/Declaration><CommentParts><Abstract><Para>Connects to remote HTTP servers and sends HTTP requests receiving HTTP responses.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try req.client().get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "Client",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Client<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1042,
        "key.name" : "Client",
        "key.namelength" : 6,
        "key.nameoffset" : 289,
        "key.offset" : 279,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func put&lt;C&gt;(_ url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, content: <Type usr=\"s:5Vapor6ClientPAAE3put_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp\">C<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt; where C : <Type usr=\"s:5Vapor7ContentP\">Content<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 414
              },
              {
                "key.attribute" : "source.decl.attribute.available",
                "key.length" : 69,
                "key.offset" : 340
              }
            ],
            "key.bodylength" : 93,
            "key.bodyoffset" : 540,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends a PUT request with body",
            "key.doc.declaration" : "@available(*, deprecated, message: \"Use beforeSend closure instead.\")\npublic func put<C>(_ url: URLRepresentable, headers: HTTPHeaders = default, content: C) -> Future<Response> where C : Content",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift\" line=\"15\" column=\"17\"><Name>put(_:headers:content:)<\/Name><USR>s:5Vapor6ClientPAAE3put_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF<\/USR><Declaration>@available(*, deprecated, message: &quot;Use beforeSend closure instead.&quot;)\npublic func put&lt;C&gt;(_ url: URLRepresentable, headers: HTTPHeaders = default, content: C) -&gt; Future&lt;Response&gt; where C : Content<\/Declaration><CommentParts><Abstract><Para>Sends a PUT request with body<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "put(_:headers:content:)",
            "key.doc.type" : "Function",
            "key.doclength" : 34,
            "key.docoffset" : 302,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>put<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6ClientPAAE3put_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>content<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6ClientPAAE3put_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:5Vapor7ContentP\">Content<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 213,
            "key.name" : "put(_:headers:content:)",
            "key.namelength" : 75,
            "key.nameoffset" : 426,
            "key.offset" : 421,
            "key.parsed_declaration" : "public func put<C>(_ url: URLRepresentable, headers: HTTPHeaders = .init(), content: C) -> Future<Response> where C: Content",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 15,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6ClientPAAE3put_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF\">put(_:headers:beforeSend:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 430,
                "key.offset" : 430,
                "key.parsed_declaration" : "public func put<C>(_ url: URLRepresentable, headers: HTTPHeaders = .init(), content: C) -> Future<Response> where C: Content",
                "key.parsed_scope.end" : 15,
                "key.parsed_scope.start" : 15,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6ClientPAAE3put_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, C where Self : Client, C : Content> (Self) -> (URLRepresentable, HTTPHeaders, C) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S_7headers7content3NIO15EventLoopFutureCy5Vapor8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tcAF7ContentRd__luD",
            "key.usr" : "s:5Vapor6ClientPAAE3put_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func post&lt;C&gt;(_ url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, content: <Type usr=\"s:5Vapor6ClientPAAE4post_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp\">C<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt; where C : <Type usr=\"s:5Vapor7ContentP\">Content<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 753
              },
              {
                "key.attribute" : "source.decl.attribute.available",
                "key.length" : 69,
                "key.offset" : 679
              }
            ],
            "key.bodylength" : 94,
            "key.bodyoffset" : 880,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends a POST request with body",
            "key.doc.declaration" : "@available(*, deprecated, message: \"Use beforeSend closure instead.\")\npublic func post<C>(_ url: URLRepresentable, headers: HTTPHeaders = default, content: C) -> Future<Response> where C : Content",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift\" line=\"21\" column=\"17\"><Name>post(_:headers:content:)<\/Name><USR>s:5Vapor6ClientPAAE4post_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF<\/USR><Declaration>@available(*, deprecated, message: &quot;Use beforeSend closure instead.&quot;)\npublic func post&lt;C&gt;(_ url: URLRepresentable, headers: HTTPHeaders = default, content: C) -&gt; Future&lt;Response&gt; where C : Content<\/Declaration><CommentParts><Abstract><Para>Sends a POST request with body<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 21,
            "key.doc.name" : "post(_:headers:content:)",
            "key.doc.type" : "Function",
            "key.doclength" : 35,
            "key.docoffset" : 640,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>post<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6ClientPAAE4post_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>content<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6ClientPAAE4post_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:5Vapor7ContentP\">Content<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 215,
            "key.name" : "post(_:headers:content:)",
            "key.namelength" : 76,
            "key.nameoffset" : 765,
            "key.offset" : 760,
            "key.parsed_declaration" : "public func post<C>(_ url: URLRepresentable, headers: HTTPHeaders = .init(), content: C) -> Future<Response> where C: Content",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 21,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6ClientPAAE4post_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF\">post(_:headers:beforeSend:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 770,
                "key.offset" : 770,
                "key.parsed_declaration" : "public func post<C>(_ url: URLRepresentable, headers: HTTPHeaders = .init(), content: C) -> Future<Response> where C: Content",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6ClientPAAE4post_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, C where Self : Client, C : Content> (Self) -> (URLRepresentable, HTTPHeaders, C) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S_7headers7content3NIO15EventLoopFutureCy5Vapor8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tcAF7ContentRd__luD",
            "key.usr" : "s:5Vapor6ClientPAAE4post_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func patch&lt;C&gt;(_ url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, content: <Type usr=\"s:5Vapor6ClientPAAE5patch_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp\">C<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt; where C : <Type usr=\"s:5Vapor7ContentP\">Content<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1095
              },
              {
                "key.attribute" : "source.decl.attribute.available",
                "key.length" : 69,
                "key.offset" : 1021
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 1223,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends a PATCH request with body",
            "key.doc.declaration" : "@available(*, deprecated, message: \"Use beforeSend closure instead.\")\npublic func patch<C>(_ url: URLRepresentable, headers: HTTPHeaders = default, content: C) -> Future<Response> where C : Content",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift\" line=\"27\" column=\"17\"><Name>patch(_:headers:content:)<\/Name><USR>s:5Vapor6ClientPAAE5patch_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF<\/USR><Declaration>@available(*, deprecated, message: &quot;Use beforeSend closure instead.&quot;)\npublic func patch&lt;C&gt;(_ url: URLRepresentable, headers: HTTPHeaders = default, content: C) -&gt; Future&lt;Response&gt; where C : Content<\/Declaration><CommentParts><Abstract><Para>Sends a PATCH request with body<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 27,
            "key.doc.name" : "patch(_:headers:content:)",
            "key.doc.type" : "Function",
            "key.doclength" : 36,
            "key.docoffset" : 981,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>patch<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6ClientPAAE5patch_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>content<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6ClientPAAE5patch_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:5Vapor7ContentP\">Content<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 217,
            "key.name" : "patch(_:headers:content:)",
            "key.namelength" : 77,
            "key.nameoffset" : 1107,
            "key.offset" : 1102,
            "key.parsed_declaration" : "public func patch<C>(_ url: URLRepresentable, headers: HTTPHeaders = .init(), content: C) -> Future<Response> where C: Content",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 27,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6ClientPAAE5patch_7headers10beforeSend3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF\">patch(_:headers:beforeSend:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 1113,
                "key.offset" : 1113,
                "key.parsed_declaration" : "public func patch<C>(_ url: URLRepresentable, headers: HTTPHeaders = .init(), content: C) -> Future<Response> where C: Content",
                "key.parsed_scope.end" : 27,
                "key.parsed_scope.start" : 27,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6ClientPAAE5patch_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF1CL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, C where Self : Client, C : Content> (Self) -> (URLRepresentable, HTTPHeaders, C) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S_7headers7content3NIO15EventLoopFutureCy5Vapor8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tcAF7ContentRd__luD",
            "key.usr" : "s:5Vapor6ClientPAAE5patch_7headers7content3NIO15EventLoopFutureCyAA8ResponseCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVqd__tAA7ContentRd__lF"
          }
        ],
        "key.typename" : "Client.Protocol",
        "key.typeusr" : "$S5Vapor6Client_pmD",
        "key.usr" : "s:5Vapor6ClientP"
      },
      {
        "key.annotated_decl" : "<Declaration>public final class MemorySessions : <Type usr=\"s:5Vapor8SessionsP\">Sessions<\/Type>, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 155,
        "key.bodyoffset" : 1349,
        "key.doc.column" : 20,
        "key.doc.declaration" : "public final class MemorySessions : Sessions, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift\" line=\"2\" column=\"20\"><Name>MemorySessions<\/Name><USR>s:5Vapor14MemorySessionsC<\/USR><Declaration>public final class MemorySessions : Sessions, Service<\/Declaration><CommentParts><Abstract><Para>Simple in-memory sessions implementation.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "MemorySessions",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>MemorySessions<\/decl.name> : <ref.protocol usr=\"s:5Vapor8SessionsP\">Sessions<\/ref.protocol>, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 182,
        "key.name" : "MemorySessions",
        "key.namelength" : 14,
        "key.nameoffset" : 1333,
        "key.offset" : 1323,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public convenience init(on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.convenience",
                "key.length" : 11,
                "key.offset" : 1440
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1433
              },
              {
                "key.attribute" : "source.decl.attribute.available",
                "key.length" : 44,
                "key.offset" : 1384
              }
            ],
            "key.bodylength" : 25,
            "key.bodyoffset" : 1477,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `MemorySessions`.",
            "key.doc.declaration" : "@available(*, deprecated, renamed: \"init()\")\npublic convenience init(on worker: Worker)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift\" line=\"35\" column=\"24\"><Name>init(on:)<\/Name><USR>s:5Vapor14MemorySessionsC2onAC3NIO14EventLoopGroup_p_tcfc<\/USR><Declaration>@available(*, deprecated, renamed: &quot;init()&quot;)\npublic convenience init(on worker: Worker)<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>MemorySessions<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 35,
            "key.doc.name" : "init(on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 26,
            "key.docoffset" : 1354,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Deprecated.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>convenience<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 51,
            "key.name" : "init(on:)",
            "key.namelength" : 23,
            "key.nameoffset" : 1452,
            "key.offset" : 1452,
            "key.parsed_declaration" : "public convenience init(on worker: Worker)",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 35,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14MemorySessionsCACycfc\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(MemorySessions.Type) -> (EventLoopGroup) -> MemorySessions",
            "key.typeusr" : "$S2on5Vapor14MemorySessionsC3NIO14EventLoopGroup_p_tcD",
            "key.usr" : "s:5Vapor14MemorySessionsC2onAC3NIO14EventLoopGroup_p_tcfc"
          }
        ],
        "key.typename" : "MemorySessions.Type",
        "key.typeusr" : "$S5Vapor14MemorySessionsCmD",
        "key.usr" : "s:5Vapor14MemorySessionsC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1912,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct Abort : <Type usr=\"s:5Vapor10AbortErrorP\">AbortError<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 261
          }
        ],
        "key.bodylength" : 1616,
        "key.bodyoffset" : 294,
        "key.doc.column" : 15,
        "key.doc.comment" : "Default implementation of `AbortError`. You can use this as a convenient method for throwing\n`AbortError`s without having to conform your own error-type to `AbortError`.\n\n    throw Abort(.badRequest, reason: \"Something's not quite right...\")",
        "key.doc.declaration" : "public struct Abort : AbortError",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift\" line=\"6\" column=\"15\"><Name>Abort<\/Name><USR>s:5Vapor5AbortV<\/USR><Declaration>public struct Abort : AbortError<\/Declaration><CommentParts><Abstract><Para>Default implementation of <codeVoice>AbortError<\/codeVoice>. You can use this as a convenient method for throwing <codeVoice>AbortError<\/codeVoice>s without having to conform your own error-type to <codeVoice>AbortError<\/codeVoice>.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[throw Abort(.badRequest, reason: \"Something's not quite right...\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 6,
        "key.doc.name" : "Abort",
        "key.doc.type" : "Class",
        "key.doclength" : 261,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 282
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Abort<\/decl.name> : <ref.protocol usr=\"s:5Vapor10AbortErrorP\">AbortError<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "AbortError"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1643,
        "key.name" : "Abort",
        "key.namelength" : 5,
        "key.nameoffset" : 275,
        "key.offset" : 268,
        "key.parsed_declaration" : "public struct Abort: AbortError",
        "key.parsed_scope.end" : 55,
        "key.parsed_scope.start" : 6,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func redirect(to location: <Type usr=\"s:SS\">String<\/Type>, type: <Type usr=\"s:5Vapor12RedirectTypeO\">RedirectType<\/Type> = default) -&gt; <Type usr=\"s:5Vapor5AbortV\">Abort<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 581
              }
            ],
            "key.bodylength" : 159,
            "key.bodyoffset" : 670,
            "key.doc.column" : 24,
            "key.doc.comment" : "Creates a redirecting `Abort` error.\n\n    throw Abort.redirect(to: \"https:\/\/vapor.codes\")\"\n\nSet type to '.permanently' to allow caching to automatically redirect from browsers.\nDefaulting to non-permanent to prevent unexpected caching.",
            "key.doc.declaration" : "public static func redirect(to location: String, type: RedirectType = default) -> Abort",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "Set type to ‘.permanently’ to allow caching to automatically redirect from browsers. Defaulting to non-permanent to prevent unexpected caching."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift\" line=\"13\" column=\"24\"><Name>redirect(to:type:)<\/Name><USR>s:5Vapor5AbortV8redirect2to4typeACSS_AA12RedirectTypeOtFZ<\/USR><Declaration>public static func redirect(to location: String, type: RedirectType = default) -&gt; Abort<\/Declaration><CommentParts><Abstract><Para>Creates a redirecting <codeVoice>Abort<\/codeVoice> error.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[throw Abort.redirect(to: \"https:\/\/vapor.codes\")\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Set type to ‘.permanently’ to allow caching to automatically redirect from browsers. Defaulting to non-permanent to prevent unexpected caching.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 13,
            "key.doc.name" : "redirect(to:type:)",
            "key.doc.type" : "Function",
            "key.doclength" : 278,
            "key.docoffset" : 299,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>redirect<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>location<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>type<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:5Vapor12RedirectTypeO\">RedirectType<\/ref.enum><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor5AbortV\">Abort<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 242,
            "key.name" : "redirect(to:type:)",
            "key.namelength" : 59,
            "key.nameoffset" : 600,
            "key.offset" : 588,
            "key.parsed_declaration" : "public static func redirect(to location: String, type: RedirectType = .normal) -> Abort",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 13,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 30,
                "key.name" : "headers",
                "key.namelength" : 7,
                "key.nameoffset" : 683,
                "key.offset" : 679,
                "key.parsed_declaration" : "var headers: HTTPHeaders = [:]",
                "key.parsed_scope.end" : 14,
                "key.parsed_scope.start" : 14,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor5AbortV7headers8NIOHTTP111HTTPHeadersVvp\">headers<\/RelatedName>"
                  }
                ],
                "key.typename" : "HTTPHeaders",
                "key.typeusr" : "$S8NIOHTTP111HTTPHeadersVD",
                "key.usr" : "s:5Vapor5AbortV8redirect2to4typeACSS_AA12RedirectTypeOtFZ7headersL_8NIOHTTP111HTTPHeadersVvp"
              }
            ],
            "key.typename" : "(Abort.Type) -> (String, RedirectType) -> Abort",
            "key.typeusr" : "$S2to4type5Vapor5AbortVSS_AC12RedirectTypeOtcD",
            "key.usr" : "s:5Vapor5AbortV8redirect2to4typeACSS_AA12RedirectTypeOtFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var identifier: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 861
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable`",
            "key.doc.declaration" : "public var identifier: String",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift\" line=\"20\" column=\"16\"><Name>identifier<\/Name><USR>s:5Vapor5AbortV10identifierSSvp<\/USR><Declaration>public var identifier: String<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 20,
            "key.doc.name" : "identifier",
            "key.doc.type" : "Other",
            "key.doclength" : 21,
            "key.docoffset" : 836,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 872,
            "key.offset" : 868,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP10identifierSSvp"
              }
            ],
            "key.parsed_declaration" : "public var identifier: String",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor5AbortV10identifierSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 921
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError`",
            "key.doc.declaration" : "public var status: HTTPResponseStatus",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift\" line=\"23\" column=\"16\"><Name>status<\/Name><USR>s:5Vapor5AbortV6status8NIOHTTP118HTTPResponseStatusOvp<\/USR><Declaration>public var status: HTTPResponseStatus<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 23,
            "key.doc.name" : "status",
            "key.doc.type" : "Other",
            "key.doclength" : 21,
            "key.docoffset" : 896,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "status",
            "key.namelength" : 6,
            "key.nameoffset" : 932,
            "key.offset" : 928,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6status8NIOHTTP118HTTPResponseStatusOvp"
              }
            ],
            "key.parsed_declaration" : "public var status: HTTPResponseStatus",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 23,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "HTTPResponseStatus",
            "key.typeusr" : "$S8NIOHTTP118HTTPResponseStatusOD",
            "key.usr" : "s:5Vapor5AbortV6status8NIOHTTP118HTTPResponseStatusOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 990
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError`.",
            "key.doc.declaration" : "public var headers: HTTPHeaders",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift\" line=\"26\" column=\"16\"><Name>headers<\/Name><USR>s:5Vapor5AbortV7headers8NIOHTTP111HTTPHeadersVvp<\/USR><Declaration>public var headers: HTTPHeaders<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 26,
            "key.doc.name" : "headers",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 964,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "headers",
            "key.namelength" : 7,
            "key.nameoffset" : 1001,
            "key.offset" : 997,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP7headers8NIOHTTP111HTTPHeadersVvp"
              }
            ],
            "key.parsed_declaration" : "public var headers: HTTPHeaders",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 26,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "HTTPHeaders",
            "key.typeusr" : "$S8NIOHTTP111HTTPHeadersVD",
            "key.usr" : "s:5Vapor5AbortV7headers8NIOHTTP111HTTPHeadersVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var reason: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1052
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError`",
            "key.doc.declaration" : "public var reason: String",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift\" line=\"29\" column=\"16\"><Name>reason<\/Name><USR>s:5Vapor5AbortV6reasonSSvp<\/USR><Declaration>public var reason: String<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 29,
            "key.doc.name" : "reason",
            "key.doc.type" : "Other",
            "key.doclength" : 21,
            "key.docoffset" : 1027,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "reason",
            "key.namelength" : 6,
            "key.nameoffset" : 1063,
            "key.offset" : 1059,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6reasonSSvp"
              },
              {
                "key.usr" : "s:9Debugging10DebuggableP6reasonSSvp"
              }
            ],
            "key.parsed_declaration" : "public var reason: String",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor5AbortV6reasonSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var sourceLocation: <Type usr=\"s:9Debugging14SourceLocationV\">SourceLocation<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1108
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable`",
            "key.doc.declaration" : "public var sourceLocation: Debugging.SourceLocation?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift\" line=\"32\" column=\"16\"><Name>sourceLocation<\/Name><USR>s:5Vapor5AbortV14sourceLocation9Debugging06SourceD0VSgvp<\/USR><Declaration>public var sourceLocation: Debugging.SourceLocation?<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 32,
            "key.doc.name" : "sourceLocation",
            "key.doc.type" : "Other",
            "key.doclength" : 21,
            "key.docoffset" : 1083,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sourceLocation<\/decl.name>: <decl.var.type><ref.struct usr=\"s:9Debugging14SourceLocationV\">SourceLocation<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 35,
            "key.name" : "sourceLocation",
            "key.namelength" : 14,
            "key.nameoffset" : 1119,
            "key.offset" : 1115,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP14sourceLocationAA06SourceD0VSgvp"
              }
            ],
            "key.parsed_declaration" : "public var sourceLocation: SourceLocation?",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 32,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "SourceLocation?",
            "key.typeusr" : "$S9Debugging14SourceLocationVSgD",
            "key.usr" : "s:5Vapor5AbortV14sourceLocation9Debugging06SourceD0VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var stackTrace: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1181
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable`",
            "key.doc.declaration" : "public var stackTrace: [String]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift\" line=\"35\" column=\"16\"><Name>stackTrace<\/Name><USR>s:5Vapor5AbortV10stackTraceSaySSGvp<\/USR><Declaration>public var stackTrace: [String]<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 35,
            "key.doc.name" : "stackTrace",
            "key.doc.type" : "Other",
            "key.doclength" : 21,
            "key.docoffset" : 1156,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stackTrace<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "stackTrace",
            "key.namelength" : 10,
            "key.nameoffset" : 1192,
            "key.offset" : 1188,
            "key.parsed_declaration" : "public var stackTrace: [String]",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 35,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[String]",
            "key.typeusr" : "$SSaySSGD",
            "key.usr" : "s:5Vapor5AbortV10stackTraceSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, reason: <Type usr=\"s:SS\">String<\/Type>? = default, identifier: <Type usr=\"s:SS\">String<\/Type>? = default, file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Su\">UInt<\/Type> = #line, column: <Type usr=\"s:Su\">UInt<\/Type> = #column)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1288
              }
            ],
            "key.bodylength" : 333,
            "key.bodyoffset" : 1575,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `Abort`, capturing current source location info.",
            "key.doc.declaration" : "public init(_ status: HTTPResponseStatus, headers: HTTPHeaders = default, reason: String? = default, identifier: String? = default, file: String = #file, function: String = #function, line: UInt = #line, column: UInt = #column)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift\" line=\"38\" column=\"12\"><Name>init(_:headers:reason:identifier:file:function:line:column:)<\/Name><USR>s:5Vapor5AbortV_7headers6reason10identifier4file8function4line6columnAC8NIOHTTP118HTTPResponseStatusO_AK11HTTPHeadersVSSSgAPS2SS2utcfc<\/USR><Declaration>public init(_ status: HTTPResponseStatus, headers: HTTPHeaders = default, reason: String? = default, identifier: String? = default, file: String = #file, function: String = #function, line: UInt = #line, column: UInt = #column)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>Abort<\/codeVoice>, capturing current source location info.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 38,
            "key.doc.name" : "init(_:headers:reason:identifier:file:function:line:column:)",
            "key.doc.type" : "Function",
            "key.doclength" : 66,
            "key.docoffset" : 1218,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Abort.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>status<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reason<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>identifier<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>column<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#column<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 614,
            "key.name" : "init(_:headers:reason:identifier:file:function:line:column:)",
            "key.namelength" : 278,
            "key.nameoffset" : 1295,
            "key.offset" : 1295,
            "key.parsed_declaration" : "public init(\n    _ status: HTTPResponseStatus,\n    headers: HTTPHeaders = [:],\n    reason: String? = nil,\n    identifier: String? = nil,\n    file: String = #file,\n    function: String = #function,\n    line: UInt = #line,\n    column: UInt = #column\n)",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 38,
            "key.substructure" : [

            ],
            "key.typename" : "(Abort.Type) -> (HTTPResponseStatus, HTTPHeaders, String?, String?, String, String, UInt, UInt) -> Abort",
            "key.typeusr" : "$S_7headers6reason10identifier4file8function4line6column5Vapor5AbortV8NIOHTTP118HTTPResponseStatusO_AK11HTTPHeadersVSSSgAPS2SS2utcD",
            "key.usr" : "s:5Vapor5AbortV_7headers6reason10identifier4file8function4line6columnAC8NIOHTTP118HTTPResponseStatusO_AK11HTTPHeadersVSSSgAPS2SS2utcfc"
          }
        ],
        "key.typename" : "Abort.Type",
        "key.typeusr" : "$S5Vapor5AbortVmD",
        "key.usr" : "s:5Vapor5AbortV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2920,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol AbortError : <Type usr=\"s:9Debugging10DebuggableP\">Debuggable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 414
          }
        ],
        "key.bodylength" : 309,
        "key.bodyoffset" : 454,
        "key.doc.column" : 17,
        "key.doc.comment" : "Errors conforming to this protocol will always be displayed by\nVapor to the end-user (even in production mode where most errors are silenced).\n\n    extension MyError: AbortError { ... }\n    throw MyError(...) \/\/ Can now result in non-500 error.\n\nSee `Abort` for a default implementation of this protocol.\n\n    throw Abort(.badRequest, reason: \"Something's not quite right...\")",
        "key.doc.declaration" : "public protocol AbortError : Debuggable",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `Abort` for a default implementation of this protocol."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"11\" column=\"17\"><Name>AbortError<\/Name><USR>s:5Vapor10AbortErrorP<\/USR><Declaration>public protocol AbortError : Debuggable<\/Declaration><CommentParts><Abstract><Para>Errors conforming to this protocol will always be displayed by Vapor to the end-user (even in production mode where most errors are silenced).<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[extension MyError: AbortError { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throw MyError(...) \/\/ Can now result in non-500 error.]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>Abort<\/codeVoice> for a default implementation of this protocol.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[throw Abort(.badRequest, reason: \"Something's not quite right...\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 11,
        "key.doc.name" : "AbortError",
        "key.doc.type" : "Class",
        "key.doclength" : 414,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 442
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>AbortError<\/decl.name> : <ref.protocol usr=\"s:9Debugging10DebuggableP\">Debuggable<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Debuggable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 343,
        "key.name" : "AbortError",
        "key.namelength" : 10,
        "key.nameoffset" : 430,
        "key.offset" : 421,
        "key.parsed_declaration" : "public protocol AbortError: Debuggable",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 11,
        "key.runtime_name" : "_TtP4main10AbortError_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 544,
            "key.doc.column" : 9,
            "key.doc.comment" : "The HTTP status code this error will return.",
            "key.doc.declaration" : "var status: HTTPResponseStatus { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"13\" column=\"9\"><Name>status<\/Name><USR>s:5Vapor10AbortErrorP6status8NIOHTTP118HTTPResponseStatusOvp<\/USR><Declaration>var status: HTTPResponseStatus { get }<\/Declaration><CommentParts><Abstract><Para>The HTTP status code this error will return.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 13,
            "key.doc.name" : "status",
            "key.doc.type" : "Other",
            "key.doclength" : 49,
            "key.docoffset" : 459,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 38,
            "key.name" : "status",
            "key.namelength" : 6,
            "key.nameoffset" : 516,
            "key.offset" : 512,
            "key.parsed_declaration" : "var status: HTTPResponseStatus",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.typename" : "HTTPResponseStatus",
            "key.typeusr" : "$S8NIOHTTP118HTTPResponseStatusOD",
            "key.usr" : "s:5Vapor10AbortErrorP6status8NIOHTTP118HTTPResponseStatusOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 643,
            "key.doc.column" : 9,
            "key.doc.comment" : "Optional `HTTPHeaders` to add to the error response.",
            "key.doc.declaration" : "var headers: HTTPHeaders { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"16\" column=\"9\"><Name>headers<\/Name><USR>s:5Vapor10AbortErrorP7headers8NIOHTTP111HTTPHeadersVvp<\/USR><Declaration>var headers: HTTPHeaders { get }<\/Declaration><CommentParts><Abstract><Para>Optional <codeVoice>HTTPHeaders<\/codeVoice> to add to the error response.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 16,
            "key.doc.name" : "headers",
            "key.doc.type" : "Other",
            "key.doclength" : 57,
            "key.docoffset" : 556,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "headers",
            "key.namelength" : 7,
            "key.nameoffset" : 621,
            "key.offset" : 617,
            "key.parsed_declaration" : "var headers: HTTPHeaders",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor10AbortErrorPAAE7headers8NIOHTTP111HTTPHeadersVvp\">headers<\/RelatedName>"
              }
            ],
            "key.typename" : "HTTPHeaders",
            "key.typeusr" : "$S8NIOHTTP111HTTPHeadersVD",
            "key.usr" : "s:5Vapor10AbortErrorP7headers8NIOHTTP111HTTPHeadersVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var reason: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 756,
            "key.doc.column" : 9,
            "key.doc.comment" : "The human-readable (and hopefully understandable) reason for this error.",
            "key.doc.declaration" : "var reason: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"19\" column=\"9\"><Name>reason<\/Name><USR>s:5Vapor10AbortErrorP6reasonSSvp<\/USR><Declaration>var reason: String { get }<\/Declaration><CommentParts><Abstract><Para>The human-readable (and hopefully understandable) reason for this error.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 19,
            "key.doc.name" : "reason",
            "key.doc.type" : "Other",
            "key.doclength" : 77,
            "key.docoffset" : 655,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.name" : "reason",
            "key.namelength" : 6,
            "key.nameoffset" : 740,
            "key.offset" : 736,
            "key.parsed_declaration" : "var reason: String",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:9Debugging10DebuggableP6reasonSSvp\">reason<\/RelatedName>"
              }
            ],
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor10AbortErrorP6reasonSSvp"
          }
        ],
        "key.typename" : "AbortError.Protocol",
        "key.typeusr" : "$S5Vapor10AbortError_pmD",
        "key.usr" : "s:5Vapor10AbortErrorP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol AbortError : <Type usr=\"s:9Debugging10DebuggableP\">Debuggable<\/Type><\/Declaration>",
        "key.bodylength" : 90,
        "key.bodyoffset" : 788,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol AbortError : Debuggable",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `Abort` for a default implementation of this protocol."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"11\" column=\"17\"><Name>AbortError<\/Name><USR>s:5Vapor10AbortErrorP<\/USR><Declaration>public protocol AbortError : Debuggable<\/Declaration><CommentParts><Abstract><Para>Errors conforming to this protocol will always be displayed by Vapor to the end-user (even in production mode where most errors are silenced).<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[extension MyError: AbortError { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[throw MyError(...) \/\/ Can now result in non-500 error.]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>Abort<\/codeVoice> for a default implementation of this protocol.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[throw Abort(.badRequest, reason: \"Something's not quite right...\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 11,
        "key.doc.name" : "AbortError",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>AbortError<\/decl.name> : <ref.protocol usr=\"s:9Debugging10DebuggableP\">Debuggable<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 113,
        "key.name" : "AbortError",
        "key.namelength" : 10,
        "key.nameoffset" : 776,
        "key.offset" : 766,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 819
              }
            ],
            "key.bodylength" : 24,
            "key.bodyoffset" : 852,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError`.",
            "key.doc.declaration" : "public var headers: HTTPHeaders { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"24\" column=\"16\"><Name>headers<\/Name><USR>s:5Vapor10AbortErrorPAAE7headers8NIOHTTP111HTTPHeadersVvp<\/USR><Declaration>public var headers: HTTPHeaders { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 24,
            "key.doc.name" : "headers",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 793,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 51,
            "key.name" : "headers",
            "key.namelength" : 7,
            "key.nameoffset" : 830,
            "key.offset" : 826,
            "key.parsed_declaration" : "public var headers: HTTPHeaders",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 24,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor10AbortErrorP7headers8NIOHTTP111HTTPHeadersVvp\">headers<\/RelatedName>"
              }
            ],
            "key.typename" : "HTTPHeaders",
            "key.typeusr" : "$S8NIOHTTP111HTTPHeadersVD",
            "key.usr" : "s:5Vapor10AbortErrorPAAE7headers8NIOHTTP111HTTPHeadersVvp"
          }
        ],
        "key.typename" : "AbortError.Protocol",
        "key.typeusr" : "$S5Vapor10AbortError_pmD",
        "key.usr" : "s:5Vapor10AbortErrorP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 26,
        "key.name" : "MARK: Default Conformances",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 884
      },
      {
        "key.annotated_decl" : "<Declaration>enum DecodingError : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.bodylength" : 1184,
        "key.bodyoffset" : 1050,
        "key.doc.comment" : "Decoding errors are very common and should result in a 400 Bad Request response most of the time",
        "key.doc.declaration" : "enum DecodingError : Error",
        "key.doc.full_as_xml" : "<Other><Name>DecodingError<\/Name><USR>s:s13DecodingErrorO<\/USR><Declaration>enum DecodingError : Error<\/Declaration><CommentParts><Abstract><Para>An error that occurs during the decoding of a value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.name" : "DecodingError",
        "key.doc.type" : "Other",
        "key.doclength" : 101,
        "key.docoffset" : 912,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 1038
          }
        ],
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>DecodingError<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
        "key.groupname" : "Misc",
        "key.inheritedtypes" : [
          {
            "key.name" : "AbortError"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1222,
        "key.modulename" : "Swift",
        "key.name" : "DecodingError",
        "key.namelength" : 13,
        "key.nameoffset" : 1023,
        "key.offset" : 1013,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1087
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 1126,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError.status`",
            "key.doc.declaration" : "public var status: HTTPResponseStatus { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"34\" column=\"16\"><Name>status<\/Name><USR>s:s13DecodingErrorO5VaporE6status8NIOHTTP118HTTPResponseStatusOvp<\/USR><Declaration>public var status: HTTPResponseStatus { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError.status<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 34,
            "key.doc.name" : "status",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 1055,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.name" : "status",
            "key.namelength" : 6,
            "key.nameoffset" : 1098,
            "key.offset" : 1094,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6status8NIOHTTP118HTTPResponseStatusOvp"
              }
            ],
            "key.parsed_declaration" : "public var status: HTTPResponseStatus",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 34,
            "key.typename" : "HTTPResponseStatus",
            "key.typeusr" : "$S8NIOHTTP118HTTPResponseStatusOD",
            "key.usr" : "s:s13DecodingErrorO5VaporE6status8NIOHTTP118HTTPResponseStatusOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var identifier: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1201
              }
            ],
            "key.bodylength" : 239,
            "key.bodyoffset" : 1232,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError.identifier`",
            "key.doc.declaration" : "public var identifier: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"39\" column=\"16\"><Name>identifier<\/Name><USR>s:s13DecodingErrorO5VaporE10identifierSSvp<\/USR><Declaration>public var identifier: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError.identifier<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 39,
            "key.doc.name" : "identifier",
            "key.doc.type" : "Other",
            "key.doclength" : 32,
            "key.docoffset" : 1165,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 264,
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 1212,
            "key.offset" : 1208,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP10identifierSSvp"
              }
            ],
            "key.parsed_declaration" : "public var identifier: String",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 39,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:s13DecodingErrorO5VaporE10identifierSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var reason: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1510
              }
            ],
            "key.bodylength" : 695,
            "key.bodyoffset" : 1537,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError.reason`",
            "key.doc.declaration" : "public var reason: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"49\" column=\"16\"><Name>reason<\/Name><USR>s:s13DecodingErrorO5VaporE6reasonSSvp<\/USR><Declaration>public var reason: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError.reason<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 49,
            "key.doc.name" : "reason",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 1478,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Misc",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 716,
            "key.name" : "reason",
            "key.namelength" : 6,
            "key.nameoffset" : 1521,
            "key.offset" : 1517,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6reasonSSvp"
              },
              {
                "key.usr" : "s:9Debugging10DebuggableP6reasonSSvp"
              }
            ],
            "key.parsed_declaration" : "public var reason: String",
            "key.parsed_scope.end" : 65,
            "key.parsed_scope.start" : 49,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:s13DecodingErrorO5VaporE6reasonSSvp"
          }
        ],
        "key.typename" : "DecodingError.Type",
        "key.typeusr" : "$Ss13DecodingErrorOmD",
        "key.usr" : "s:s13DecodingErrorO"
      },
      {
        "key.annotated_decl" : "<Declaration>struct NotFound : <Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
        "key.bodylength" : 496,
        "key.bodyoffset" : 2269,
        "key.doc.declaration" : "struct NotFound : Error",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>NotFound<\/Name><USR>s:4Core8NotFoundV<\/USR><Declaration>struct NotFound : Error<\/Declaration><CommentParts><Abstract><Para>Generic “not found” error with optional root cause.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[throw NotFound(rootCause: ...)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "NotFound",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 2257
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>NotFound<\/decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "AbortError"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 529,
        "key.modulename" : "Core",
        "key.name" : "NotFound",
        "key.namelength" : 8,
        "key.nameoffset" : 2247,
        "key.offset" : 2237,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var status: <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2306
              }
            ],
            "key.bodylength" : 30,
            "key.bodyoffset" : 2345,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError.status`",
            "key.doc.declaration" : "public var status: HTTPResponseStatus { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"70\" column=\"16\"><Name>status<\/Name><USR>s:4Core8NotFoundV5VaporE6status8NIOHTTP118HTTPResponseStatusOvp<\/USR><Declaration>public var status: HTTPResponseStatus { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError.status<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 70,
            "key.doc.name" : "status",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 2274,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 63,
            "key.name" : "status",
            "key.namelength" : 6,
            "key.nameoffset" : 2317,
            "key.offset" : 2313,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6status8NIOHTTP118HTTPResponseStatusOvp"
              }
            ],
            "key.parsed_declaration" : "public var status: HTTPResponseStatus",
            "key.parsed_scope.end" : 72,
            "key.parsed_scope.start" : 70,
            "key.typename" : "HTTPResponseStatus",
            "key.typeusr" : "$S8NIOHTTP118HTTPResponseStatusOD",
            "key.usr" : "s:4Core8NotFoundV5VaporE6status8NIOHTTP118HTTPResponseStatusOvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var reason: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2418
              }
            ],
            "key.bodylength" : 204,
            "key.bodyoffset" : 2445,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError.reason`",
            "key.doc.declaration" : "public var reason: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"75\" column=\"16\"><Name>reason<\/Name><USR>s:4Core8NotFoundV5VaporE6reasonSSvp<\/USR><Declaration>public var reason: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError.reason<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 75,
            "key.doc.name" : "reason",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 2386,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 225,
            "key.name" : "reason",
            "key.namelength" : 6,
            "key.nameoffset" : 2429,
            "key.offset" : 2425,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10AbortErrorP6reasonSSvp"
              },
              {
                "key.usr" : "s:9Debugging10DebuggableP6reasonSSvp"
              }
            ],
            "key.parsed_declaration" : "public var reason: String",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 75,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:4Core8NotFoundV5VaporE6reasonSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var identifier: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2696
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 2727,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `AbortError.identifier`",
            "key.doc.declaration" : "public var identifier: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift\" line=\"85\" column=\"16\"><Name>identifier<\/Name><USR>s:4Core8NotFoundV5VaporE10identifierSSvp<\/USR><Declaration>public var identifier: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>AbortError.identifier<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 85,
            "key.doc.name" : "identifier",
            "key.doc.type" : "Other",
            "key.doclength" : 32,
            "key.docoffset" : 2660,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 56,
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 2707,
            "key.offset" : 2703,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP10identifierSSvp"
              }
            ],
            "key.parsed_declaration" : "public var identifier: String",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 85,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:4Core8NotFoundV5VaporE10identifierSSvp"
          }
        ],
        "key.typename" : "NotFound.Type",
        "key.typeusr" : "$S4Core8NotFoundVmD",
        "key.usr" : "s:4Core8NotFoundV"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/Type><\/Declaration>",
        "key.bodylength" : 106,
        "key.bodyoffset" : 2812,
        "key.doc.declaration" : "struct Array<Element>",
        "key.doc.discussion" : [
          {
            "Para" : "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the `Array` type to hold elements of a single type, the array’s `Element` type. An array can store any kind of elements—from integers to strings to classes."
          },
          {
            "Para" : "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s `Element` type. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to perform an operation on all of an array’s elements, use a `for`-`in` loop to iterate through the array’s contents."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `first` and `last` properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are `nil`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can replace an existing element with a new value by assigning the new value to the subscript."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."
          },
          {
            "Para" : "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."
          },
          {
            "Para" : "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."
          },
          {
            "Para" : "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."
          },
          {
            "Para" : "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."
          },
          {
            "Para" : "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array’s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array’s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."
          },
          {
            "Para" : "When the destination array’s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."
          },
          {
            "Para" : "When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Array<\/Name><USR>s:Sa<\/USR><Declaration>struct Array&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.<\/Para><\/Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the <codeVoice>Array<\/codeVoice> type to hold elements of a single type, the array’s <codeVoice>Element<\/codeVoice> type. An array can store any kind of elements—from integers to strings to classes.<\/Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s <codeVoice>Element<\/codeVoice> type. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An array of 'Int' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ An array of 'String' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element<\/codeVoice> type of your array in the declaration. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Shortened forms are preferred]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The full type name is also allowed]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Array Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to perform an operation on all of an array’s elements, use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop to iterate through the array’s contents.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Albemarle.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Brandywine.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Chesapeake.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>isEmpty<\/codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count<\/codeVoice> property to find the number of elements in the array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I know 8 odd numbers.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>first<\/codeVoice> and <codeVoice>last<\/codeVoice> properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 15\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil, nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count<\/codeVoice> triggers a runtime error. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Triggers runtime error: Index out of range]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Adding and Removing Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)<\/codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)<\/codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)<\/codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)<\/codeVoice>, <codeVoice>removeSubrange(_:)<\/codeVoice>, and <codeVoice>removeLast()<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Ben's family is moving to another state]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ William is signing up for a different class]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Growing the Size of an Array<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.<\/Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)<\/codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity<\/codeVoice> and <codeVoice>count<\/codeVoice> properties to determine how many more elements the array can store without allocating larger storage.<\/Para><Para>For arrays of most <codeVoice>Element<\/codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element<\/codeVoice> type that is a class or <codeVoice>@objc<\/codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray<\/codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray<\/codeVoice> can become an <codeVoice>Array<\/codeVoice>, there are no guarantees about representation or efficiency in this case.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[100, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[1, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An integer type with reference semantics]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Modifications to an instance are visible from either array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Replacements, additions, and removals are still visible]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ only in the modified array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.<\/Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.<\/Para><Para>In the example below, a <codeVoice>numbers<\/codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers<\/codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers<\/codeVoice> are made in place, while the two copies continue to share the original storage.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The storage for 'numbers' is copied here]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'numbers' is [100, 200, 300, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray<\/codeVoice> instance instead of <codeVoice>Array<\/codeVoice>, use the type-cast operator (<codeVoice>as<\/codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of your array must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>The following example shows how you can bridge an <codeVoice>Array<\/codeVoice> instance to <codeVoice>NSArray<\/codeVoice> to use the <codeVoice>write(to:atomically:)<\/codeVoice> method. In this example, the <codeVoice>colors<\/codeVoice> array can be bridged to <codeVoice>NSArray<\/codeVoice> because the <codeVoice>colors<\/codeVoice> array’s <codeVoice>String<\/codeVoice> elements bridge to <codeVoice>NSString<\/codeVoice>. The compiler prevents bridging the <codeVoice>moreColors<\/codeVoice> array, on the other hand, because its <codeVoice>Element<\/codeVoice> type is <codeVoice>Optional&lt;String&gt;<\/codeVoice>, which does <emphasis>not<\/emphasis> bridge to a Foundation type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value of type '[String?]' to type 'NSArray']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Bridging from <codeVoice>Array<\/codeVoice> to <codeVoice>NSArray<\/codeVoice> takes O(1) time and O(1) space if the array’s elements are already instances of a class or an <codeVoice>@objc<\/codeVoice> protocol; otherwise, it takes O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When the destination array’s element type is a class or an <codeVoice>@objc<\/codeVoice> protocol, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)<\/codeVoice> returns the same array, the instances of <codeVoice>NSArray<\/codeVoice> and <codeVoice>Array<\/codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array<\/codeVoice> share storage.<\/Para><Para>When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n<\/emphasis>) time. For example, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array&lt;Int&gt;<\/codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array<\/codeVoice> instance.<\/Para><Note><Para>The <codeVoice>ContiguousArray<\/codeVoice> and <codeVoice>ArraySlice<\/codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Array",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Array<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Collection\/Array",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 151,
        "key.modulename" : "Swift",
        "key.name" : "Array",
        "key.namelength" : 5,
        "key.nameoffset" : 2778,
        "key.offset" : 2768,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate var dotPath: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 2817
              }
            ],
            "key.bodylength" : 66,
            "key.bodyoffset" : 2850,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/AbortError.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>dotPath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 88,
            "key.name" : "dotPath",
            "key.namelength" : 7,
            "key.nameoffset" : 2833,
            "key.offset" : 2829,
            "key.parsed_declaration" : "fileprivate var dotPath: String",
            "key.parsed_scope.end" : 94,
            "key.parsed_scope.start" : 92,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:Sa5Vapors9CodingKey_pRszlE7dotPath33_C6C7BCAF40EE31B6B7CFDE3DDF780EB4LLSSvp"
          }
        ],
        "key.typename" : "Array<Element>.Type",
        "key.typeusr" : "$SSayxGmD",
        "key.usr" : "s:Sa"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2074,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct VaporError : <Type usr=\"s:9Debugging10DebuggableP\">Debuggable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 74
          }
        ],
        "key.bodylength" : 1119,
        "key.bodyoffset" : 112,
        "key.doc.column" : 15,
        "key.doc.comment" : "Errors that can be thrown while working with Vapor.",
        "key.doc.declaration" : "public struct VaporError : Debuggable",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"4\" column=\"15\"><Name>VaporError<\/Name><USR>s:5Vapor0A5ErrorV<\/USR><Declaration>public struct VaporError : Debuggable<\/Declaration><CommentParts><Abstract><Para>Errors that can be thrown while working with Vapor.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 4,
        "key.doc.name" : "VaporError",
        "key.doc.type" : "Class",
        "key.doclength" : 56,
        "key.docoffset" : 18,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 100
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>VaporError<\/decl.name> : <ref.protocol usr=\"s:9Debugging10DebuggableP\">Debuggable<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Debuggable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1151,
        "key.name" : "VaporError",
        "key.namelength" : 10,
        "key.nameoffset" : 88,
        "key.offset" : 81,
        "key.parsed_declaration" : "public struct VaporError: Debuggable",
        "key.parsed_scope.end" : 44,
        "key.parsed_scope.start" : 4,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let readableName: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 143
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Debuggable`.",
            "key.doc.declaration" : "public static let readableName: String",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"6\" column=\"23\"><Name>readableName<\/Name><USR>s:5Vapor0A5ErrorV12readableNameSSvpZ<\/USR><Declaration>public static let readableName: String<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 6,
            "key.doc.name" : "readableName",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 117,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>readableName<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 39,
            "key.name" : "readableName",
            "key.namelength" : 12,
            "key.nameoffset" : 161,
            "key.offset" : 150,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP12readableNameSSvpZ"
              }
            ],
            "key.parsed_declaration" : "public static let readableName = \"Vapor Error\"",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor0A5ErrorV12readableNameSSvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let identifier: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 221
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable`.",
            "key.doc.declaration" : "public let identifier: String",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"9\" column=\"16\"><Name>identifier<\/Name><USR>s:5Vapor0A5ErrorV10identifierSSvp<\/USR><Declaration>public let identifier: String<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 9,
            "key.doc.name" : "identifier",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 195,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 232,
            "key.offset" : 228,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP10identifierSSvp"
              }
            ],
            "key.parsed_declaration" : "public let identifier: String",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor0A5ErrorV10identifierSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var reason: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 282
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable`.",
            "key.doc.declaration" : "public var reason: String",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"12\" column=\"16\"><Name>reason<\/Name><USR>s:5Vapor0A5ErrorV6reasonSSvp<\/USR><Declaration>public var reason: String<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 12,
            "key.doc.name" : "reason",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 256,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "reason",
            "key.namelength" : 6,
            "key.nameoffset" : 293,
            "key.offset" : 289,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP6reasonSSvp"
              }
            ],
            "key.parsed_declaration" : "public var reason: String",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor0A5ErrorV6reasonSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var sourceLocation: <Type usr=\"s:9Debugging14SourceLocationV\">SourceLocation<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 339
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable`.",
            "key.doc.declaration" : "public var sourceLocation: Debugging.SourceLocation?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"15\" column=\"16\"><Name>sourceLocation<\/Name><USR>s:5Vapor0A5ErrorV14sourceLocation9Debugging06SourceD0VSgvp<\/USR><Declaration>public var sourceLocation: Debugging.SourceLocation?<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 15,
            "key.doc.name" : "sourceLocation",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 313,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sourceLocation<\/decl.name>: <decl.var.type><ref.struct usr=\"s:9Debugging14SourceLocationV\">SourceLocation<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 35,
            "key.name" : "sourceLocation",
            "key.namelength" : 14,
            "key.nameoffset" : 350,
            "key.offset" : 346,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP14sourceLocationAA06SourceD0VSgvp"
              }
            ],
            "key.parsed_declaration" : "public var sourceLocation: SourceLocation?",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "SourceLocation?",
            "key.typeusr" : "$S9Debugging14SourceLocationVSgD",
            "key.usr" : "s:5Vapor0A5ErrorV14sourceLocation9Debugging06SourceD0VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var stackTrace: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 413
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable`.",
            "key.doc.declaration" : "public var stackTrace: [String]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"18\" column=\"16\"><Name>stackTrace<\/Name><USR>s:5Vapor0A5ErrorV10stackTraceSaySSGvp<\/USR><Declaration>public var stackTrace: [String]<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "stackTrace",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 387,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>stackTrace<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "stackTrace",
            "key.namelength" : 10,
            "key.nameoffset" : 424,
            "key.offset" : 420,
            "key.parsed_declaration" : "public var stackTrace: [String]",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[String]",
            "key.typeusr" : "$SSaySSGD",
            "key.usr" : "s:5Vapor0A5ErrorV10stackTraceSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var suggestedFixes: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 476
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable`.",
            "key.doc.declaration" : "public var suggestedFixes: [String]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"21\" column=\"16\"><Name>suggestedFixes<\/Name><USR>s:5Vapor0A5ErrorV14suggestedFixesSaySSGvp<\/USR><Declaration>public var suggestedFixes: [String]<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 21,
            "key.doc.name" : "suggestedFixes",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 450,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>suggestedFixes<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "suggestedFixes",
            "key.namelength" : 14,
            "key.nameoffset" : 487,
            "key.offset" : 483,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP14suggestedFixesSaySSGvp"
              }
            ],
            "key.parsed_declaration" : "public var suggestedFixes: [String]",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[String]",
            "key.typeusr" : "$SSaySSGD",
            "key.usr" : "s:5Vapor0A5ErrorV14suggestedFixesSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var possibleCauses: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 543
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Debuggable`.",
            "key.doc.declaration" : "public var possibleCauses: [String]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"24\" column=\"16\"><Name>possibleCauses<\/Name><USR>s:5Vapor0A5ErrorV14possibleCausesSaySSGvp<\/USR><Declaration>public var possibleCauses: [String]<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Debuggable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 24,
            "key.doc.name" : "possibleCauses",
            "key.doc.type" : "Other",
            "key.doclength" : 22,
            "key.docoffset" : 517,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>possibleCauses<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "possibleCauses",
            "key.namelength" : 14,
            "key.nameoffset" : 554,
            "key.offset" : 550,
            "key.overrides" : [
              {
                "key.usr" : "s:9Debugging10DebuggableP14possibleCausesSaySSGvp"
              }
            ],
            "key.parsed_declaration" : "public var possibleCauses: [String]",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 24,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[String]",
            "key.typeusr" : "$SSaySSGD",
            "key.usr" : "s:5Vapor0A5ErrorV14possibleCausesSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(identifier: <Type usr=\"s:SS\">String<\/Type>, reason: <Type usr=\"s:SS\">String<\/Type>, suggestedFixes: [<Type usr=\"s:SS\">String<\/Type>] = default, possibleCauses: [<Type usr=\"s:SS\">String<\/Type>] = default, file: <Type usr=\"s:SS\">String<\/Type> = #file, function: <Type usr=\"s:SS\">String<\/Type> = #function, line: <Type usr=\"s:Su\">UInt<\/Type> = #line, column: <Type usr=\"s:Su\">UInt<\/Type> = #column)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 620
              }
            ],
            "key.bodylength" : 332,
            "key.bodyoffset" : 897,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `VaporError`.",
            "key.doc.declaration" : "public init(identifier: String, reason: String, suggestedFixes: [String] = default, possibleCauses: [String] = default, file: String = #file, function: String = #function, line: UInt = #line, column: UInt = #column)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"27\" column=\"12\"><Name>init(identifier:reason:suggestedFixes:possibleCauses:file:function:line:column:)<\/Name><USR>s:5Vapor0A5ErrorV10identifier6reason14suggestedFixes14possibleCauses4file8function4line6columnACSS_SSSaySSGALS2SS2utcfc<\/USR><Declaration>public init(identifier: String, reason: String, suggestedFixes: [String] = default, possibleCauses: [String] = default, file: String = #file, function: String = #function, line: UInt = #line, column: UInt = #column)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>VaporError<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 27,
            "key.doc.name" : "init(identifier:reason:suggestedFixes:possibleCauses:file:function:line:column:)",
            "key.doc.type" : "Function",
            "key.doclength" : 32,
            "key.docoffset" : 584,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifier<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reason<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>suggestedFixes<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>possibleCauses<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>function<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#function<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>column<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#column<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 603,
            "key.name" : "init(identifier:reason:suggestedFixes:possibleCauses:file:function:line:column:)",
            "key.namelength" : 268,
            "key.nameoffset" : 627,
            "key.offset" : 627,
            "key.parsed_declaration" : "public init(\n    identifier: String,\n    reason: String,\n    suggestedFixes: [String] = [],\n    possibleCauses: [String] = [],\n    file: String = #file,\n    function: String = #function,\n    line: UInt = #line,\n    column: UInt = #column\n)",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 27,
            "key.substructure" : [

            ],
            "key.typename" : "(VaporError.Type) -> (String, String, [String], [String], String, String, UInt, UInt) -> VaporError",
            "key.typeusr" : "$S10identifier6reason14suggestedFixes14possibleCauses4file8function4line6column5Vapor0K5ErrorVSS_SSSaySSGALS2SS2utcD",
            "key.usr" : "s:5Vapor0A5ErrorV10identifier6reason14suggestedFixes14possibleCauses4file8function4line6columnACSS_SSSaySSGALS2SS2utcfc"
          }
        ],
        "key.typename" : "VaporError.Type",
        "key.typeusr" : "$S5Vapor0A5ErrorVmD",
        "key.usr" : "s:5Vapor0A5ErrorV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 14,
        "key.name" : "MARK: Internal",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1237
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func DEBUG(_ string: @autoclosure () -&gt; <Type usr=\"s:SS\">String<\/Type>, file: <Type usr=\"s:s12StaticStringV\">StaticString<\/Type> = #file, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
        "key.bodylength" : 129,
        "key.bodyoffset" : 1378,
        "key.doc.column" : 6,
        "key.doc.comment" : "For printing debug info.",
        "key.doc.declaration" : "func DEBUG(_ string: @autoclosure () -> String, file: StaticString = #file, line: Int = #line)",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"49\" column=\"6\"><Name>DEBUG(_:file:line:)<\/Name><USR>s:5Vapor5DEBUG_4file4lineySSyXK_s12StaticStringVSitF<\/USR><Declaration>func DEBUG(_ string: @autoclosure () -&gt; String, file: StaticString = #file, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>For printing debug info.<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 49,
        "key.doc.name" : "DEBUG(_:file:line:)",
        "key.doc.type" : "Function",
        "key.doclength" : 29,
        "key.docoffset" : 1253,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>DEBUG<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>string<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@autoclosure<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s12StaticStringV\">StaticString<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 226,
        "key.name" : "DEBUG(_:file:line:)",
        "key.namelength" : 89,
        "key.nameoffset" : 1287,
        "key.offset" : 1282,
        "key.parsed_declaration" : "func DEBUG(_ string: @autoclosure () -> String, file: StaticString = #file, line: Int = #line)",
        "key.parsed_scope.end" : 53,
        "key.parsed_scope.start" : 49,
        "key.substructure" : [

        ],
        "key.typename" : "(@autoclosure () -> String, StaticString, Int) -> ()",
        "key.typeusr" : "$S_4file4lineySSyXK_s12StaticStringVSitcD",
        "key.usr" : "s:5Vapor5DEBUG_4file4lineySSyXK_s12StaticStringVSitF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func ERROR(_ message: <Type usr=\"s:SS\">String<\/Type>, file: <Type usr=\"s:s12StaticStringV\">StaticString<\/Type> = #file, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
        "key.bodylength" : 99,
        "key.bodyoffset" : 1617,
        "key.doc.column" : 6,
        "key.doc.comment" : "For printing error info.",
        "key.doc.declaration" : "func ERROR(_ message: String, file: StaticString = #file, line: Int = #line)",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"56\" column=\"6\"><Name>ERROR(_:file:line:)<\/Name><USR>s:5Vapor5ERROR_4file4lineySS_s12StaticStringVSitF<\/USR><Declaration>func ERROR(_ message: String, file: StaticString = #file, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>For printing error info.<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 56,
        "key.doc.name" : "ERROR(_:file:line:)",
        "key.doc.type" : "Function",
        "key.doclength" : 29,
        "key.docoffset" : 1510,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>ERROR<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>message<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s12StaticStringV\">StaticString<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 178,
        "key.name" : "ERROR(_:file:line:)",
        "key.namelength" : 71,
        "key.nameoffset" : 1544,
        "key.offset" : 1539,
        "key.parsed_declaration" : "func ERROR(_ message: String, file: StaticString = #file, line: Int = #line)",
        "key.parsed_scope.end" : 58,
        "key.parsed_scope.start" : 56,
        "key.substructure" : [

        ],
        "key.typename" : "(String, StaticString, Int) -> ()",
        "key.typeusr" : "$S_4file4lineySS_s12StaticStringVSitcD",
        "key.usr" : "s:5Vapor5ERROR_4file4lineySS_s12StaticStringVSitF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>func WARNING(_ message: <Type usr=\"s:SS\">String<\/Type>, file: <Type usr=\"s:s12StaticStringV\">StaticString<\/Type> = #file, line: <Type usr=\"s:Si\">Int<\/Type> = #line)<\/Declaration>",
        "key.bodylength" : 101,
        "key.bodyoffset" : 1830,
        "key.doc.column" : 6,
        "key.doc.comment" : "For printing warning info.",
        "key.doc.declaration" : "func WARNING(_ message: String, file: StaticString = #file, line: Int = #line)",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"61\" column=\"6\"><Name>WARNING(_:file:line:)<\/Name><USR>s:5Vapor7WARNING_4file4lineySS_s12StaticStringVSitF<\/USR><Declaration>func WARNING(_ message: String, file: StaticString = #file, line: Int = #line)<\/Declaration><CommentParts><Abstract><Para>For printing warning info.<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 61,
        "key.doc.name" : "WARNING(_:file:line:)",
        "key.doc.type" : "Function",
        "key.doclength" : 31,
        "key.docoffset" : 1719,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>WARNING<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>message<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s12StaticStringV\">StaticString<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#file<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>line<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>#line<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 182,
        "key.name" : "WARNING(_:file:line:)",
        "key.namelength" : 73,
        "key.nameoffset" : 1755,
        "key.offset" : 1750,
        "key.parsed_declaration" : "func WARNING(_ message: String, file: StaticString = #file, line: Int = #line)",
        "key.parsed_scope.end" : 63,
        "key.parsed_scope.start" : 61,
        "key.substructure" : [

        ],
        "key.typename" : "(String, StaticString, Int) -> ()",
        "key.typeusr" : "$S_4file4lineySS_s12StaticStringVSitcD",
        "key.usr" : "s:5Vapor7WARNING_4file4lineySS_s12StaticStringVSitF"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>internal func debugOnly(_ body: () -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.internal",
            "key.length" : 8,
            "key.offset" : 1988
          }
        ],
        "key.bodylength" : 39,
        "key.bodyoffset" : 2033,
        "key.doc.column" : 15,
        "key.doc.comment" : "Body will only be included in non-release builds.",
        "key.doc.declaration" : "internal func debugOnly(_ body: () -> Void)",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift\" line=\"66\" column=\"15\"><Name>debugOnly(_:)<\/Name><USR>s:5Vapor9debugOnlyyyyyXEF<\/USR><Declaration>internal func debugOnly(_ body: () -&gt; Void)<\/Declaration><CommentParts><Abstract><Para>Body will only be included in non-release builds.<\/Para><\/Abstract><\/CommentParts><\/Function>",
        "key.doc.line" : 66,
        "key.doc.name" : "debugOnly(_:)",
        "key.doc.type" : "Function",
        "key.doclength" : 54,
        "key.docoffset" : 1934,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Error\/Error.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>debugOnly<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 76,
        "key.name" : "debugOnly(_:)",
        "key.namelength" : 29,
        "key.nameoffset" : 2002,
        "key.offset" : 1997,
        "key.parsed_declaration" : "internal func debugOnly(_ body: () -> Void)",
        "key.parsed_scope.end" : 68,
        "key.parsed_scope.start" : 66,
        "key.substructure" : [

        ],
        "key.typename" : "(() -> ()) -> ()",
        "key.typeusr" : "$SyyyyXEcD",
        "key.usr" : "s:5Vapor9debugOnlyyyyyXEF"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Logging\/Logger+LogError.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1763,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>protocol Logger<\/Declaration>",
        "key.bodylength" : 1743,
        "key.bodyoffset" : 18,
        "key.doc.declaration" : "protocol Logger",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The above code yields:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Logger<\/Name><USR>s:7Logging6LoggerP<\/USR><Declaration>protocol Logger<\/Declaration><CommentParts><Abstract><Para>Capable of logging messages.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[logger.info(\"This is an informational log\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above code yields:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[[ INFO ] This is an informational log (\/path\/to\/file.swift:42)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Logger",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Logger<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1762,
        "key.modulename" : "Logging",
        "key.name" : "Logger",
        "key.namelength" : 6,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func report(error e: <Type usr=\"s:s5ErrorP\">Error<\/Type>, verbose: <Type usr=\"s:Sb\">Bool<\/Type> = default)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 426
              }
            ],
            "key.bodylength" : 1275,
            "key.bodyoffset" : 484,
            "key.doc.column" : 17,
            "key.doc.comment" : "Reports an `Error` to this `Logger`, first checking if it is `Debuggable`\nfor improved debug info.\n\n- parameters:\n    - error: `Error` to log.\n    - verbose: If `true`, extra lines of debug information will be printed containing\n               things like suggested fixes, possible causes, or other info.\n               Defaults to `true`.",
            "key.doc.declaration" : "public func report(error e: Error, verbose: Bool = default)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Logging\/Logger+LogError.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Logging\/Logger+LogError.swift\" line=\"10\" column=\"17\"><Name>report(error:verbose:)<\/Name><USR>s:7Logging6LoggerP5VaporE6report5error7verboseys5Error_p_SbtF<\/USR><Declaration>public func report(error e: Error, verbose: Bool = default)<\/Declaration><CommentParts><Abstract><Para>Reports an <codeVoice>Error<\/codeVoice> to this <codeVoice>Logger<\/codeVoice>, first checking if it is <codeVoice>Debuggable<\/codeVoice> for improved debug info.<\/Para><\/Abstract><Parameters><Parameter><Name>error<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Error<\/codeVoice> to log.<\/Para><\/Discussion><\/Parameter><Parameter><Name>verbose<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>If <codeVoice>true<\/codeVoice>, extra lines of debug information will be printed containing things like suggested fixes, possible causes, or other info. Defaults to <codeVoice>true<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 10,
            "key.doc.name" : "report(error:verbose:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Error` to log."
                  }
                ],
                "name" : "error"
              },
              {
                "discussion" : [
                  {
                    "Para" : "If `true`, extra lines of debug information will be printed containing things like suggested fixes, possible causes, or other info. Defaults to `true`."
                  }
                ],
                "name" : "verbose"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 399,
            "key.docoffset" : 23,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Logging\/Logger+LogError.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>report<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>error<\/decl.var.parameter.argument_label> <decl.var.parameter.name>e<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>verbose<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1327,
            "key.name" : "report(error:verbose:)",
            "key.namelength" : 44,
            "key.nameoffset" : 438,
            "key.offset" : 433,
            "key.parsed_declaration" : "public func report(error e: Error, verbose: Bool = true)",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 10,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Logger> (Self) -> (Error, Bool) -> ()",
            "key.typeusr" : "$S5error7verboseys5Error_p_SbtcD",
            "key.usr" : "s:7Logging6LoggerP5VaporE6report5error7verboseys5Error_p_SbtF"
          }
        ],
        "key.typename" : "Logger.Protocol",
        "key.typeusr" : "$S7Logging6Logger_pmD",
        "key.usr" : "s:7Logging6LoggerP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 7317,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class CORSMiddleware : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 357
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 350
          }
        ],
        "key.bodylength" : 6669,
        "key.bodyoffset" : 397,
        "key.doc.column" : 20,
        "key.doc.comment" : "Middleware that adds support for CORS settings in request responses.\nFor configuration of this middleware please use the `CORSMiddleware.Configuration` object.\n\n- note: Make sure this middleware is inserted before all your error\/abort middlewares,\n        so that even the failed request responses contain proper CORS information.",
        "key.doc.declaration" : "public final class CORSMiddleware : Middleware",
        "key.doc.discussion" : [
          {
            "Note" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"6\" column=\"20\"><Name>CORSMiddleware<\/Name><USR>s:5Vapor14CORSMiddlewareC<\/USR><Declaration>public final class CORSMiddleware : Middleware<\/Declaration><CommentParts><Abstract><Para>Middleware that adds support for CORS settings in request responses. For configuration of this middleware please use the <codeVoice>CORSMiddleware.Configuration<\/codeVoice> object.<\/Para><\/Abstract><Discussion><Note><Para>Make sure this middleware is inserted before all your error\/abort middlewares, so that even the failed request responses contain proper CORS information.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 6,
        "key.doc.name" : "CORSMiddleware",
        "key.doc.type" : "Class",
        "key.doclength" : 350,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 385
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>CORSMiddleware<\/decl.name> : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Middleware"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 6704,
        "key.name" : "CORSMiddleware",
        "key.namelength" : 14,
        "key.nameoffset" : 369,
        "key.offset" : 363,
        "key.parsed_declaration" : "public final class CORSMiddleware: Middleware",
        "key.parsed_scope.end" : 150,
        "key.parsed_scope.start" : 6,
        "key.runtime_name" : "_TtC4main14CORSMiddleware",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum <Type usr=\"s:5Vapor14CORSMiddlewareC\">CORSMiddleware<\/Type>.AllowOriginSetting<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 714
              }
            ],
            "key.bodylength" : 1055,
            "key.bodyoffset" : 746,
            "key.doc.column" : 17,
            "key.doc.comment" : "Option for the allow origin header in responses for CORS requests.\n\n- none: Disallows any origin.\n- originBased: Uses value of the origin header in the request.\n- all: Uses wildcard to allow any origin.\n- custom: Uses custom string provided as an associated value.",
            "key.doc.declaration" : "public enum Vapor.CORSMiddleware.AllowOriginSetting",
            "key.doc.discussion" : [
              {
                "List-Bullet" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"13\" column=\"17\"><Name>AllowOriginSetting<\/Name><USR>s:5Vapor14CORSMiddlewareC18AllowOriginSettingO<\/USR><Declaration>public enum Vapor.CORSMiddleware.AllowOriginSetting<\/Declaration><CommentParts><Abstract><Para>Option for the allow origin header in responses for CORS requests.<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>none: Disallows any origin.<\/Para><\/Item><Item><Para>originBased: Uses value of the origin header in the request.<\/Para><\/Item><Item><Para>all: Uses wildcard to allow any origin.<\/Para><\/Item><Item><Para>custom: Uses custom string provided as an associated value.<\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 13,
            "key.doc.name" : "AllowOriginSetting",
            "key.doc.type" : "Other",
            "key.doclength" : 308,
            "key.docoffset" : 402,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <ref.class usr=\"s:5Vapor14CORSMiddlewareC\">CORSMiddleware<\/ref.class>.<decl.name>AllowOriginSetting<\/decl.name><\/decl.enum>",
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 1081,
            "key.name" : "AllowOriginSetting",
            "key.namelength" : 18,
            "key.nameoffset" : 726,
            "key.offset" : 721,
            "key.parsed_declaration" : "public enum AllowOriginSetting",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 13,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 788,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case none<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Disallow any origin.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"15\" column=\"14\"><Name>none<\/Name><USR>s:5Vapor14CORSMiddlewareC18AllowOriginSettingO4noneyA2EmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Disallow any origin.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 15,
                    "key.doc.name" : "none",
                    "key.doc.type" : "Other",
                    "key.doclength" : 25,
                    "key.docoffset" : 755,
                    "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>none<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "none",
                    "key.namelength" : 4,
                    "key.nameoffset" : 793,
                    "key.offset" : 793,
                    "key.parsed_declaration" : "case none",
                    "key.parsed_scope.end" : 15,
                    "key.parsed_scope.start" : 15,
                    "key.typename" : "(CORSMiddleware.AllowOriginSetting.Type) -> CORSMiddleware.AllowOriginSetting",
                    "key.typeusr" : "$Sy5Vapor14CORSMiddlewareC18AllowOriginSettingOAEmcD",
                    "key.usr" : "s:5Vapor14CORSMiddlewareC18AllowOriginSettingO4noneyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 16,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 867,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case originBased<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Uses value of the origin header in the request.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"18\" column=\"14\"><Name>originBased<\/Name><USR>s:5Vapor14CORSMiddlewareC18AllowOriginSettingO11originBasedyA2EmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Uses value of the origin header in the request.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 18,
                    "key.doc.name" : "originBased",
                    "key.doc.type" : "Other",
                    "key.doclength" : 52,
                    "key.docoffset" : 807,
                    "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>originBased<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 11,
                    "key.name" : "originBased",
                    "key.namelength" : 11,
                    "key.nameoffset" : 872,
                    "key.offset" : 872,
                    "key.parsed_declaration" : "case originBased",
                    "key.parsed_scope.end" : 18,
                    "key.parsed_scope.start" : 18,
                    "key.typename" : "(CORSMiddleware.AllowOriginSetting.Type) -> CORSMiddleware.AllowOriginSetting",
                    "key.typeusr" : "$Sy5Vapor14CORSMiddlewareC18AllowOriginSettingOAEmcD",
                    "key.usr" : "s:5Vapor14CORSMiddlewareC18AllowOriginSettingO11originBasedyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 8,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 940,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case all<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Uses wildcard to allow any origin.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"21\" column=\"14\"><Name>all<\/Name><USR>s:5Vapor14CORSMiddlewareC18AllowOriginSettingO3allyA2EmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Uses wildcard to allow any origin.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 21,
                    "key.doc.name" : "all",
                    "key.doc.type" : "Other",
                    "key.doclength" : 39,
                    "key.docoffset" : 893,
                    "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>all<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 3,
                    "key.name" : "all",
                    "key.namelength" : 3,
                    "key.nameoffset" : 945,
                    "key.offset" : 945,
                    "key.parsed_declaration" : "case all",
                    "key.parsed_scope.end" : 21,
                    "key.parsed_scope.start" : 21,
                    "key.typename" : "(CORSMiddleware.AllowOriginSetting.Type) -> CORSMiddleware.AllowOriginSetting",
                    "key.typeusr" : "$Sy5Vapor14CORSMiddlewareC18AllowOriginSettingOAEmcD",
                    "key.usr" : "s:5Vapor14CORSMiddlewareC18AllowOriginSettingO3allyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 19,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 1022,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.internal",
                    "key.annotated_decl" : "<Declaration>case custom(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                    "key.doc.column" : 14,
                    "key.doc.comment" : "Uses custom string provided as an associated value.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"24\" column=\"14\"><Name>custom(_:)<\/Name><USR>s:5Vapor14CORSMiddlewareC18AllowOriginSettingO6customyAESScAEmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Uses custom string provided as an associated value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 24,
                    "key.doc.name" : "custom(_:)",
                    "key.doc.type" : "Other",
                    "key.doclength" : 56,
                    "key.docoffset" : 958,
                    "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>custom<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 14,
                    "key.name" : "custom(_:)",
                    "key.namelength" : 14,
                    "key.nameoffset" : 1027,
                    "key.offset" : 1027,
                    "key.parsed_declaration" : "case custom(String)",
                    "key.parsed_scope.end" : 24,
                    "key.parsed_scope.start" : 24,
                    "key.typename" : "(CORSMiddleware.AllowOriginSetting.Type) -> (String) -> CORSMiddleware.AllowOriginSetting",
                    "key.typeusr" : "$Sy5Vapor14CORSMiddlewareC18AllowOriginSettingOSScAEmcD",
                    "key.usr" : "s:5Vapor14CORSMiddlewareC18AllowOriginSettingO6customyAESScAEmF"
                  }
                ]
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func header(forRequest request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1306
                  }
                ],
                "key.bodylength" : 430,
                "key.bodyoffset" : 1365,
                "key.doc.column" : 21,
                "key.doc.comment" : "Creates the header string depending on the case of self.\n\n- Parameter request: Request for which the allow origin header should be created.\n- Returns: Header string to be used in response for allowed origin.",
                "key.doc.declaration" : "public func header(forRequest request: Request) -> String",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"30\" column=\"21\"><Name>header(forRequest:)<\/Name><USR>s:5Vapor14CORSMiddlewareC18AllowOriginSettingO6header10forRequestSSAA0H0C_tF<\/USR><Declaration>public func header(forRequest request: Request) -&gt; String<\/Declaration><CommentParts><Abstract><Para>Creates the header string depending on the case of self.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Request for which the allow origin header should be created.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Header string to be used in response for allowed origin.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
                "key.doc.line" : 30,
                "key.doc.name" : "header(forRequest:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Request for which the allow origin header should be created."
                      }
                    ],
                    "name" : "request"
                  }
                ],
                "key.doc.result_discussion" : [
                  {
                    "Para" : "Header string to be used in response for allowed origin."
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 247,
                "key.docoffset" : 1051,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>header<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forRequest<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 483,
                "key.name" : "header(forRequest:)",
                "key.namelength" : 35,
                "key.nameoffset" : 1318,
                "key.offset" : 1313,
                "key.parsed_declaration" : "public func header(forRequest request: Request) -> String",
                "key.parsed_scope.end" : 41,
                "key.parsed_scope.start" : 30,
                "key.substructure" : [

                ],
                "key.typename" : "(CORSMiddleware.AllowOriginSetting) -> (Request) -> String",
                "key.typeusr" : "$S10forRequestSS5Vapor0B0C_tcD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC18AllowOriginSettingO6header10forRequestSSAA0H0C_tF"
              }
            ],
            "key.typename" : "CORSMiddleware.AllowOriginSetting.Type",
            "key.typeusr" : "$S5Vapor14CORSMiddlewareC18AllowOriginSettingOmD",
            "key.usr" : "s:5Vapor14CORSMiddlewareC18AllowOriginSettingO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct <Type usr=\"s:5Vapor14CORSMiddlewareC\">CORSMiddleware<\/Type>.Configuration<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1889
              }
            ],
            "key.bodylength" : 2896,
            "key.bodyoffset" : 1918,
            "key.doc.column" : 19,
            "key.doc.comment" : "Configuration used for populating headers in response for CORS requests.",
            "key.doc.declaration" : "public struct Vapor.CORSMiddleware.Configuration",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"45\" column=\"19\"><Name>Configuration<\/Name><USR>s:5Vapor14CORSMiddlewareC13ConfigurationV<\/USR><Declaration>public struct Vapor.CORSMiddleware.Configuration<\/Declaration><CommentParts><Abstract><Para>Configuration used for populating headers in response for CORS requests.<\/Para><\/Abstract><\/CommentParts><\/Class>",
            "key.doc.line" : 45,
            "key.doc.name" : "Configuration",
            "key.doc.type" : "Class",
            "key.doclength" : 77,
            "key.docoffset" : 1808,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <ref.class usr=\"s:5Vapor14CORSMiddlewareC\">CORSMiddleware<\/ref.class>.<decl.name>Configuration<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 2919,
            "key.name" : "Configuration",
            "key.namelength" : 13,
            "key.nameoffset" : 1903,
            "key.offset" : 1896,
            "key.parsed_declaration" : "public struct Configuration",
            "key.parsed_scope.end" : 102,
            "key.parsed_scope.start" : 45,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static func `default`() -&gt; <Type usr=\"s:5Vapor14CORSMiddlewareC13ConfigurationV\">Configuration<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 2223
                  }
                ],
                "key.bodylength" : 272,
                "key.bodyoffset" : 2272,
                "key.doc.column" : 28,
                "key.doc.comment" : "Default CORS configuration.\n\n- Allow Origin: Based on request's `Origin` value.\n- Allow Methods: `GET`, `POST`, `PUT`, `OPTIONS`, `DELETE`, `PATCH`\n- Allow Headers: `Accept`, `Authorization`, `Content-Type`, `Origin`, `X-Requested-With`",
                "key.doc.declaration" : "public static func `default`() -> Configuration",
                "key.doc.discussion" : [
                  {
                    "List-Bullet" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"51\" column=\"28\"><Name>default()<\/Name><USR>s:5Vapor14CORSMiddlewareC13ConfigurationV7defaultAEyFZ<\/USR><Declaration>public static func `default`() -&gt; Configuration<\/Declaration><CommentParts><Abstract><Para>Default CORS configuration.<\/Para><\/Abstract><Discussion><List-Bullet><Item><Para>Allow Origin: Based on request’s <codeVoice>Origin<\/codeVoice> value.<\/Para><\/Item><Item><Para>Allow Methods: <codeVoice>GET<\/codeVoice>, <codeVoice>POST<\/codeVoice>, <codeVoice>PUT<\/codeVoice>, <codeVoice>OPTIONS<\/codeVoice>, <codeVoice>DELETE<\/codeVoice>, <codeVoice>PATCH<\/codeVoice><\/Para><\/Item><Item><Para>Allow Headers: <codeVoice>Accept<\/codeVoice>, <codeVoice>Authorization<\/codeVoice>, <codeVoice>Content-Type<\/codeVoice>, <codeVoice>Origin<\/codeVoice>, <codeVoice>X-Requested-With<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Function>",
                "key.doc.line" : 51,
                "key.doc.name" : "default()",
                "key.doc.type" : "Function",
                "key.doclength" : 288,
                "key.docoffset" : 1927,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor14CORSMiddlewareC13ConfigurationV\">Configuration<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
                "key.kind" : "source.lang.swift.decl.function.method.static",
                "key.length" : 315,
                "key.name" : "default()",
                "key.namelength" : 11,
                "key.nameoffset" : 2242,
                "key.offset" : 2230,
                "key.parsed_declaration" : "public static func `default`() -> Configuration",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 51,
                "key.substructure" : [

                ],
                "key.typename" : "(CORSMiddleware.Configuration.Type) -> () -> CORSMiddleware.Configuration",
                "key.typeusr" : "$S5Vapor14CORSMiddlewareC13ConfigurationVycD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC13ConfigurationV7defaultAEyFZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let allowedOrigin: <Type usr=\"s:5Vapor14CORSMiddlewareC18AllowOriginSettingO\">AllowOriginSetting<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 2622
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Setting that controls which origin values are allowed.",
                "key.doc.declaration" : "public let allowedOrigin: AllowOriginSetting",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"60\" column=\"20\"><Name>allowedOrigin<\/Name><USR>s:5Vapor14CORSMiddlewareC13ConfigurationV13allowedOriginAC05AllowE7SettingOvp<\/USR><Declaration>public let allowedOrigin: AllowOriginSetting<\/Declaration><CommentParts><Abstract><Para>Setting that controls which origin values are allowed.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 60,
                "key.doc.name" : "allowedOrigin",
                "key.doc.type" : "Other",
                "key.doclength" : 59,
                "key.docoffset" : 2555,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>allowedOrigin<\/decl.name>: <decl.var.type><ref.enum usr=\"s:5Vapor14CORSMiddlewareC18AllowOriginSettingO\">AllowOriginSetting<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 37,
                "key.name" : "allowedOrigin",
                "key.namelength" : 13,
                "key.nameoffset" : 2633,
                "key.offset" : 2629,
                "key.parsed_declaration" : "public let allowedOrigin: AllowOriginSetting",
                "key.parsed_scope.end" : 60,
                "key.parsed_scope.start" : 60,
                "key.typename" : "CORSMiddleware.AllowOriginSetting",
                "key.typeusr" : "$S5Vapor14CORSMiddlewareC18AllowOriginSettingOD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC13ConfigurationV13allowedOriginAC05AllowE7SettingOvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let allowedMethods: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 2767
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Header string containing methods that are allowed for a CORS request response.",
                "key.doc.declaration" : "public let allowedMethods: String",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"63\" column=\"20\"><Name>allowedMethods<\/Name><USR>s:5Vapor14CORSMiddlewareC13ConfigurationV14allowedMethodsSSvp<\/USR><Declaration>public let allowedMethods: String<\/Declaration><CommentParts><Abstract><Para>Header string containing methods that are allowed for a CORS request response.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 63,
                "key.doc.name" : "allowedMethods",
                "key.doc.type" : "Other",
                "key.doclength" : 83,
                "key.docoffset" : 2676,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>allowedMethods<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.name" : "allowedMethods",
                "key.namelength" : 14,
                "key.nameoffset" : 2778,
                "key.offset" : 2774,
                "key.parsed_declaration" : "public let allowedMethods: String",
                "key.parsed_scope.end" : 63,
                "key.parsed_scope.start" : 63,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC13ConfigurationV14allowedMethodsSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let allowedHeaders: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 2904
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Header string containing headers that are allowed in a response for CORS request.",
                "key.doc.declaration" : "public let allowedHeaders: String",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"66\" column=\"20\"><Name>allowedHeaders<\/Name><USR>s:5Vapor14CORSMiddlewareC13ConfigurationV14allowedHeadersSSvp<\/USR><Declaration>public let allowedHeaders: String<\/Declaration><CommentParts><Abstract><Para>Header string containing headers that are allowed in a response for CORS request.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 66,
                "key.doc.name" : "allowedHeaders",
                "key.doc.type" : "Other",
                "key.doclength" : 86,
                "key.docoffset" : 2810,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>allowedHeaders<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.name" : "allowedHeaders",
                "key.namelength" : 14,
                "key.nameoffset" : 2915,
                "key.offset" : 2911,
                "key.parsed_declaration" : "public let allowedHeaders: String",
                "key.parsed_scope.end" : 66,
                "key.parsed_scope.start" : 66,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC13ConfigurationV14allowedHeadersSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let allowCredentials: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3051
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "If set to yes, cookies and other credentials will be sent in the response for CORS request.",
                "key.doc.declaration" : "public let allowCredentials: Bool",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"69\" column=\"20\"><Name>allowCredentials<\/Name><USR>s:5Vapor14CORSMiddlewareC13ConfigurationV16allowCredentialsSbvp<\/USR><Declaration>public let allowCredentials: Bool<\/Declaration><CommentParts><Abstract><Para>If set to yes, cookies and other credentials will be sent in the response for CORS request.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 69,
                "key.doc.name" : "allowCredentials",
                "key.doc.type" : "Other",
                "key.doclength" : 96,
                "key.docoffset" : 2947,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>allowCredentials<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.name" : "allowCredentials",
                "key.namelength" : 16,
                "key.nameoffset" : 3062,
                "key.offset" : 3058,
                "key.parsed_declaration" : "public let allowCredentials: Bool",
                "key.parsed_scope.end" : 69,
                "key.parsed_scope.start" : 69,
                "key.typename" : "Bool",
                "key.typeusr" : "$SSbD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC13ConfigurationV16allowCredentialsSbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let cacheExpiration: <Type usr=\"s:Si\">Int<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3188
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Optionally sets expiration of the cached pre-flight request. Value is in seconds.",
                "key.doc.declaration" : "public let cacheExpiration: Int?",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"72\" column=\"20\"><Name>cacheExpiration<\/Name><USR>s:5Vapor14CORSMiddlewareC13ConfigurationV15cacheExpirationSiSgvp<\/USR><Declaration>public let cacheExpiration: Int?<\/Declaration><CommentParts><Abstract><Para>Optionally sets expiration of the cached pre-flight request. Value is in seconds.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 72,
                "key.doc.name" : "cacheExpiration",
                "key.doc.type" : "Other",
                "key.doclength" : 86,
                "key.docoffset" : 3094,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>cacheExpiration<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 25,
                "key.name" : "cacheExpiration",
                "key.namelength" : 15,
                "key.nameoffset" : 3199,
                "key.offset" : 3195,
                "key.parsed_declaration" : "public let cacheExpiration: Int?",
                "key.parsed_scope.end" : 72,
                "key.parsed_scope.start" : 72,
                "key.typename" : "Int?",
                "key.typeusr" : "$SSiSgD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC13ConfigurationV15cacheExpirationSiSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let exposedHeaders: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3297
                  }
                ],
                "key.doc.column" : 20,
                "key.doc.comment" : "Headers exposed in the response of pre-flight request.",
                "key.doc.declaration" : "public let exposedHeaders: String?",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"75\" column=\"20\"><Name>exposedHeaders<\/Name><USR>s:5Vapor14CORSMiddlewareC13ConfigurationV14exposedHeadersSSSgvp<\/USR><Declaration>public let exposedHeaders: String?<\/Declaration><CommentParts><Abstract><Para>Headers exposed in the response of pre-flight request.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 75,
                "key.doc.name" : "exposedHeaders",
                "key.doc.type" : "Other",
                "key.doclength" : 59,
                "key.docoffset" : 3230,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>exposedHeaders<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 27,
                "key.name" : "exposedHeaders",
                "key.namelength" : 14,
                "key.nameoffset" : 3308,
                "key.offset" : 3304,
                "key.parsed_declaration" : "public let exposedHeaders: String?",
                "key.parsed_scope.end" : 75,
                "key.parsed_scope.start" : 75,
                "key.typename" : "String?",
                "key.typeusr" : "$SSSSgD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC13ConfigurationV14exposedHeadersSSSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(allowedOrigin: <Type usr=\"s:5Vapor14CORSMiddlewareC18AllowOriginSettingO\">AllowOriginSetting<\/Type>, allowedMethods: [<Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type>], allowedHeaders: [<Type usr=\"s:4HTTP14HTTPHeaderNameV\">HTTPHeaderName<\/Type>], allowCredentials: <Type usr=\"s:Sb\">Bool<\/Type> = default, cacheExpiration: <Type usr=\"s:Si\">Int<\/Type>? = default, exposedHeaders: [<Type usr=\"s:SS\">String<\/Type>]? = default)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 4099
                  }
                ],
                "key.bodylength" : 421,
                "key.bodyoffset" : 4387,
                "key.doc.column" : 16,
                "key.doc.comment" : "Instantiate a CORSConfiguration struct that can be used to create a `CORSConfiguration`\nmiddleware for adding support for CORS in your responses.\n\n- parameters:\n  - allowedOrigin: Setting that controls which origin values are allowed.\n  - allowedMethods: Methods that are allowed for a CORS request response.\n  - allowedHeaders: Headers that are allowed in a response for CORS request.\n  - allowCredentials: If cookies and other credentials will be sent in the response.\n  - cacheExpiration: Optionally sets expiration of the cached pre-flight request in seconds.\n  - exposedHeaders: Headers exposed in the response of pre-flight request.",
                "key.doc.declaration" : "public init(allowedOrigin: AllowOriginSetting, allowedMethods: [HTTPMethod], allowedHeaders: [HTTPHeaderName], allowCredentials: Bool = default, cacheExpiration: Int? = default, exposedHeaders: [String]? = default)",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"87\" column=\"16\"><Name>init(allowedOrigin:allowedMethods:allowedHeaders:allowCredentials:cacheExpiration:exposedHeaders:)<\/Name><USR>s:5Vapor14CORSMiddlewareC13ConfigurationV13allowedOrigin0D7Methods0D7Headers16allowCredentials15cacheExpiration07exposedG0AeC05AllowE7SettingO_Say8NIOHTTP110HTTPMethodOGSay4HTTP14HTTPHeaderNameVGSbSiSgSaySSGSgtcfc<\/USR><Declaration>public init(allowedOrigin: AllowOriginSetting, allowedMethods: [HTTPMethod], allowedHeaders: [HTTPHeaderName], allowCredentials: Bool = default, cacheExpiration: Int? = default, exposedHeaders: [String]? = default)<\/Declaration><CommentParts><Abstract><Para>Instantiate a CORSConfiguration struct that can be used to create a <codeVoice>CORSConfiguration<\/codeVoice> middleware for adding support for CORS in your responses.<\/Para><\/Abstract><Parameters><Parameter><Name>allowedOrigin<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Setting that controls which origin values are allowed.<\/Para><\/Discussion><\/Parameter><Parameter><Name>allowedMethods<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Methods that are allowed for a CORS request response.<\/Para><\/Discussion><\/Parameter><Parameter><Name>allowedHeaders<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Headers that are allowed in a response for CORS request.<\/Para><\/Discussion><\/Parameter><Parameter><Name>allowCredentials<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>If cookies and other credentials will be sent in the response.<\/Para><\/Discussion><\/Parameter><Parameter><Name>cacheExpiration<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Optionally sets expiration of the cached pre-flight request in seconds.<\/Para><\/Discussion><\/Parameter><Parameter><Name>exposedHeaders<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Headers exposed in the response of pre-flight request.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
                "key.doc.line" : 87,
                "key.doc.name" : "init(allowedOrigin:allowedMethods:allowedHeaders:allowCredentials:cacheExpiration:exposedHeaders:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "Setting that controls which origin values are allowed."
                      }
                    ],
                    "name" : "allowedOrigin"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Methods that are allowed for a CORS request response."
                      }
                    ],
                    "name" : "allowedMethods"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Headers that are allowed in a response for CORS request."
                      }
                    ],
                    "name" : "allowedHeaders"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "If cookies and other credentials will be sent in the response."
                      }
                    ],
                    "name" : "allowCredentials"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Optionally sets expiration of the cached pre-flight request in seconds."
                      }
                    ],
                    "name" : "cacheExpiration"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "Headers exposed in the response of pre-flight request."
                      }
                    ],
                    "name" : "exposedHeaders"
                  }
                ],
                "key.doc.type" : "Function",
                "key.doclength" : 750,
                "key.docoffset" : 3341,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>allowedOrigin<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:5Vapor14CORSMiddlewareC18AllowOriginSettingO\">AllowOriginSetting<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>allowedMethods<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>allowedHeaders<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:4HTTP14HTTPHeaderNameV\">HTTPHeaderName<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>allowCredentials<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cacheExpiration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>exposedHeaders<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 703,
                "key.name" : "init(allowedOrigin:allowedMethods:allowedHeaders:allowCredentials:cacheExpiration:exposedHeaders:)",
                "key.namelength" : 279,
                "key.nameoffset" : 4106,
                "key.offset" : 4106,
                "key.parsed_declaration" : "public init(\n    allowedOrigin: AllowOriginSetting,\n    allowedMethods: [HTTPMethod],\n    allowedHeaders: [HTTPHeaderName],\n    allowCredentials: Bool = false,\n    cacheExpiration: Int? = 600,\n    exposedHeaders: [String]? = nil\n)",
                "key.parsed_scope.end" : 101,
                "key.parsed_scope.start" : 87,
                "key.substructure" : [

                ],
                "key.typename" : "(CORSMiddleware.Configuration.Type) -> (CORSMiddleware.AllowOriginSetting, [HTTPMethod], [HTTPHeaderName], Bool, Int?, [String]?) -> CORSMiddleware.Configuration",
                "key.typeusr" : "$S13allowedOrigin0A7Methods0A7Headers16allowCredentials15cacheExpiration07exposedD05Vapor14CORSMiddlewareC13ConfigurationVAI05AllowB7SettingO_Say8NIOHTTP110HTTPMethodOGSay4HTTP14HTTPHeaderNameVGSbSiSgSaySSGSgtcD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC13ConfigurationV13allowedOrigin0D7Methods0D7Headers16allowCredentials15cacheExpiration07exposedG0AeC05AllowE7SettingO_Say8NIOHTTP110HTTPMethodOGSay4HTTP14HTTPHeaderNameVGSbSiSgSaySSGSgtcfc"
              }
            ],
            "key.typename" : "CORSMiddleware.Configuration.Type",
            "key.typeusr" : "$S5Vapor14CORSMiddlewareC13ConfigurationVmD",
            "key.usr" : "s:5Vapor14CORSMiddlewareC13ConfigurationV"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let configuration: <Type usr=\"s:5Vapor14CORSMiddlewareC13ConfigurationV\">Configuration<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4902
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Configuration used for populating headers in response for CORS requests.",
            "key.doc.declaration" : "public let configuration: Configuration",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"105\" column=\"16\"><Name>configuration<\/Name><USR>s:5Vapor14CORSMiddlewareC13configurationAC13ConfigurationVvp<\/USR><Declaration>public let configuration: Configuration<\/Declaration><CommentParts><Abstract><Para>Configuration used for populating headers in response for CORS requests.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 105,
            "key.doc.name" : "configuration",
            "key.doc.type" : "Other",
            "key.doclength" : 77,
            "key.docoffset" : 4821,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>configuration<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor14CORSMiddlewareC13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "configuration",
            "key.namelength" : 13,
            "key.nameoffset" : 4913,
            "key.offset" : 4909,
            "key.parsed_declaration" : "public let configuration: Configuration",
            "key.parsed_scope.end" : 105,
            "key.parsed_scope.start" : 105,
            "key.typename" : "CORSMiddleware.Configuration",
            "key.typeusr" : "$S5Vapor14CORSMiddlewareC13ConfigurationVD",
            "key.usr" : "s:5Vapor14CORSMiddlewareC13configurationAC13ConfigurationVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(configuration: <Type usr=\"s:5Vapor14CORSMiddlewareC13ConfigurationV\">Configuration<\/Type> = default)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5180
              }
            ],
            "key.bodylength" : 48,
            "key.bodyoffset" : 5236,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a CORS middleware with the specified configuration.\n\n- parameters:\n    - configuration: Configuration used for populating headers in\n                     response for CORS requests.",
            "key.doc.declaration" : "public init(configuration: Configuration = default)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"112\" column=\"12\"><Name>init(configuration:)<\/Name><USR>s:5Vapor14CORSMiddlewareC13configurationA2C13ConfigurationV_tcfc<\/USR><Declaration>public init(configuration: Configuration = default)<\/Declaration><CommentParts><Abstract><Para>Creates a CORS middleware with the specified configuration.<\/Para><\/Abstract><Parameters><Parameter><Name>configuration<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Configuration used for populating headers in response for CORS requests.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 112,
            "key.doc.name" : "init(configuration:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Configuration used for populating headers in response for CORS requests."
                  }
                ],
                "name" : "configuration"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 225,
            "key.docoffset" : 4951,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:5Vapor14CORSMiddlewareC13ConfigurationV\">Configuration<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 98,
            "key.name" : "init(configuration:)",
            "key.namelength" : 47,
            "key.nameoffset" : 5187,
            "key.offset" : 5187,
            "key.parsed_declaration" : "public init(configuration: Configuration = .default())",
            "key.parsed_scope.end" : 114,
            "key.parsed_scope.start" : 112,
            "key.substructure" : [

            ],
            "key.typename" : "(CORSMiddleware.Type) -> (CORSMiddleware.Configuration) -> CORSMiddleware",
            "key.typeusr" : "$S13configuration5Vapor14CORSMiddlewareCAD13ConfigurationV_tcD",
            "key.usr" : "s:5Vapor14CORSMiddlewareC13configurationA2C13ConfigurationV_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5317
              }
            ],
            "key.bodylength" : 1650,
            "key.bodyoffset" : 5414,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Middleware`.",
            "key.doc.declaration" : "public func respond(to request: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"117\" column=\"17\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Vapor14CORSMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF<\/USR><Declaration>public func respond(to request: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Middleware<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 117,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 22,
            "key.docoffset" : 5291,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1741,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 56,
            "key.nameoffset" : 5329,
            "key.offset" : 5324,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(to request: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 149,
            "key.parsed_scope.start" : 117,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let response: <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>response<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 161,
                "key.name" : "response",
                "key.namelength" : 8,
                "key.nameoffset" : 5746,
                "key.offset" : 5742,
                "key.parsed_declaration" : "let response = request.isPreflight",
                "key.parsed_scope.end" : 125,
                "key.parsed_scope.start" : 125,
                "key.typename" : "EventLoopFuture<Response>",
                "key.typeusr" : "$S3NIO15EventLoopFutureCy5Vapor8ResponseCGD",
                "key.usr" : "s:5Vapor14CORSMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF8responseL_ALvp"
              }
            ],
            "key.typename" : "(CORSMiddleware) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Vapor14CORSMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
          }
        ],
        "key.typename" : "CORSMiddleware.Type",
        "key.typeusr" : "$S5Vapor14CORSMiddlewareCmD",
        "key.usr" : "s:5Vapor14CORSMiddlewareC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 7072
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>public final class Request : <Type usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/Type>, <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>, <Type usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/Type>, <Type usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type>, <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 7087
          }
        ],
        "key.bodylength" : 200,
        "key.bodyoffset" : 7114,
        "key.doc.column" : 20,
        "key.doc.declaration" : "public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible",
        "key.doc.discussion" : [
          {
            "Para" : "Use `Request` to access information about the `HTTPRequest` (`req.http`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also use `Request` to create services you may need while generating a response (`req.make()`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` also carries a `ParametersContainer` for routing. Use `parameters` to fetch parameterized values."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` is `DatabaseConnectable`, meaning you can use it in-place of an actual `DatabaseConnection`. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPRequest`, `Container`, `ParameterContainer`, and `DatabaseConnectable` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"27\" column=\"20\"><Name>Request<\/Name><USR>s:5Vapor7RequestC<\/USR><Declaration>public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible<\/Declaration><CommentParts><Abstract><Para><codeVoice>Request<\/codeVoice> is a service-container wrapper around an <codeVoice>HTTPRequest<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Use <codeVoice>Request<\/codeVoice> to access information about the <codeVoice>HTTPRequest<\/codeVoice> (<codeVoice>req.http<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(req.http.url.path) \/\/ \"\/hello\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also use <codeVoice>Request<\/codeVoice> to create services you may need while generating a response (<codeVoice>req.make()<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let client = try req.make(Client.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(client) \/\/ Client]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[client.get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> also carries a <codeVoice>ParametersContainer<\/codeVoice> for routing. Use <codeVoice>parameters<\/codeVoice> to fetch parameterized values.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"hello\", String.parameter) { req -> String in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let name = try req.parameters.next(String.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> is <codeVoice>DatabaseConnectable<\/codeVoice>, meaning you can use it in-place of an actual <codeVoice>DatabaseConnection<\/codeVoice>. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let users = User.query(on: req).all()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPRequest<\/codeVoice>, <codeVoice>Container<\/codeVoice>, <codeVoice>ParameterContainer<\/codeVoice>, and <codeVoice>DatabaseConnectable<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 27,
        "key.doc.name" : "Request",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Request<\/decl.name> : <ref.protocol usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/ref.protocol>, <ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/ref.protocol>, <ref.typealias usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/ref.typealias>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 220,
        "key.name" : "Request",
        "key.namelength" : 7,
        "key.nameoffset" : 7105,
        "key.offset" : 7095,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>var isPreflight: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 102,
            "key.bodyoffset" : 7210,
            "key.doc.column" : 9,
            "key.doc.comment" : "Returns `true` if the request is a pre-flight CORS request.",
            "key.doc.declaration" : "var isPreflight: Bool { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift\" line=\"156\" column=\"9\"><Name>isPreflight<\/Name><USR>s:5Vapor7RequestC11isPreflight33_3FC5DBF7094B6341EA22171B209710A4LLSbvp<\/USR><Declaration>var isPreflight: Bool { get }<\/Declaration><CommentParts><Abstract><Para>Returns <codeVoice>true<\/codeVoice> if the request is a pre-flight CORS request.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 156,
            "key.doc.name" : "isPreflight",
            "key.doc.type" : "Other",
            "key.doclength" : 64,
            "key.docoffset" : 7119,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/CORSMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isPreflight<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 126,
            "key.name" : "isPreflight",
            "key.namelength" : 11,
            "key.nameoffset" : 7191,
            "key.offset" : 7187,
            "key.parsed_declaration" : "var isPreflight: Bool",
            "key.parsed_scope.end" : 158,
            "key.parsed_scope.start" : 156,
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:5Vapor7RequestC11isPreflight33_3FC5DBF7094B6341EA22171B209710A4LLSbvp"
          }
        ],
        "key.typename" : "Request.Type",
        "key.typeusr" : "$S5Vapor7RequestCmD",
        "key.usr" : "s:5Vapor7RequestC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4509,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class DateMiddleware : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 227
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 220
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 90,
            "key.offset" : 129
          }
        ],
        "key.bodylength" : 3175,
        "key.bodyoffset" : 280,
        "key.doc.column" : 20,
        "key.doc.comment" : "Adds the RFC 1123 date to outgoing `Response`s.\n- warning: `DateMiddleware` is not thread safe.",
        "key.doc.declaration" : "@available(*, deprecated, message: \"Date header is now added automatically by HTTPServer\")\npublic final class DateMiddleware : Middleware, ServiceType",
        "key.doc.discussion" : [
          {
            "Warning" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift\" line=\"6\" column=\"20\"><Name>DateMiddleware<\/Name><USR>s:5Vapor14DateMiddlewareC<\/USR><Declaration>@available(*, deprecated, message: &quot;Date header is now added automatically by HTTPServer&quot;)\npublic final class DateMiddleware : Middleware, ServiceType<\/Declaration><CommentParts><Abstract><Para>Adds the RFC 1123 date to outgoing <codeVoice>Response<\/codeVoice>s.<\/Para><\/Abstract><Discussion><Warning><Para><codeVoice>DateMiddleware<\/codeVoice> is not thread safe.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 6,
        "key.doc.name" : "DateMiddleware",
        "key.doc.type" : "Class",
        "key.doclength" : 104,
        "key.docoffset" : 25,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 255
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 267
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>DateMiddleware<\/decl.name> : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Middleware"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 3223,
        "key.name" : "DateMiddleware",
        "key.namelength" : 14,
        "key.nameoffset" : 239,
        "key.offset" : 233,
        "key.parsed_declaration" : "public final class DateMiddleware: Middleware, ServiceType",
        "key.parsed_scope.end" : 92,
        "key.parsed_scope.start" : 6,
        "key.runtime_name" : "_TtC4main14DateMiddleware",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor14DateMiddlewareC\">DateMiddleware<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 312
              }
            ],
            "key.bodylength" : 41,
            "key.bodyoffset" : 395,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for container: Container) throws -> DateMiddleware",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift\" line=\"8\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor14DateMiddlewareC11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for container: Container) throws -&gt; DateMiddleware<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 285,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor14DateMiddlewareC\">DateMiddleware<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 118,
            "key.name" : "makeService(for:)",
            "key.namelength" : 37,
            "key.nameoffset" : 331,
            "key.offset" : 319,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for container: Container) throws -> DateMiddleware",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [

            ],
            "key.typename" : "(DateMiddleware.Type) -> (Container) throws -> DateMiddleware",
            "key.typeusr" : "$S3for5Vapor14DateMiddlewareC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor14DateMiddlewareC11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var cachedTimestamp: (timestamp: <Type usr=\"s:SS\">String<\/Type>, createdAt: <Type usr=\"s:Si\">Int<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 479
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Currently cached timestamp.",
            "key.doc.declaration" : "private var cachedTimestamp: (timestamp: String, createdAt: Int)?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift\" line=\"13\" column=\"17\"><Name>cachedTimestamp<\/Name><USR>s:5Vapor14DateMiddlewareC15cachedTimestamp33_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSS9timestamp_Si9createdAttSgvp<\/USR><Declaration>private var cachedTimestamp: (timestamp: String, createdAt: Int)?<\/Declaration><CommentParts><Abstract><Para>Currently cached timestamp.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 13,
            "key.doc.name" : "cachedTimestamp",
            "key.doc.type" : "Other",
            "key.doclength" : 32,
            "key.docoffset" : 443,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>cachedTimestamp<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.argument_label>timestamp<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.argument_label>createdAt<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 57,
            "key.name" : "cachedTimestamp",
            "key.namelength" : 15,
            "key.nameoffset" : 491,
            "key.offset" : 487,
            "key.parsed_declaration" : "private var cachedTimestamp: (timestamp: String, createdAt: Int)?",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "(timestamp: String, createdAt: Int)?",
            "key.typeusr" : "$SSS9timestamp_Si9createdAttSgD",
            "key.usr" : "s:5Vapor14DateMiddlewareC15cachedTimestamp33_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSS9timestamp_Si9createdAttSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 610
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The event loop this `DateMiddleware` is running on.",
            "key.doc.declaration" : "private let eventLoop: EventLoop",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift\" line=\"16\" column=\"17\"><Name>eventLoop<\/Name><USR>s:5Vapor14DateMiddlewareC9eventLoop33_F8BB4F5CF8ED869A76E9D982DE56B8B7LL3NIO05EventE0_pvp<\/USR><Declaration>private let eventLoop: EventLoop<\/Declaration><CommentParts><Abstract><Para>The event loop this <codeVoice>DateMiddleware<\/codeVoice> is running on.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 16,
            "key.doc.name" : "eventLoop",
            "key.doc.type" : "Other",
            "key.doclength" : 56,
            "key.docoffset" : 550,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>eventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "eventLoop",
            "key.namelength" : 9,
            "key.nameoffset" : 622,
            "key.offset" : 618,
            "key.parsed_declaration" : "private let eventLoop: EventLoop",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.typename" : "EventLoop",
            "key.typeusr" : "$S3NIO9EventLoop_pD",
            "key.usr" : "s:5Vapor14DateMiddlewareC9eventLoop33_F8BB4F5CF8ED869A76E9D982DE56B8B7LL3NIO05EventE0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private init(on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 688
              }
            ],
            "key.bodylength" : 47,
            "key.bodyoffset" : 721,
            "key.doc.column" : 13,
            "key.doc.comment" : "Creates a new `DateMiddleware`.",
            "key.doc.declaration" : "private init(on worker: Worker)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift\" line=\"19\" column=\"13\"><Name>init(on:)<\/Name><USR>s:5Vapor14DateMiddlewareC2onAC3NIO14EventLoopGroup_p_tc33_F8BB4F5CF8ED869A76E9D982DE56B8B7Llfc<\/USR><Declaration>private init(on worker: Worker)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>DateMiddleware<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 19,
            "key.doc.name" : "init(on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 36,
            "key.docoffset" : 648,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 73,
            "key.name" : "init(on:)",
            "key.namelength" : 23,
            "key.nameoffset" : 696,
            "key.offset" : 696,
            "key.parsed_declaration" : "private init(on worker: Worker)",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 19,
            "key.substructure" : [

            ],
            "key.typename" : "(DateMiddleware.Type) -> (EventLoopGroup) -> DateMiddleware",
            "key.typeusr" : "$S2on5Vapor14DateMiddlewareC3NIO14EventLoopGroup_p_tcD",
            "key.usr" : "s:5Vapor14DateMiddlewareC2onAC3NIO14EventLoopGroup_p_tc33_F8BB4F5CF8ED869A76E9D982DE56B8B7Llfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 801
              }
            ],
            "key.bodylength" : 289,
            "key.bodyoffset" : 894,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Middleware`.",
            "key.doc.declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift\" line=\"24\" column=\"17\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Vapor14DateMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF<\/USR><Declaration>public func respond(to req: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Middleware<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 24,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 22,
            "key.docoffset" : 775,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 376,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 52,
            "key.nameoffset" : 813,
            "key.offset" : 808,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 24,
            "key.substructure" : [

            ],
            "key.typename" : "(DateMiddleware) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Vapor14DateMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func getDate() -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1237
              }
            ],
            "key.bodylength" : 2182,
            "key.bodyoffset" : 1271,
            "key.doc.column" : 18,
            "key.doc.comment" : "Gets the current RFC 1123 date string.",
            "key.doc.declaration" : "private func getDate() -> String",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift\" line=\"33\" column=\"18\"><Name>getDate()<\/Name><USR>s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF<\/USR><Declaration>private func getDate() -&gt; String<\/Declaration><CommentParts><Abstract><Para>Gets the current RFC 1123 date string.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 33,
            "key.doc.name" : "getDate()",
            "key.doc.type" : "Function",
            "key.doclength" : 43,
            "key.docoffset" : 1190,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getDate<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 2209,
            "key.name" : "getDate()",
            "key.namelength" : 9,
            "key.nameoffset" : 1250,
            "key.offset" : 1245,
            "key.parsed_declaration" : "private func getDate() -> String",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 33,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var date: <Type usr=\"c:@T@time_t\">time_t<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>date<\/decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@time_t\">time_t<\/ref.typealias><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 37,
                "key.name" : "date",
                "key.namelength" : 4,
                "key.nameoffset" : 1316,
                "key.offset" : 1312,
                "key.parsed_declaration" : "var date = COperatingSystem.time(nil)",
                "key.parsed_scope.end" : 35,
                "key.parsed_scope.start" : 35,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF4dateL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let key: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 29,
                "key.name" : "key",
                "key.namelength" : 3,
                "key.nameoffset" : 1645,
                "key.offset" : 1641,
                "key.parsed_declaration" : "let key = date \/ secondsInDay",
                "key.parsed_scope.end" : 44,
                "key.parsed_scope.start" : 44,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF3keyL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let dateComponents: <Type usr=\"c:@S@tm\">tm<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>dateComponents<\/decl.name>: <decl.var.type><ref.struct usr=\"c:@S@tm\">tm<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 22,
                "key.name" : "dateComponents",
                "key.namelength" : 14,
                "key.nameoffset" : 1723,
                "key.offset" : 1719,
                "key.parsed_declaration" : "let dateComponents: tm",
                "key.parsed_scope.end" : 47,
                "key.parsed_scope.start" : 47,
                "key.typename" : "tm",
                "key.typeusr" : "$SSo2tmVD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF14dateComponentsL_So2tmVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let year: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>year<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 58,
                "key.name" : "year",
                "key.namelength" : 4,
                "key.nameoffset" : 2068,
                "key.offset" : 2064,
                "key.parsed_declaration" : "let year: Int = numericCast(dateComponents.tm_year) + 1900 \/\/ years since 1900",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF4yearL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let month: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>month<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 51,
                "key.name" : "month",
                "key.namelength" : 5,
                "key.nameoffset" : 2155,
                "key.offset" : 2151,
                "key.parsed_declaration" : "let month: Int = numericCast(dateComponents.tm_mon) \/\/ months since January [0-11]",
                "key.parsed_scope.end" : 58,
                "key.parsed_scope.start" : 58,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF5monthL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let monthDay: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>monthDay<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 55,
                "key.name" : "monthDay",
                "key.namelength" : 8,
                "key.nameoffset" : 2246,
                "key.offset" : 2242,
                "key.parsed_declaration" : "let monthDay: Int = numericCast(dateComponents.tm_mday) \/\/ day of the month [1-31]",
                "key.parsed_scope.end" : 59,
                "key.parsed_scope.start" : 59,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF8monthDayL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let weekDay: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>weekDay<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 54,
                "key.name" : "weekDay",
                "key.namelength" : 7,
                "key.nameoffset" : 2337,
                "key.offset" : 2333,
                "key.parsed_declaration" : "let weekDay: Int = numericCast(dateComponents.tm_wday) \/\/ days since Sunday [0-6]",
                "key.parsed_scope.end" : 60,
                "key.parsed_scope.start" : 60,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF7weekDayL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let time: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>time<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 35,
                "key.name" : "time",
                "key.namelength" : 4,
                "key.nameoffset" : 2467,
                "key.offset" : 2463,
                "key.parsed_declaration" : "let time: Int = date % secondsInDay",
                "key.parsed_scope.end" : 63,
                "key.parsed_scope.start" : 63,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"c:@F@time\">time(_:)<\/RelatedName>"
                  }
                ],
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF4timeL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let hours: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>hours<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 41,
                "key.name" : "hours",
                "key.namelength" : 5,
                "key.nameoffset" : 2511,
                "key.offset" : 2507,
                "key.parsed_declaration" : "let hours: Int = numericCast(time \/ 3600)",
                "key.parsed_scope.end" : 64,
                "key.parsed_scope.start" : 64,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF5hoursL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let minutes: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>minutes<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 48,
                "key.name" : "minutes",
                "key.namelength" : 7,
                "key.nameoffset" : 2561,
                "key.offset" : 2557,
                "key.parsed_declaration" : "let minutes: Int = numericCast((time \/ 60) % 60)",
                "key.parsed_scope.end" : 65,
                "key.parsed_scope.start" : 65,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF7minutesL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let seconds: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>seconds<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 41,
                "key.name" : "seconds",
                "key.namelength" : 7,
                "key.nameoffset" : 2618,
                "key.offset" : 2614,
                "key.parsed_declaration" : "let seconds: Int = numericCast(time % 60)",
                "key.parsed_scope.end" : 66,
                "key.parsed_scope.start" : 66,
                "key.typename" : "Int",
                "key.typeusr" : "$SSiD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF7secondsL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>var rfc1123: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>rfc1123<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 16,
                "key.name" : "rfc1123",
                "key.namelength" : 7,
                "key.nameoffset" : 2719,
                "key.offset" : 2715,
                "key.parsed_declaration" : "var rfc1123 = \"\"",
                "key.parsed_scope.end" : 69,
                "key.parsed_scope.start" : 69,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF7rfc1123L_SSvp"
              }
            ],
            "key.typename" : "(DateMiddleware) -> () -> String",
            "key.typeusr" : "$SSSycD",
            "key.usr" : "s:5Vapor14DateMiddlewareC03getB033_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSSyF"
          }
        ],
        "key.typename" : "DateMiddleware.Type",
        "key.typeusr" : "$S5Vapor14DateMiddlewareCmD",
        "key.usr" : "s:5Vapor14DateMiddlewareC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 3461
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let dayNames: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 3476
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>dayNames<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 70,
        "key.name" : "dayNames",
        "key.namelength" : 8,
        "key.nameoffset" : 3488,
        "key.offset" : 3484,
        "key.parsed_declaration" : "private let dayNames = [",
        "key.parsed_scope.end" : 96,
        "key.parsed_scope.start" : 96,
        "key.typename" : "[String]",
        "key.typeusr" : "$SSaySSGD",
        "key.usr" : "s:5Vapor8dayNames33_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSaySSGvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let monthNames: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 3556
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>monthNames<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 107,
        "key.name" : "monthNames",
        "key.namelength" : 10,
        "key.nameoffset" : 3568,
        "key.offset" : 3564,
        "key.parsed_declaration" : "private let monthNames = [",
        "key.parsed_scope.end" : 100,
        "key.parsed_scope.start" : 100,
        "key.typename" : "[String]",
        "key.typeusr" : "$SSaySSGD",
        "key.usr" : "s:5Vapor10monthNames33_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSaySSGvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let stringNumbers: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 3673
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>stringNumbers<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 662,
        "key.name" : "stringNumbers",
        "key.namelength" : 13,
        "key.nameoffset" : 3685,
        "key.offset" : 3681,
        "key.parsed_declaration" : "private let stringNumbers = [",
        "key.parsed_scope.end" : 104,
        "key.parsed_scope.start" : 104,
        "key.typename" : "[String]",
        "key.typeusr" : "$SSaySSGD",
        "key.usr" : "s:5Vapor13stringNumbers33_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSaySSGvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private var cachedTimeComponents: (key: <Type usr=\"c:@T@time_t\">time_t<\/Type>, components: <Type usr=\"c:@S@tm\">tm<\/Type>)?<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 4345
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>cachedTimeComponents<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.argument_label>key<\/tuple.element.argument_label>: <tuple.element.type><ref.typealias usr=\"c:@T@time_t\">time_t<\/ref.typealias><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.argument_label>components<\/tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"c:@S@tm\">tm<\/ref.struct><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 73,
        "key.name" : "cachedTimeComponents",
        "key.namelength" : 20,
        "key.nameoffset" : 4357,
        "key.offset" : 4353,
        "key.parsed_declaration" : "private var cachedTimeComponents: (key: time_t, components: COperatingSystem.tm)?",
        "key.parsed_scope.end" : 117,
        "key.parsed_scope.start" : 117,
        "key.setter_accessibility" : "source.lang.swift.accessibility.private",
        "key.typename" : "(key: Int, components: tm)?",
        "key.typeusr" : "$SSi3key_So2tmV10componentstSgD",
        "key.usr" : "s:5Vapor20cachedTimeComponents33_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSi3key_So2tmV10componentstSgvp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let secondsInDay: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 4428
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>secondsInDay<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 31,
        "key.name" : "secondsInDay",
        "key.namelength" : 12,
        "key.nameoffset" : 4440,
        "key.offset" : 4436,
        "key.parsed_declaration" : "private let secondsInDay = 60 * 60 * 24",
        "key.parsed_scope.end" : 119,
        "key.parsed_scope.start" : 119,
        "key.typename" : "Int",
        "key.typeusr" : "$SSiD",
        "key.usr" : "s:5Vapor12secondsInDay33_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSivp"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let accuracy: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 4468
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/DateMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>accuracy<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 21,
        "key.name" : "accuracy",
        "key.namelength" : 8,
        "key.nameoffset" : 4480,
        "key.offset" : 4476,
        "key.parsed_declaration" : "private let accuracy: Int = 1 \/\/ seconds",
        "key.parsed_scope.end" : 120,
        "key.parsed_scope.start" : 120,
        "key.typename" : "Int",
        "key.typeusr" : "$SSiD",
        "key.usr" : "s:5Vapor8accuracy33_F8BB4F5CF8ED869A76E9D982DE56B8B7LLSivp"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4040,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class ErrorMiddleware : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 96
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 89
          }
        ],
        "key.bodylength" : 3888,
        "key.bodyoffset" : 150,
        "key.doc.column" : 20,
        "key.doc.comment" : "Captures all errors and transforms them into an internal server error HTTP response.",
        "key.doc.declaration" : "public final class ErrorMiddleware : Middleware, ServiceType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift\" line=\"2\" column=\"20\"><Name>ErrorMiddleware<\/Name><USR>s:5Vapor15ErrorMiddlewareC<\/USR><Declaration>public final class ErrorMiddleware : Middleware, ServiceType<\/Declaration><CommentParts><Abstract><Para>Captures all errors and transforms them into an internal server error HTTP response.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "ErrorMiddleware",
        "key.doc.type" : "Class",
        "key.doclength" : 89,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 125
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 137
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ErrorMiddleware<\/decl.name> : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Middleware"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 3937,
        "key.name" : "ErrorMiddleware",
        "key.namelength" : 15,
        "key.nameoffset" : 108,
        "key.offset" : 102,
        "key.parsed_declaration" : "public final class ErrorMiddleware: Middleware, ServiceType",
        "key.parsed_scope.end" : 99,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtC4main15ErrorMiddleware",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor15ErrorMiddlewareC\">ErrorMiddleware<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 182
              }
            ],
            "key.bodylength" : 86,
            "key.bodyoffset" : 263,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> ErrorMiddleware",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift\" line=\"4\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor15ErrorMiddlewareC11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; ErrorMiddleware<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 4,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 155,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor15ErrorMiddlewareC\">ErrorMiddleware<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 161,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 201,
            "key.offset" : 189,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> ErrorMiddleware",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 4,
            "key.substructure" : [

            ],
            "key.typename" : "(ErrorMiddleware.Type) -> (Container) throws -> ErrorMiddleware",
            "key.typeusr" : "$S3for5Vapor15ErrorMiddlewareC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor15ErrorMiddlewareC11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`(environment: <Type usr=\"s:7Service11EnvironmentV\">Environment<\/Type>, log: <Type usr=\"s:7Logging6LoggerP\">Logger<\/Type>) -&gt; <Type usr=\"s:5Vapor15ErrorMiddlewareC\">ErrorMiddleware<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 691
              }
            ],
            "key.bodylength" : 2482,
            "key.bodyoffset" : 779,
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a default `ErrorMiddleware`. Logs errors to a `Logger` based on `Environment`\nand converts `Error` to `Response` based on conformance to `AbortError` and `Debuggable`.\n\n- parameters:\n    - environment: The environment to respect when presenting errors.\n    - log: Log destination.",
            "key.doc.declaration" : "public static func `default`(environment: Environment, log: Logger) -> ErrorMiddleware",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift\" line=\"14\" column=\"24\"><Name>default(environment:log:)<\/Name><USR>s:5Vapor15ErrorMiddlewareC7default11environment3logAC7Service11EnvironmentV_7Logging6Logger_ptFZ<\/USR><Declaration>public static func `default`(environment: Environment, log: Logger) -&gt; ErrorMiddleware<\/Declaration><CommentParts><Abstract><Para>Create a default <codeVoice>ErrorMiddleware<\/codeVoice>. Logs errors to a <codeVoice>Logger<\/codeVoice> based on <codeVoice>Environment<\/codeVoice> and converts <codeVoice>Error<\/codeVoice> to <codeVoice>Response<\/codeVoice> based on conformance to <codeVoice>AbortError<\/codeVoice> and <codeVoice>Debuggable<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>environment<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The environment to respect when presenting errors.<\/Para><\/Discussion><\/Parameter><Parameter><Name>log<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Log destination.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 14,
            "key.doc.name" : "default(environment:log:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The environment to respect when presenting errors."
                  }
                ],
                "name" : "environment"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Log destination."
                  }
                ],
                "name" : "log"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 331,
            "key.docoffset" : 356,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:7Service11EnvironmentV\">Environment<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>log<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:7Logging6LoggerP\">Logger<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor15ErrorMiddlewareC\">ErrorMiddleware<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 2564,
            "key.name" : "default(environment:log:)",
            "key.namelength" : 48,
            "key.nameoffset" : 710,
            "key.offset" : 698,
            "key.parsed_declaration" : "public static func `default`(environment: Environment, log: Logger) -> ErrorMiddleware",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 14,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.annotated_decl" : "<Declaration>struct ErrorResponse : <Type usr=\"s:SE\">Encodable<\/Type><\/Declaration>",
                "key.bodylength" : 190,
                "key.bodyoffset" : 882,
                "key.doc.column" : 16,
                "key.doc.comment" : "Structure of `ErrorMiddleware` default response.",
                "key.doc.declaration" : "struct ErrorResponse : Encodable",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
                "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift\" line=\"16\" column=\"16\"><Name>ErrorResponse<\/Name><USR>s:5Vapor15ErrorMiddlewareC7default11environment3logAC7Service11EnvironmentV_7Logging6Logger_ptFZ0B8ResponseL_V<\/USR><Declaration>struct ErrorResponse : Encodable<\/Declaration><CommentParts><Abstract><Para>Structure of <codeVoice>ErrorMiddleware<\/codeVoice> default response.<\/Para><\/Abstract><\/CommentParts><\/Class>",
                "key.doc.line" : 16,
                "key.doc.name" : "ErrorResponse",
                "key.doc.type" : "Class",
                "key.doclength" : 53,
                "key.docoffset" : 788,
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 9,
                    "key.offset" : 871
                  }
                ],
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ErrorResponse<\/decl.name> : <ref.protocol usr=\"s:SE\">Encodable<\/ref.protocol><\/decl.struct>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Encodable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.struct",
                "key.length" : 224,
                "key.name" : "ErrorResponse",
                "key.namelength" : 13,
                "key.nameoffset" : 856,
                "key.offset" : 849,
                "key.parsed_declaration" : "struct ErrorResponse: Encodable",
                "key.parsed_scope.end" : 22,
                "key.parsed_scope.start" : 16,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.private",
                    "key.annotated_decl" : "<Declaration>var error: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                    "key.doc.column" : 17,
                    "key.doc.comment" : "Always `true` to indicate this is a non-typical JSON response.",
                    "key.doc.declaration" : "var error: Bool",
                    "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift\" line=\"18\" column=\"17\"><Name>error<\/Name><USR>s:5Vapor15ErrorMiddlewareC7default11environment3logAC7Service11EnvironmentV_7Logging6Logger_ptFZ0B8ResponseL_V5errorSbvp<\/USR><Declaration>var error: Bool<\/Declaration><CommentParts><Abstract><Para>Always <codeVoice>true<\/codeVoice> to indicate this is a non-typical JSON response.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 18,
                    "key.doc.name" : "error",
                    "key.doc.type" : "Other",
                    "key.doclength" : 67,
                    "key.docoffset" : 895,
                    "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>error<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 15,
                    "key.name" : "error",
                    "key.namelength" : 5,
                    "key.nameoffset" : 978,
                    "key.offset" : 974,
                    "key.parsed_declaration" : "var error: Bool",
                    "key.parsed_scope.end" : 18,
                    "key.parsed_scope.start" : 18,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                    "key.typename" : "Bool",
                    "key.typeusr" : "$SSbD",
                    "key.usr" : "s:5Vapor15ErrorMiddlewareC7default11environment3logAC7Service11EnvironmentV_7Logging6Logger_ptFZ0B8ResponseL_V5errorSbvp"
                  },
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.private",
                    "key.annotated_decl" : "<Declaration>var reason: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                    "key.doc.column" : 17,
                    "key.doc.comment" : "The reason for the error.",
                    "key.doc.declaration" : "var reason: String",
                    "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift\" line=\"21\" column=\"17\"><Name>reason<\/Name><USR>s:5Vapor15ErrorMiddlewareC7default11environment3logAC7Service11EnvironmentV_7Logging6Logger_ptFZ0B8ResponseL_V6reasonSSvp<\/USR><Declaration>var reason: String<\/Declaration><CommentParts><Abstract><Para>The reason for the error.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 21,
                    "key.doc.name" : "reason",
                    "key.doc.type" : "Other",
                    "key.doclength" : 30,
                    "key.docoffset" : 1003,
                    "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
                    "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>reason<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                    "key.kind" : "source.lang.swift.decl.var.instance",
                    "key.length" : 18,
                    "key.name" : "reason",
                    "key.namelength" : 6,
                    "key.nameoffset" : 1049,
                    "key.offset" : 1045,
                    "key.parsed_declaration" : "var reason: String",
                    "key.parsed_scope.end" : 21,
                    "key.parsed_scope.start" : 21,
                    "key.setter_accessibility" : "source.lang.swift.accessibility.private",
                    "key.typename" : "String",
                    "key.typeusr" : "$SSSD",
                    "key.usr" : "s:5Vapor15ErrorMiddlewareC7default11environment3logAC7Service11EnvironmentV_7Logging6Logger_ptFZ0B8ResponseL_V6reasonSSvp"
                  }
                ],
                "key.typename" : "ErrorResponse.Type",
                "key.typeusr" : "$S5Vapor15ErrorMiddlewareC7default11environment3logAC7Service11EnvironmentV_7Logging6Logger_ptFZ0B8ResponseL_VmD",
                "key.usr" : "s:5Vapor15ErrorMiddlewareC7default11environment3logAC7Service11EnvironmentV_7Logging6Logger_ptFZ0B8ResponseL_V"
              }
            ],
            "key.typename" : "(ErrorMiddleware.Type) -> (Environment, Logger) -> ErrorMiddleware",
            "key.typeusr" : "$S11environment3log5Vapor15ErrorMiddlewareC7Service11EnvironmentV_7Logging6Logger_ptcD",
            "key.usr" : "s:5Vapor15ErrorMiddlewareC7default11environment3logAC7Service11EnvironmentV_7Logging6Logger_ptFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let closure: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; (<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3300
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Error-handling closure.",
            "key.doc.declaration" : "private let closure: (Request, Error) -> (Response)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift\" line=\"76\" column=\"17\"><Name>closure<\/Name><USR>s:5Vapor15ErrorMiddlewareC7closure33_8B10C140C589A79EA12597B38B615558LLyAA8ResponseCAA7RequestC_s0B0_ptcvp<\/USR><Declaration>private let closure: (Request, Error) -&gt; (Response)<\/Declaration><CommentParts><Abstract><Para>Error-handling closure.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 76,
            "key.doc.name" : "closure",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 3268,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>closure<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.name" : "closure",
            "key.namelength" : 7,
            "key.nameoffset" : 3312,
            "key.offset" : 3308,
            "key.parsed_declaration" : "private let closure: (Request, Error) -> (Response)",
            "key.parsed_scope.end" : 76,
            "key.parsed_scope.start" : 76,
            "key.typename" : "(Request, Error) -> (Response)",
            "key.typeusr" : "$Sy5Vapor8ResponseCAA7RequestC_s5Error_ptcD",
            "key.usr" : "s:5Vapor15ErrorMiddlewareC7closure33_8B10C140C589A79EA12597B38B615558LLyAA8ResponseCAA7RequestC_s0B0_ptcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:s5ErrorP\">Error<\/Type>) -&gt; (<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>))<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3506
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 3572,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `ErrorMiddleware`.\n\n- parameters:\n    - closure: Error-handling closure. Converts `Error` to `Response`.",
            "key.doc.declaration" : "public init(_ closure: @escaping (Request, Error) -> (Response))",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift\" line=\"82\" column=\"12\"><Name>init(_:)<\/Name><USR>s:5Vapor15ErrorMiddlewareCyAcA8ResponseCAA7RequestC_s0B0_ptccfc<\/USR><Declaration>public init(_ closure: @escaping (Request, Error) -&gt; (Response))<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>ErrorMiddleware<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Error-handling closure. Converts <codeVoice>Error<\/codeVoice> to <codeVoice>Response<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 82,
            "key.doc.name" : "init(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Error-handling closure. Converts `Error` to `Response`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 145,
            "key.docoffset" : 3357,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 96,
            "key.name" : "init(_:)",
            "key.namelength" : 57,
            "key.nameoffset" : 3513,
            "key.offset" : 3513,
            "key.parsed_declaration" : "public init(_ closure: @escaping (Request, Error) -> (Response))",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 82,
            "key.substructure" : [

            ],
            "key.typename" : "(ErrorMiddleware.Type) -> (@escaping (Request, Error) -> (Response)) -> ErrorMiddleware",
            "key.typeusr" : "$Sy5Vapor15ErrorMiddlewareCAA8ResponseCAA7RequestC_s0B0_ptccD",
            "key.usr" : "s:5Vapor15ErrorMiddlewareCyAcA8ResponseCAA7RequestC_s0B0_ptccfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3641
              }
            ],
            "key.bodylength" : 302,
            "key.bodyoffset" : 3734,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Middleware`.",
            "key.doc.declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift\" line=\"87\" column=\"17\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Vapor15ErrorMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF<\/USR><Declaration>public func respond(to req: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Middleware<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 87,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 22,
            "key.docoffset" : 3615,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 389,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 52,
            "key.nameoffset" : 3653,
            "key.offset" : 3648,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 98,
            "key.parsed_scope.start" : 87,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let response: <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/ErrorMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>response<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 30,
                "key.name" : "response",
                "key.namelength" : 8,
                "key.nameoffset" : 3747,
                "key.offset" : 3743,
                "key.parsed_declaration" : "let response: Future<Response>",
                "key.parsed_scope.end" : 88,
                "key.parsed_scope.start" : 88,
                "key.typename" : "EventLoopFuture<Response>",
                "key.typeusr" : "$S3NIO15EventLoopFutureCy5Vapor8ResponseCGD",
                "key.usr" : "s:5Vapor15ErrorMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF8responseL_ALvp"
              }
            ],
            "key.typename" : "(ErrorMiddleware) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Vapor15ErrorMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
          }
        ],
        "key.typename" : "ErrorMiddleware.Type",
        "key.typeusr" : "$S5Vapor15ErrorMiddlewareCmD",
        "key.usr" : "s:5Vapor15ErrorMiddlewareC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1763,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class FileMiddleware : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 306
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 299
          }
        ],
        "key.bodylength" : 1402,
        "key.bodyoffset" : 359,
        "key.doc.column" : 20,
        "key.doc.comment" : "Serves static files from a public directory.\n\n    middlewareConfig = MiddlewareConfig()\n    middlewareConfig.use(FileMiddleware.self)\n    services.register(middlewareConfig)\n\n`FileMiddleware` will default to `DirectoryConfig`'s working directory with `\"\/Public\"` appended.",
        "key.doc.declaration" : "public final class FileMiddleware : Middleware, ServiceType",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`FileMiddleware` will default to `DirectoryConfig`’s working directory with `\"\/Public\"` appended."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift\" line=\"8\" column=\"20\"><Name>FileMiddleware<\/Name><USR>s:5Vapor14FileMiddlewareC<\/USR><Declaration>public final class FileMiddleware : Middleware, ServiceType<\/Declaration><CommentParts><Abstract><Para>Serves static files from a public directory.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[middlewareConfig = MiddlewareConfig()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[middlewareConfig.use(FileMiddleware.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(middlewareConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>FileMiddleware<\/codeVoice> will default to <codeVoice>DirectoryConfig<\/codeVoice>’s working directory with <codeVoice>&quot;\/Public&quot;<\/codeVoice> appended.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 8,
        "key.doc.name" : "FileMiddleware",
        "key.doc.type" : "Class",
        "key.doclength" : 299,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 334
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 346
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>FileMiddleware<\/decl.name> : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Middleware"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1450,
        "key.name" : "FileMiddleware",
        "key.namelength" : 14,
        "key.nameoffset" : 318,
        "key.offset" : 312,
        "key.parsed_declaration" : "public final class FileMiddleware: Middleware, ServiceType",
        "key.parsed_scope.end" : 50,
        "key.parsed_scope.start" : 8,
        "key.runtime_name" : "_TtC4main14FileMiddleware",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor14FileMiddlewareC\">FileMiddleware<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 391
              }
            ],
            "key.bodylength" : 105,
            "key.bodyoffset" : 474,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for container: Container) throws -> FileMiddleware",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift\" line=\"10\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor14FileMiddlewareC11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for container: Container) throws -&gt; FileMiddleware<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 10,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 364,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor14FileMiddlewareC\">FileMiddleware<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 182,
            "key.name" : "makeService(for:)",
            "key.namelength" : 37,
            "key.nameoffset" : 410,
            "key.offset" : 398,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for container: Container) throws -> FileMiddleware",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 10,
            "key.substructure" : [

            ],
            "key.typename" : "(FileMiddleware.Type) -> (Container) throws -> FileMiddleware",
            "key.typeusr" : "$S3for5Vapor14FileMiddlewareC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor14FileMiddlewareC11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let publicDirectory: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 655
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The public directory.\n- note: Must end with a slash.",
            "key.doc.declaration" : "private let publicDirectory: String",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift\" line=\"16\" column=\"17\"><Name>publicDirectory<\/Name><USR>s:5Vapor14FileMiddlewareC15publicDirectory33_2409397E14C68DC8A514BE0334F660DELLSSvp<\/USR><Declaration>private let publicDirectory: String<\/Declaration><CommentParts><Abstract><Para>The public directory.<\/Para><\/Abstract><Discussion><Note><Para>Must end with a slash.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 16,
            "key.doc.name" : "publicDirectory",
            "key.doc.type" : "Other",
            "key.doclength" : 65,
            "key.docoffset" : 586,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>publicDirectory<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.name" : "publicDirectory",
            "key.namelength" : 15,
            "key.nameoffset" : 667,
            "key.offset" : 663,
            "key.parsed_declaration" : "private let publicDirectory: String",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor14FileMiddlewareC15publicDirectory33_2409397E14C68DC8A514BE0334F660DELLSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(publicDirectory: <Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 736
              }
            ],
            "key.bodylength" : 109,
            "key.bodyoffset" : 774,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `FileMiddleware`.",
            "key.doc.declaration" : "public init(publicDirectory: String)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift\" line=\"19\" column=\"12\"><Name>init(publicDirectory:)<\/Name><USR>s:5Vapor14FileMiddlewareC15publicDirectoryACSS_tcfc<\/USR><Declaration>public init(publicDirectory: String)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>FileMiddleware<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 19,
            "key.doc.name" : "init(publicDirectory:)",
            "key.doc.type" : "Function",
            "key.doclength" : 36,
            "key.docoffset" : 696,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>publicDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 141,
            "key.name" : "init(publicDirectory:)",
            "key.namelength" : 29,
            "key.nameoffset" : 743,
            "key.offset" : 743,
            "key.parsed_declaration" : "public init(publicDirectory: String)",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 19,
            "key.substructure" : [

            ],
            "key.typename" : "(FileMiddleware.Type) -> (String) -> FileMiddleware",
            "key.typeusr" : "$S15publicDirectory5Vapor14FileMiddlewareCSS_tcD",
            "key.usr" : "s:5Vapor14FileMiddlewareC15publicDirectoryACSS_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 916
              }
            ],
            "key.bodylength" : 750,
            "key.bodyoffset" : 1009,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Middleware`.",
            "key.doc.declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift\" line=\"24\" column=\"17\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Vapor14FileMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF<\/USR><Declaration>public func respond(to req: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Middleware<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 24,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 22,
            "key.docoffset" : 890,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 837,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 52,
            "key.nameoffset" : 928,
            "key.offset" : 923,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 24,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var path: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 28,
                "key.name" : "path",
                "key.namelength" : 4,
                "key.nameoffset" : 1057,
                "key.offset" : 1053,
                "key.parsed_declaration" : "var path = req.http.url.path",
                "key.parsed_scope.end" : 26,
                "key.parsed_scope.start" : 26,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:5Vapor14FileMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF4pathL_SSvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let filePath: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>filePath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 37,
                "key.name" : "filePath",
                "key.namelength" : 8,
                "key.nameoffset" : 1389,
                "key.offset" : 1385,
                "key.parsed_declaration" : "let filePath = publicDirectory + path",
                "key.parsed_scope.end" : 39,
                "key.parsed_scope.start" : 39,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:5Vapor14FileMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF8filePathL_SSvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var isDir: <Type usr=\"s:10ObjectiveC8ObjCBoolV\">ObjCBool<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/FileMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isDir<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10ObjectiveC8ObjCBoolV\">ObjCBool<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 27,
                "key.name" : "isDir",
                "key.namelength" : 5,
                "key.nameoffset" : 1491,
                "key.offset" : 1487,
                "key.parsed_declaration" : "var isDir: ObjCBool = false",
                "key.parsed_scope.end" : 42,
                "key.parsed_scope.start" : 42,
                "key.typename" : "ObjCBool",
                "key.typeusr" : "$S10ObjectiveC8ObjCBoolVD",
                "key.usr" : "s:5Vapor14FileMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF5isDirL_10ObjectiveC8ObjCBoolVvp"
              }
            ],
            "key.typename" : "(FileMiddleware) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Vapor14FileMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
          }
        ],
        "key.typename" : "FileMiddleware.Type",
        "key.typeusr" : "$S5Vapor14FileMiddlewareCmD",
        "key.usr" : "s:5Vapor14FileMiddlewareC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1626,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Middleware<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 449
          }
        ],
        "key.bodylength" : 384,
        "key.bodyoffset" : 477,
        "key.doc.column" : 17,
        "key.doc.comment" : "`Middleware` is placed between the server and your router. It is capable of\nmutating both incoming requests and outgoing responses. `Middleware` can choose\nto pass requests on to the next `Middleware` in a chain, or they can short circuit and\nreturn a custom `Response` if desired.\n\n`MiddlewareConfig` is used to configure which `Middleware` are active for a given\nservice-container and in which order they should be run.",
        "key.doc.declaration" : "public protocol Middleware",
        "key.doc.discussion" : [
          {
            "Para" : "`MiddlewareConfig` is used to configure which `Middleware` are active for a given service-container and in which order they should be run."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift\" line=\"8\" column=\"17\"><Name>Middleware<\/Name><USR>s:5Vapor10MiddlewareP<\/USR><Declaration>public protocol Middleware<\/Declaration><CommentParts><Abstract><Para><codeVoice>Middleware<\/codeVoice> is placed between the server and your router. It is capable of mutating both incoming requests and outgoing responses. <codeVoice>Middleware<\/codeVoice> can choose to pass requests on to the next <codeVoice>Middleware<\/codeVoice> in a chain, or they can short circuit and return a custom <codeVoice>Response<\/codeVoice> if desired.<\/Para><\/Abstract><Discussion><Para><codeVoice>MiddlewareConfig<\/codeVoice> is used to configure which <codeVoice>Middleware<\/codeVoice> are active for a given service-container and in which order they should be run.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 8,
        "key.doc.name" : "Middleware",
        "key.doc.type" : "Class",
        "key.doclength" : 449,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Middleware<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 406,
        "key.name" : "Middleware",
        "key.namelength" : 10,
        "key.nameoffset" : 465,
        "key.offset" : 456,
        "key.parsed_declaration" : "public protocol Middleware",
        "key.parsed_scope.end" : 15,
        "key.parsed_scope.start" : 8,
        "key.runtime_name" : "_TtP4main10Middleware_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func respond(to request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called with each `Request` that passes through this middleware.\n- parameters:\n    - request: The incoming `Request`.\n    - next: Next `Responder` in the chain, potentially another middleware or the main router.\n- returns: An asynchronous `Response`.",
            "key.doc.declaration" : "func respond(to request: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift\" line=\"14\" column=\"10\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF<\/USR><Declaration>func respond(to request: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Called with each <codeVoice>Request<\/codeVoice> that passes through this middleware.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>next<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Next <codeVoice>Responder<\/codeVoice> in the chain, potentially another middleware or the main router.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>An asynchronous <codeVoice>Response<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 14,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The incoming `Request`."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Next `Responder` in the chain, potentially another middleware or the main router."
                  }
                ],
                "name" : "next"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "An asynchronous `Response`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 286,
            "key.docoffset" : 482,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 88,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 56,
            "key.nameoffset" : 777,
            "key.offset" : 772,
            "key.parsed_declaration" : "func respond(to request: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Middleware> (Self) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
          }
        ],
        "key.typename" : "Middleware.Protocol",
        "key.typeusr" : "$S5Vapor10Middleware_pmD",
        "key.usr" : "s:5Vapor10MiddlewareP"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/Type><\/Declaration>",
        "key.bodylength" : 442,
        "key.bodyoffset" : 909,
        "key.doc.declaration" : "struct Array<Element>",
        "key.doc.discussion" : [
          {
            "Para" : "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the `Array` type to hold elements of a single type, the array’s `Element` type. An array can store any kind of elements—from integers to strings to classes."
          },
          {
            "Para" : "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s `Element` type. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to perform an operation on all of an array’s elements, use a `for`-`in` loop to iterate through the array’s contents."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `first` and `last` properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are `nil`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can replace an existing element with a new value by assigning the new value to the subscript."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."
          },
          {
            "Para" : "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."
          },
          {
            "Para" : "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."
          },
          {
            "Para" : "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."
          },
          {
            "Para" : "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."
          },
          {
            "Para" : "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array’s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array’s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."
          },
          {
            "Para" : "When the destination array’s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."
          },
          {
            "Para" : "When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Array<\/Name><USR>s:Sa<\/USR><Declaration>struct Array&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.<\/Para><\/Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the <codeVoice>Array<\/codeVoice> type to hold elements of a single type, the array’s <codeVoice>Element<\/codeVoice> type. An array can store any kind of elements—from integers to strings to classes.<\/Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s <codeVoice>Element<\/codeVoice> type. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An array of 'Int' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ An array of 'String' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element<\/codeVoice> type of your array in the declaration. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Shortened forms are preferred]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The full type name is also allowed]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Array Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to perform an operation on all of an array’s elements, use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop to iterate through the array’s contents.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Albemarle.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Brandywine.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Chesapeake.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>isEmpty<\/codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count<\/codeVoice> property to find the number of elements in the array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I know 8 odd numbers.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>first<\/codeVoice> and <codeVoice>last<\/codeVoice> properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 15\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil, nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count<\/codeVoice> triggers a runtime error. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Triggers runtime error: Index out of range]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Adding and Removing Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)<\/codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)<\/codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)<\/codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)<\/codeVoice>, <codeVoice>removeSubrange(_:)<\/codeVoice>, and <codeVoice>removeLast()<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Ben's family is moving to another state]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ William is signing up for a different class]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Growing the Size of an Array<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.<\/Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)<\/codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity<\/codeVoice> and <codeVoice>count<\/codeVoice> properties to determine how many more elements the array can store without allocating larger storage.<\/Para><Para>For arrays of most <codeVoice>Element<\/codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element<\/codeVoice> type that is a class or <codeVoice>@objc<\/codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray<\/codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray<\/codeVoice> can become an <codeVoice>Array<\/codeVoice>, there are no guarantees about representation or efficiency in this case.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[100, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[1, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An integer type with reference semantics]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Modifications to an instance are visible from either array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Replacements, additions, and removals are still visible]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ only in the modified array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.<\/Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.<\/Para><Para>In the example below, a <codeVoice>numbers<\/codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers<\/codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers<\/codeVoice> are made in place, while the two copies continue to share the original storage.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The storage for 'numbers' is copied here]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'numbers' is [100, 200, 300, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray<\/codeVoice> instance instead of <codeVoice>Array<\/codeVoice>, use the type-cast operator (<codeVoice>as<\/codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of your array must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>The following example shows how you can bridge an <codeVoice>Array<\/codeVoice> instance to <codeVoice>NSArray<\/codeVoice> to use the <codeVoice>write(to:atomically:)<\/codeVoice> method. In this example, the <codeVoice>colors<\/codeVoice> array can be bridged to <codeVoice>NSArray<\/codeVoice> because the <codeVoice>colors<\/codeVoice> array’s <codeVoice>String<\/codeVoice> elements bridge to <codeVoice>NSString<\/codeVoice>. The compiler prevents bridging the <codeVoice>moreColors<\/codeVoice> array, on the other hand, because its <codeVoice>Element<\/codeVoice> type is <codeVoice>Optional&lt;String&gt;<\/codeVoice>, which does <emphasis>not<\/emphasis> bridge to a Foundation type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value of type '[String?]' to type 'NSArray']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Bridging from <codeVoice>Array<\/codeVoice> to <codeVoice>NSArray<\/codeVoice> takes O(1) time and O(1) space if the array’s elements are already instances of a class or an <codeVoice>@objc<\/codeVoice> protocol; otherwise, it takes O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When the destination array’s element type is a class or an <codeVoice>@objc<\/codeVoice> protocol, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)<\/codeVoice> returns the same array, the instances of <codeVoice>NSArray<\/codeVoice> and <codeVoice>Array<\/codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array<\/codeVoice> share storage.<\/Para><Para>When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n<\/emphasis>) time. For example, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array&lt;Int&gt;<\/codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array<\/codeVoice> instance.<\/Para><Note><Para>The <codeVoice>ContiguousArray<\/codeVoice> and <codeVoice>ArraySlice<\/codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Array",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Array<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Collection\/Array",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 488,
        "key.modulename" : "Swift",
        "key.name" : "Array",
        "key.namelength" : 5,
        "key.nameoffset" : 874,
        "key.offset" : 864,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func makeResponder(chainedto responder: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) -&gt; <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1092
              }
            ],
            "key.bodylength" : 185,
            "key.bodyoffset" : 1164,
            "key.doc.column" : 17,
            "key.doc.comment" : "Wraps a `Responder` in an array of `Middleware` creating a new `Responder`.\n- note: The array of middleware must be `[Middleware]` not `[M] where M: Middleware`.",
            "key.doc.declaration" : "public func makeResponder(chainedto responder: Responder) -> Responder",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift\" line=\"20\" column=\"17\"><Name>makeResponder(chainedto:)<\/Name><USR>s:Sa5VaporAA10Middleware_pRszlE13makeResponder9chainedtoAA0D0_pAaE_p_tF<\/USR><Declaration>public func makeResponder(chainedto responder: Responder) -&gt; Responder<\/Declaration><CommentParts><Abstract><Para>Wraps a <codeVoice>Responder<\/codeVoice> in an array of <codeVoice>Middleware<\/codeVoice> creating a new <codeVoice>Responder<\/codeVoice>.<\/Para><\/Abstract><Discussion><Note><Para>The array of middleware must be <codeVoice>[Middleware]<\/codeVoice> not <codeVoice>[M] where M: Middleware<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 20,
            "key.doc.name" : "makeResponder(chainedto:)",
            "key.doc.type" : "Function",
            "key.doclength" : 174,
            "key.docoffset" : 914,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeResponder<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>chainedto<\/decl.var.parameter.argument_label> <decl.var.parameter.name>responder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 251,
            "key.name" : "makeResponder(chainedto:)",
            "key.namelength" : 45,
            "key.nameoffset" : 1104,
            "key.offset" : 1099,
            "key.parsed_declaration" : "public func makeResponder(chainedto responder: Responder) -> Responder",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 20,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var responder: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>responder<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "Collection\/Array",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 25,
                "key.name" : "responder",
                "key.namelength" : 9,
                "key.nameoffset" : 1177,
                "key.offset" : 1173,
                "key.parsed_declaration" : "var responder = responder",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.typename" : "Responder",
                "key.typeusr" : "$S5Vapor9Responder_pD",
                "key.usr" : "s:Sa5VaporAA10Middleware_pRszlE13makeResponder9chainedtoAA0D0_pAaE_p_tF9responderL0_AaE_pvp"
              }
            ],
            "key.typename" : "<Element where Element == Middleware> (Array<Element>) -> (Responder) -> Responder",
            "key.typeusr" : "$S9chainedto5Vapor9Responder_pAbC_p_tcD",
            "key.usr" : "s:Sa5VaporAA10Middleware_pRszlE13makeResponder9chainedtoAA0D0_pAaE_p_tF"
          }
        ],
        "key.typename" : "Array<Element>.Type",
        "key.typeusr" : "$SSayxGmD",
        "key.usr" : "s:Sa"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Middleware<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1354
          }
        ],
        "key.bodylength" : 241,
        "key.bodyoffset" : 1383,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Middleware",
        "key.doc.discussion" : [
          {
            "Para" : "`MiddlewareConfig` is used to configure which `Middleware` are active for a given service-container and in which order they should be run."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift\" line=\"8\" column=\"17\"><Name>Middleware<\/Name><USR>s:5Vapor10MiddlewareP<\/USR><Declaration>public protocol Middleware<\/Declaration><CommentParts><Abstract><Para><codeVoice>Middleware<\/codeVoice> is placed between the server and your router. It is capable of mutating both incoming requests and outgoing responses. <codeVoice>Middleware<\/codeVoice> can choose to pass requests on to the next <codeVoice>Middleware<\/codeVoice> in a chain, or they can short circuit and return a custom <codeVoice>Response<\/codeVoice> if desired.<\/Para><\/Abstract><Discussion><Para><codeVoice>MiddlewareConfig<\/codeVoice> is used to configure which <codeVoice>Middleware<\/codeVoice> are active for a given service-container and in which order they should be run.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 8,
        "key.doc.name" : "Middleware",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Middleware<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 264,
        "key.name" : "Middleware",
        "key.namelength" : 10,
        "key.nameoffset" : 1371,
        "key.offset" : 1361,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func makeResponder(chainingTo responder: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) -&gt; <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type><\/Declaration>",
            "key.bodylength" : 87,
            "key.bodyoffset" : 1535,
            "key.doc.column" : 10,
            "key.doc.comment" : "Wraps a `Responder` in a single `Middleware` creating a new `Responder`.",
            "key.doc.declaration" : "func makeResponder(chainingTo responder: Responder) -> Responder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift\" line=\"31\" column=\"10\"><Name>makeResponder(chainingTo:)<\/Name><USR>s:5Vapor10MiddlewarePAAE13makeResponder10chainingToAA0D0_pAaF_p_tF<\/USR><Declaration>func makeResponder(chainingTo responder: Responder) -&gt; Responder<\/Declaration><CommentParts><Abstract><Para>Wraps a <codeVoice>Responder<\/codeVoice> in a single <codeVoice>Middleware<\/codeVoice> creating a new <codeVoice>Responder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 31,
            "key.doc.name" : "makeResponder(chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 77,
            "key.docoffset" : 1388,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeResponder<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>responder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 154,
            "key.name" : "makeResponder(chainingTo:)",
            "key.namelength" : 46,
            "key.nameoffset" : 1474,
            "key.offset" : 1469,
            "key.parsed_declaration" : "func makeResponder(chainingTo responder: Responder) -> Responder",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 31,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Middleware> (Self) -> (Responder) -> Responder",
            "key.typeusr" : "$S10chainingTo5Vapor9Responder_pAbC_p_tcD",
            "key.usr" : "s:5Vapor10MiddlewarePAAE13makeResponder10chainingToAA0D0_pAaF_p_tF"
          }
        ],
        "key.typename" : "Middleware.Protocol",
        "key.typeusr" : "$S5Vapor10Middleware_pmD",
        "key.usr" : "s:5Vapor10MiddlewareP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2071,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct MiddlewareConfig : <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 110
          }
        ],
        "key.bodylength" : 1914,
        "key.bodyoffset" : 155,
        "key.doc.column" : 15,
        "key.doc.comment" : "Configures an application's active `Middleware`.\nMiddleware will be used in the order they are added.",
        "key.doc.declaration" : "public struct MiddlewareConfig : ServiceType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift\" line=\"3\" column=\"15\"><Name>MiddlewareConfig<\/Name><USR>s:5Vapor16MiddlewareConfigV<\/USR><Declaration>public struct MiddlewareConfig : ServiceType<\/Declaration><CommentParts><Abstract><Para>Configures an application’s active <codeVoice>Middleware<\/codeVoice>. Middleware will be used in the order they are added.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 3,
        "key.doc.name" : "MiddlewareConfig",
        "key.doc.type" : "Class",
        "key.doclength" : 110,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 142
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>MiddlewareConfig<\/decl.name> : <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1953,
        "key.name" : "MiddlewareConfig",
        "key.namelength" : 16,
        "key.nameoffset" : 124,
        "key.offset" : 117,
        "key.parsed_declaration" : "public struct MiddlewareConfig: ServiceType",
        "key.parsed_scope.end" : 55,
        "key.parsed_scope.start" : 3,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`() -&gt; <Type usr=\"s:5Vapor16MiddlewareConfigV\">MiddlewareConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 354
              }
            ],
            "key.bodylength" : 108,
            "key.bodyoffset" : 406,
            "key.doc.column" : 24,
            "key.doc.comment" : "Creates a new `MiddlewareConfig` with default settings.\n\nCurrently this includes `DateMiddleware` and default `ErrorMiddleware` but this\nmay change in the future.",
            "key.doc.declaration" : "public static func `default`() -> MiddlewareConfig",
            "key.doc.discussion" : [
              {
                "Para" : "Currently this includes `DateMiddleware` and default `ErrorMiddleware` but this may change in the future."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift\" line=\"8\" column=\"24\"><Name>default()<\/Name><USR>s:5Vapor16MiddlewareConfigV7defaultACyFZ<\/USR><Declaration>public static func `default`() -&gt; MiddlewareConfig<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>MiddlewareConfig<\/codeVoice> with default settings.<\/Para><\/Abstract><Discussion><Para>Currently this includes <codeVoice>DateMiddleware<\/codeVoice> and default <codeVoice>ErrorMiddleware<\/codeVoice> but this may change in the future.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "default()",
            "key.doc.type" : "Function",
            "key.doclength" : 190,
            "key.docoffset" : 160,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor16MiddlewareConfigV\">MiddlewareConfig<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 154,
            "key.name" : "default()",
            "key.namelength" : 11,
            "key.nameoffset" : 373,
            "key.offset" : 361,
            "key.parsed_declaration" : "public static func `default`() -> MiddlewareConfig",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var config: <Type usr=\"s:5Vapor16MiddlewareConfigV\">MiddlewareConfig<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>config<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor16MiddlewareConfigV\">MiddlewareConfig<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 31,
                "key.name" : "config",
                "key.namelength" : 6,
                "key.nameoffset" : 419,
                "key.offset" : 415,
                "key.parsed_declaration" : "var config = MiddlewareConfig()",
                "key.parsed_scope.end" : 9,
                "key.parsed_scope.start" : 9,
                "key.typename" : "MiddlewareConfig",
                "key.typeusr" : "$S5Vapor16MiddlewareConfigVD",
                "key.usr" : "s:5Vapor16MiddlewareConfigV7defaultACyFZ6configL_ACvp"
              }
            ],
            "key.typename" : "(MiddlewareConfig.Type) -> () -> MiddlewareConfig",
            "key.typeusr" : "$S5Vapor16MiddlewareConfigVycD",
            "key.usr" : "s:5Vapor16MiddlewareConfigV7defaultACyFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor16MiddlewareConfigV\">MiddlewareConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 548
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 630,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> MiddlewareConfig",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift\" line=\"15\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor16MiddlewareConfigV11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; MiddlewareConfig<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 521,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor16MiddlewareConfigV\">MiddlewareConfig<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 107,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 567,
            "key.offset" : 555,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> MiddlewareConfig",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [

            ],
            "key.typename" : "(MiddlewareConfig.Type) -> (Container) throws -> MiddlewareConfig",
            "key.typeusr" : "$S3for5Vapor16MiddlewareConfigV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor16MiddlewareConfigV11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var storage: [(<Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 703
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The configured middleware.",
            "key.doc.declaration" : "private var storage: [(Container) throws -> Middleware]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift\" line=\"20\" column=\"17\"><Name>storage<\/Name><USR>s:5Vapor16MiddlewareConfigV7storage33_91F09CFDF3A0E39BE6B805114E3DFDC2LLSayAA0B0_p7Service9Container_pKcGvp<\/USR><Declaration>private var storage: [(Container) throws -&gt; Middleware]<\/Declaration><CommentParts><Abstract><Para>The configured middleware.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 20,
            "key.doc.name" : "storage",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 668,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type>[(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.function.returntype>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 47,
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 715,
            "key.offset" : 711,
            "key.parsed_declaration" : "private var storage: [(Container) throws -> Middleware]",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[(Container) throws -> Middleware]",
            "key.typeusr" : "$SSay5Vapor10Middleware_p7Service9Container_pKcGD",
            "key.usr" : "s:5Vapor16MiddlewareConfigV7storage33_91F09CFDF3A0E39BE6B805114E3DFDC2LLSayAA0B0_p7Service9Container_pKcGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 812
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 827,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new, empty `MiddlewareConfig`.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift\" line=\"23\" column=\"12\"><Name>init()<\/Name><USR>s:5Vapor16MiddlewareConfigVACycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create a new, empty <codeVoice>MiddlewareConfig<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 23,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 44,
            "key.docoffset" : 764,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 40,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 819,
            "key.offset" : 819,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 23,
            "key.substructure" : [

            ],
            "key.typename" : "(MiddlewareConfig.Type) -> () -> MiddlewareConfig",
            "key.typeusr" : "$S5Vapor16MiddlewareConfigVycD",
            "key.usr" : "s:5Vapor16MiddlewareConfigVACycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use&lt;M&gt;(_ type: <Type usr=\"s:5Vapor16MiddlewareConfigV3useyyxmAA0B0RzlF1ML_xmfp\">M<\/Type>.Type) where M : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1183
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1176
              }
            ],
            "key.bodylength" : 52,
            "key.bodyoffset" : 1241,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds the supplied `Middleware` type.\n\n    var middlewareConfig = MiddlewareConfig.default()\n    middlewareConfig.use(FooMiddleware.self)\n    services.register(middlewareConfig)\n\nThe service container will be asked to create this type upon application boot.",
            "key.doc.declaration" : "public mutating func use<M>(_ type: M.Type) where M : Middleware",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The service container will be asked to create this type upon application boot."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift\" line=\"34\" column=\"26\"><Name>use(_:)<\/Name><USR>s:5Vapor16MiddlewareConfigV3useyyxmAA0B0RzlF<\/USR><Declaration>public mutating func use&lt;M&gt;(_ type: M.Type) where M : Middleware<\/Declaration><CommentParts><Abstract><Para>Adds the supplied <codeVoice>Middleware<\/codeVoice> type.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var middlewareConfig = MiddlewareConfig.default()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[middlewareConfig.use(FooMiddleware.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(middlewareConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The service container will be asked to create this type upon application boot.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 34,
            "key.doc.name" : "use(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 307,
            "key.docoffset" : 865,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16MiddlewareConfigV3useyyxmAA0B0RzlF1ML_xmfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16MiddlewareConfigV3useyyxmAA0B0RzlF1ML_xmfp\">M<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>M : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 102,
            "key.name" : "use(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 1197,
            "key.offset" : 1192,
            "key.parsed_declaration" : "public mutating func use<M>(_ type: M.Type) where M: Middleware",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 34,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16MiddlewareConfigV3useyyxAA0B0RzlF\">use&lt;M&gt;(_: M) where M : Middleware<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 1201,
                "key.offset" : 1201,
                "key.parsed_declaration" : "public mutating func use<M>(_ type: M.Type) where M: Middleware",
                "key.parsed_scope.end" : 34,
                "key.parsed_scope.start" : 34,
                "key.typename" : "M.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor16MiddlewareConfigV3useyyxmAA0B0RzlF1ML_xmfp"
              }
            ],
            "key.typename" : "<M where M : Middleware> (inout MiddlewareConfig) -> (M.Type) -> ()",
            "key.typeusr" : "$Syyxmc5Vapor10MiddlewareRzluD",
            "key.usr" : "s:5Vapor16MiddlewareConfigV3useyyxmAA0B0RzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public mutating func use&lt;M&gt;(_ middleware: <Type usr=\"s:5Vapor16MiddlewareConfigV3useyyxAA0B0RzlF1ML_xmfp\">M<\/Type>) where M : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.mutating",
                "key.length" : 8,
                "key.offset" : 1758
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1751
              }
            ],
            "key.bodylength" : 48,
            "key.bodyoffset" : 1817,
            "key.doc.column" : 26,
            "key.doc.comment" : "Adds a pre-initialized `Middleware` instance.\n\n    var middlewareConfig = MiddlewareConfig.default()\n    middlewareConfig.use(fooMiddleware)\n    services.register(middlewareConfig)\n\n- warning: Ensure the `Middleware` is thread-safe when using this method.\n           Otherwise, use the type-based method and register the `Middleware`\n           using factory method to `Services`.",
            "key.doc.declaration" : "public mutating func use<M>(_ middleware: M) where M : Middleware",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Warning" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift\" line=\"47\" column=\"26\"><Name>use(_:)<\/Name><USR>s:5Vapor16MiddlewareConfigV3useyyxAA0B0RzlF<\/USR><Declaration>public mutating func use&lt;M&gt;(_ middleware: M) where M : Middleware<\/Declaration><CommentParts><Abstract><Para>Adds a pre-initialized <codeVoice>Middleware<\/codeVoice> instance.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var middlewareConfig = MiddlewareConfig.default()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[middlewareConfig.use(fooMiddleware)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(middlewareConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Warning><Para>Ensure the <codeVoice>Middleware<\/codeVoice> is thread-safe when using this method. Otherwise, use the type-based method and register the <codeVoice>Middleware<\/codeVoice> using factory method to <codeVoice>Services<\/codeVoice>.<\/Para><\/Warning><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 47,
            "key.doc.name" : "use(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 447,
            "key.docoffset" : 1300,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>mutating<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>use<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor16MiddlewareConfigV3useyyxAA0B0RzlF1ML_xmfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>middleware<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor16MiddlewareConfigV3useyyxAA0B0RzlF1ML_xmfp\">M<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>M : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 99,
            "key.name" : "use(_:)",
            "key.namelength" : 23,
            "key.nameoffset" : 1772,
            "key.offset" : 1767,
            "key.parsed_declaration" : "public mutating func use<M>(_ middleware: M) where M: Middleware",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 47,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor16MiddlewareConfigV3useyyxmAA0B0RzlF\">use&lt;M&gt;(_: M.Type) where M : Middleware<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 1776,
                "key.offset" : 1776,
                "key.parsed_declaration" : "public mutating func use<M>(_ middleware: M) where M: Middleware",
                "key.parsed_scope.end" : 47,
                "key.parsed_scope.start" : 47,
                "key.typename" : "M.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor16MiddlewareConfigV3useyyxAA0B0RzlF1ML_xmfp"
              }
            ],
            "key.typename" : "<M where M : Middleware> (inout MiddlewareConfig) -> (M) -> ()",
            "key.typeusr" : "$Syyxc5Vapor10MiddlewareRzluD",
            "key.usr" : "s:5Vapor16MiddlewareConfigV3useyyxAA0B0RzlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal func resolve(for container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; [<Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 1937
              }
            ],
            "key.bodylength" : 58,
            "key.bodyoffset" : 2009,
            "key.doc.column" : 19,
            "key.doc.comment" : "Resolves the configured middleware for a given container",
            "key.doc.declaration" : "internal func resolve(for container: Container) throws -> [Middleware]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift\" line=\"52\" column=\"19\"><Name>resolve(for:)<\/Name><USR>s:5Vapor16MiddlewareConfigV7resolve3forSayAA0B0_pG7Service9Container_p_tKF<\/USR><Declaration>internal func resolve(for container: Container) throws -&gt; [Middleware]<\/Declaration><CommentParts><Abstract><Para>Resolves the configured middleware for a given container<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 52,
            "key.doc.name" : "resolve(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 61,
            "key.docoffset" : 1872,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Middleware\/MiddlewareConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>resolve<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype>[<ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>]<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 122,
            "key.name" : "resolve(for:)",
            "key.namelength" : 33,
            "key.nameoffset" : 1951,
            "key.offset" : 1946,
            "key.parsed_declaration" : "internal func resolve(for container: Container) throws -> [Middleware]",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 52,
            "key.substructure" : [

            ],
            "key.typename" : "(MiddlewareConfig) -> (Container) throws -> [Middleware]",
            "key.typeusr" : "$S3forSay5Vapor10Middleware_pG7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor16MiddlewareConfigV7resolve3forSayAA0B0_pG7Service9Container_p_tKF"
          }
        ],
        "key.typename" : "MiddlewareConfig.Type",
        "key.typeusr" : "$S5Vapor16MiddlewareConfigVmD",
        "key.usr" : "s:5Vapor16MiddlewareConfigV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/HTTPMethod+String.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 215,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>enum HTTPMethod : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.bodylength" : 191,
        "key.bodyoffset" : 22,
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>HTTPMethod<\/decl.name> : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 214,
        "key.modulename" : "NIOHTTP1",
        "key.name" : "HTTPMethod",
        "key.namelength" : 10,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var string: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 81
              }
            ],
            "key.bodylength" : 103,
            "key.bodyoffset" : 108,
            "key.doc.column" : 16,
            "key.doc.comment" : "`String` representation of this `HTTPMethod`.",
            "key.doc.declaration" : "public var string: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/HTTPMethod+String.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/HTTPMethod+String.swift\" line=\"3\" column=\"16\"><Name>string<\/Name><USR>s:8NIOHTTP110HTTPMethodO5VaporE6stringSSvp<\/USR><Declaration>public var string: String { get }<\/Declaration><CommentParts><Abstract><Para><codeVoice>String<\/codeVoice> representation of this <codeVoice>HTTPMethod<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 3,
            "key.doc.name" : "string",
            "key.doc.type" : "Other",
            "key.doclength" : 50,
            "key.docoffset" : 27,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/HTTPMethod+String.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>string<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 124,
            "key.name" : "string",
            "key.namelength" : 6,
            "key.nameoffset" : 92,
            "key.offset" : 88,
            "key.parsed_declaration" : "public var string: String",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 3,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:8NIOHTTP110HTTPMethodO5VaporE6stringSSvp"
          }
        ],
        "key.typename" : "HTTPMethod.Type",
        "key.typeusr" : "$S8NIOHTTP110HTTPMethodOmD",
        "key.usr" : "s:8NIOHTTP110HTTPMethodO"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 7231,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class Request : <Type usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/Type>, <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>, <Type usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/Type>, <Type usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type>, <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 1173
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1166
          }
        ],
        "key.bodylength" : 5905,
        "key.bodyoffset" : 1324,
        "key.doc.column" : 20,
        "key.doc.comment" : "`Request` is a service-container wrapper around an `HTTPRequest`.\n\nUse `Request` to access information about the `HTTPRequest` (`req.http`).\n\n    print(req.http.url.path) \/\/ \"\/hello\"\n\nYou can also use `Request` to create services you may need while generating a response (`req.make()`).\n\n    let client = try req.make(Client.self)\n    print(client) \/\/ Client\n    client.get(\"http:\/\/vapor.codes\")\n\n`Request` also carries a `ParametersContainer` for routing. Use `parameters` to fetch parameterized values.\n\n    router.get(\"hello\", String.parameter) { req -> String in\n        let name = try req.parameters.next(String.self)\n        return \"Hello, \\(name)!\"\n    }\n\n`Request` is `DatabaseConnectable`, meaning you can use it in-place of an actual `DatabaseConnection`.\nWhen used as a connection, the request will fetch a connection from the event loop's connection pool and\ncache the connection for the lifetime of the request.\n\n    let users = User.query(on: req).all()\n\nSee `HTTPRequest`, `Container`, `ParameterContainer`, and `DatabaseConnectable` for more information.",
        "key.doc.declaration" : "public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible",
        "key.doc.discussion" : [
          {
            "Para" : "Use `Request` to access information about the `HTTPRequest` (`req.http`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also use `Request` to create services you may need while generating a response (`req.make()`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` also carries a `ParametersContainer` for routing. Use `parameters` to fetch parameterized values."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` is `DatabaseConnectable`, meaning you can use it in-place of an actual `DatabaseConnection`. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPRequest`, `Container`, `ParameterContainer`, and `DatabaseConnectable` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"27\" column=\"20\"><Name>Request<\/Name><USR>s:5Vapor7RequestC<\/USR><Declaration>public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible<\/Declaration><CommentParts><Abstract><Para><codeVoice>Request<\/codeVoice> is a service-container wrapper around an <codeVoice>HTTPRequest<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Use <codeVoice>Request<\/codeVoice> to access information about the <codeVoice>HTTPRequest<\/codeVoice> (<codeVoice>req.http<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(req.http.url.path) \/\/ \"\/hello\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also use <codeVoice>Request<\/codeVoice> to create services you may need while generating a response (<codeVoice>req.make()<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let client = try req.make(Client.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(client) \/\/ Client]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[client.get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> also carries a <codeVoice>ParametersContainer<\/codeVoice> for routing. Use <codeVoice>parameters<\/codeVoice> to fetch parameterized values.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"hello\", String.parameter) { req -> String in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let name = try req.parameters.next(String.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> is <codeVoice>DatabaseConnectable<\/codeVoice>, meaning you can use it in-place of an actual <codeVoice>DatabaseConnection<\/codeVoice>. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let users = User.query(on: req).all()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPRequest<\/codeVoice>, <codeVoice>Container<\/codeVoice>, <codeVoice>ParameterContainer<\/codeVoice>, and <codeVoice>DatabaseConnectable<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 27,
        "key.doc.name" : "Request",
        "key.doc.type" : "Class",
        "key.doclength" : 1166,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 14,
            "key.offset" : 1194
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 19,
            "key.offset" : 1210
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 20,
            "key.offset" : 1231
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 14,
            "key.offset" : 1253
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 1269
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 28,
            "key.offset" : 1294
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Request<\/decl.name> : <ref.protocol usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/ref.protocol>, <ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/ref.protocol>, <ref.typealias usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/ref.typealias>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ContainerAlias"
          },
          {
            "key.name" : "DatabaseConnectable"
          },
          {
            "key.name" : "HTTPMessageContainer"
          },
          {
            "key.name" : "RequestCodable"
          },
          {
            "key.name" : "CustomStringConvertible"
          },
          {
            "key.name" : "CustomDebugStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 6051,
        "key.name" : "Request",
        "key.namelength" : 7,
        "key.nameoffset" : 1185,
        "key.offset" : 1179,
        "key.parsed_declaration" : "public final class Request: ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible",
        "key.parsed_scope.end" : 194,
        "key.parsed_scope.start" : 27,
        "key.runtime_name" : "_TtC4main7Request",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let aliasedContainer: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:7Service9ContainerP\">Container<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1359
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "See `ContainerAlias`.",
            "key.doc.declaration" : "public static let aliasedContainer: KeyPath<Vapor.Request, Container>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"29\" column=\"23\"><Name>aliasedContainer<\/Name><USR>s:5Vapor7RequestC16aliasedContainers7KeyPathCyAC7Service0D0_pGvpZ<\/USR><Declaration>public static let aliasedContainer: KeyPath&lt;Vapor.Request, Container&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ContainerAlias<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 29,
            "key.doc.name" : "aliasedContainer",
            "key.doc.type" : "Other",
            "key.doclength" : 26,
            "key.docoffset" : 1329,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>aliasedContainer<\/decl.name>: <decl.var.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class>, <ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol>&gt;<\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 76,
            "key.name" : "aliasedContainer",
            "key.namelength" : 16,
            "key.nameoffset" : 1377,
            "key.offset" : 1366,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service14ContainerAliasP07aliasedB0s7KeyPathCyxAA0B0_pGvpZ"
              }
            ],
            "key.parsed_declaration" : "public static let aliasedContainer: KeyPath<Request, Container> = \\.sharedContainer",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.typename" : "KeyPath<Request, Container>",
            "key.typeusr" : "$Ss7KeyPathCy5Vapor7RequestC7Service9Container_pGD",
            "key.usr" : "s:5Vapor7RequestC16aliasedContainers7KeyPathCyAC7Service0D0_pGvpZ"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: HTTP",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1451
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var http: <Type usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1567
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "The wrapped `HTTPRequest`.\n\n    print(req.http.url.path) \/\/ \"\/hello\"",
            "key.doc.declaration" : "public var http: HTTPRequest",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"37\" column=\"16\"><Name>http<\/Name><USR>s:5Vapor7RequestC4http4HTTP11HTTPRequestVvp<\/USR><Declaration>public var http: HTTPRequest<\/Declaration><CommentParts><Abstract><Para>The wrapped <codeVoice>HTTPRequest<\/codeVoice>.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(req.http.url.path) \/\/ \"\/hello\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 37,
            "key.doc.name" : "http",
            "key.doc.type" : "Other",
            "key.doclength" : 96,
            "key.docoffset" : 1467,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>http<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "http",
            "key.namelength" : 4,
            "key.nameoffset" : 1578,
            "key.offset" : 1574,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor20HTTPMessageContainerP4http0B4TypeQzvp"
              }
            ],
            "key.parsed_declaration" : "public var http: HTTPRequest",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 37,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "HTTPRequest",
            "key.typeusr" : "$S4HTTP11HTTPRequestVD",
            "key.usr" : "s:5Vapor7RequestC4http4HTTP11HTTPRequestVvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: Services",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1604
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let sharedContainer: <Type usr=\"s:7Service9ContainerP\">Container<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1784
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "This `Request`'s parent container. This is normally the event loop. The `Request` will redirect\nall calls to create services to this container.",
            "key.doc.declaration" : "public let sharedContainer: Container",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"43\" column=\"16\"><Name>sharedContainer<\/Name><USR>s:5Vapor7RequestC15sharedContainer7Service0D0_pvp<\/USR><Declaration>public let sharedContainer: Container<\/Declaration><CommentParts><Abstract><Para>This <codeVoice>Request<\/codeVoice>’s parent container. This is normally the event loop. The <codeVoice>Request<\/codeVoice> will redirect all calls to create services to this container.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 43,
            "key.doc.name" : "sharedContainer",
            "key.doc.type" : "Other",
            "key.doclength" : 156,
            "key.docoffset" : 1624,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sharedContainer<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "sharedContainer",
            "key.namelength" : 15,
            "key.nameoffset" : 1795,
            "key.offset" : 1791,
            "key.parsed_declaration" : "public let sharedContainer: Container",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 43,
            "key.typename" : "Container",
            "key.typeusr" : "$S7Service9Container_pD",
            "key.usr" : "s:5Vapor7RequestC15sharedContainer7Service0D0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let privateContainer: <Type usr=\"s:7Service12SubContainerP\">SubContainer<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2114
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "This request's private container. Use this container to create services that will be cached\nonly for the lifetime of this request. For all other services, use the request directly.\n\n    let authCache = try req.privateContainer.make(AuthCache.self)",
            "key.doc.declaration" : "public let privateContainer: SubContainer",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"50\" column=\"16\"><Name>privateContainer<\/Name><USR>s:5Vapor7RequestC16privateContainer7Service03SubD0_pvp<\/USR><Declaration>public let privateContainer: SubContainer<\/Declaration><CommentParts><Abstract><Para>This request’s private container. Use this container to create services that will be cached only for the lifetime of this request. For all other services, use the request directly.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let authCache = try req.privateContainer.make(AuthCache.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 50,
            "key.doc.name" : "privateContainer",
            "key.doc.type" : "Other",
            "key.doclength" : 283,
            "key.docoffset" : 1827,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>privateContainer<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7Service12SubContainerP\">SubContainer<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 34,
            "key.name" : "privateContainer",
            "key.namelength" : 16,
            "key.nameoffset" : 2125,
            "key.offset" : 2121,
            "key.parsed_declaration" : "public let privateContainer: SubContainer",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 50,
            "key.typename" : "SubContainer",
            "key.typeusr" : "$S7Service12SubContainer_pD",
            "key.usr" : "s:5Vapor7RequestC16privateContainer7Service03SubD0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal var hasActiveConnections: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 2297
              }
            ],
            "key.doc.column" : 18,
            "key.doc.comment" : "`true` if this request has active connections. This is used to avoid unnecessarily\ninvoking cached connections release.",
            "key.doc.declaration" : "internal var hasActiveConnections: Bool",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"54\" column=\"18\"><Name>hasActiveConnections<\/Name><USR>s:5Vapor7RequestC20hasActiveConnectionsSbvp<\/USR><Declaration>internal var hasActiveConnections: Bool<\/Declaration><CommentParts><Abstract><Para><codeVoice>true<\/codeVoice> if this request has active connections. This is used to avoid unnecessarily invoking cached connections release.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 54,
            "key.doc.name" : "hasActiveConnections",
            "key.doc.type" : "Other",
            "key.doclength" : 132,
            "key.docoffset" : 2161,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hasActiveConnections<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "hasActiveConnections",
            "key.namelength" : 20,
            "key.nameoffset" : 2310,
            "key.offset" : 2306,
            "key.parsed_declaration" : "internal var hasActiveConnections: Bool",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 54,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:5Vapor7RequestC20hasActiveConnectionsSbvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: Descriptions",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2345
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2408
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 2440,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `CustomStringConvertible`.",
            "key.doc.declaration" : "public var description: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"59\" column=\"16\"><Name>description<\/Name><USR>s:5Vapor7RequestC11descriptionSSvp<\/USR><Declaration>public var description: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 59,
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 2369,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 63,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 2419,
            "key.offset" : 2415,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var description: String",
            "key.parsed_scope.end" : 61,
            "key.parsed_scope.start" : 59,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor7RequestC11descriptionSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var debugDescription: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2528
              }
            ],
            "key.bodylength" : 42,
            "key.bodyoffset" : 2565,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `CustomDebugStringConvertible`.",
            "key.doc.declaration" : "public var debugDescription: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"64\" column=\"16\"><Name>debugDescription<\/Name><USR>s:5Vapor7RequestC16debugDescriptionSSvp<\/USR><Declaration>public var debugDescription: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>CustomDebugStringConvertible<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 64,
            "key.doc.name" : "debugDescription",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 2484,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>debugDescription<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 73,
            "key.name" : "debugDescription",
            "key.namelength" : 16,
            "key.nameoffset" : 2539,
            "key.offset" : 2535,
            "key.overrides" : [
              {
                "key.usr" : "s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var debugDescription: String",
            "key.parsed_scope.end" : 66,
            "key.parsed_scope.start" : 64,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor7RequestC16debugDescriptionSSvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Content",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2617
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var query: <Type usr=\"s:5Vapor14QueryContainerV\">QueryContainer<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3082
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 3116,
            "key.doc.column" : 16,
            "key.doc.comment" : "Helper for encoding and decoding data from an HTTP request query string.\n\n    let flags = try req.query.decode(Flags.self)\n    print(flags) \/\/ Flags\n\nThis helper can also decode single values from specific key paths.\n\n    let name = try req.query.get(String.self, at: \"user\", \"name\")\n    print(name) \/\/ String\n\nSee `QueryContainer` methods for more information.",
            "key.doc.declaration" : "public var query: QueryContainer { get }",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "This helper can also decode single values from specific key paths."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `QueryContainer` methods for more information."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"81\" column=\"16\"><Name>query<\/Name><USR>s:5Vapor7RequestC5queryAA14QueryContainerVvp<\/USR><Declaration>public var query: QueryContainer { get }<\/Declaration><CommentParts><Abstract><Para>Helper for encoding and decoding data from an HTTP request query string.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flags = try req.query.decode(Flags.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flags) \/\/ Flags]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>This helper can also decode single values from specific key paths.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = try req.query.get(String.self, at: \"user\", \"name\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(name) \/\/ String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>QueryContainer<\/codeVoice> methods for more information.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 81,
            "key.doc.name" : "query",
            "key.doc.type" : "Other",
            "key.doclength" : 442,
            "key.docoffset" : 2636,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>query<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor14QueryContainerV\">QueryContainer<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.name" : "query",
            "key.namelength" : 5,
            "key.nameoffset" : 3093,
            "key.offset" : 3089,
            "key.parsed_declaration" : "public var query: QueryContainer",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 81,
            "key.typename" : "QueryContainer",
            "key.typeusr" : "$S5Vapor14QueryContainerVD",
            "key.usr" : "s:5Vapor7RequestC5queryAA14QueryContainerVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var content: <Type usr=\"s:5Vapor16ContentContainerV\">ContentContainer<\/Type>&lt;<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3657
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 3704,
            "key.doc.column" : 16,
            "key.doc.comment" : "Helper for encoding and decoding `Content` from an HTTP message.\n\nThis helper can _encode_ data to the HTTP message. Uses the Content's default media type if none is supplied.\n\n    try req.content.encode(user)\n\nThis helper can also _decode_ data from the HTTP message.\n\n    let user = try req.content.decode(User.self)\n    print(user) \/\/\/ Future<User>\n\nSee `ContentContainer` methods for more information.",
            "key.doc.declaration" : "public var content: ContentContainer<Request> { get }",
            "key.doc.discussion" : [
              {
                "Para" : "This helper can  data to the HTTP message. Uses the Content’s default media type if none is supplied."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "This helper can also  data from the HTTP message."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `ContentContainer` methods for more information."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"97\" column=\"16\"><Name>content<\/Name><USR>s:5Vapor7RequestC7contentAA16ContentContainerVyACGvp<\/USR><Declaration>public var content: ContentContainer&lt;Request&gt; { get }<\/Declaration><CommentParts><Abstract><Para>Helper for encoding and decoding <codeVoice>Content<\/codeVoice> from an HTTP message.<\/Para><\/Abstract><Discussion><Para>This helper can <emphasis>encode<\/emphasis> data to the HTTP message. Uses the Content’s default media type if none is supplied.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try req.content.encode(user)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>This helper can also <emphasis>decode<\/emphasis> data from the HTTP message.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user = try req.content.decode(User.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(user) \/\/\/ Future<User>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ContentContainer<\/codeVoice> methods for more information.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 97,
            "key.doc.name" : "content",
            "key.doc.type" : "Other",
            "key.doclength" : 493,
            "key.docoffset" : 3160,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>content<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor16ContentContainerV\">ContentContainer<\/ref.struct>&lt;<ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 73,
            "key.name" : "content",
            "key.namelength" : 7,
            "key.nameoffset" : 3668,
            "key.offset" : 3664,
            "key.parsed_declaration" : "public var content: ContentContainer<Request>",
            "key.parsed_scope.end" : 99,
            "key.parsed_scope.start" : 97,
            "key.typename" : "ContentContainer<Request>",
            "key.typeusr" : "$S5Vapor16ContentContainerVyAA7RequestCGD",
            "key.usr" : "s:5Vapor7RequestC7contentAA16ContentContainerVyACGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Routing",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3746
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var parameters: <Type usr=\"s:5Vapor19ParametersContainerV\">ParametersContainer<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3906
              }
            ],
            "key.bodylength" : 32,
            "key.bodyoffset" : 3950,
            "key.doc.column" : 16,
            "key.doc.comment" : "Helper for accessing route parameters from this HTTP request.\n\n    let id = try req.parameters.next(Int.self)",
            "key.doc.declaration" : "public var parameters: ParametersContainer { get }",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"107\" column=\"16\"><Name>parameters<\/Name><USR>s:5Vapor7RequestC10parametersAA19ParametersContainerVvp<\/USR><Declaration>public var parameters: ParametersContainer { get }<\/Declaration><CommentParts><Abstract><Para>Helper for accessing route parameters from this HTTP request.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 107,
            "key.doc.name" : "parameters",
            "key.doc.type" : "Other",
            "key.doclength" : 137,
            "key.docoffset" : 3765,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>parameters<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor19ParametersContainerV\">ParametersContainer<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 70,
            "key.name" : "parameters",
            "key.namelength" : 10,
            "key.nameoffset" : 3917,
            "key.offset" : 3913,
            "key.parsed_declaration" : "public var parameters: ParametersContainer",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 107,
            "key.typename" : "ParametersContainer",
            "key.typeusr" : "$S5Vapor19ParametersContainerVD",
            "key.usr" : "s:5Vapor7RequestC10parametersAA19ParametersContainerVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal var _parameters: <Type usr=\"s:7Routing10ParametersV\">Parameters<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 4038
              }
            ],
            "key.doc.column" : 18,
            "key.doc.comment" : "Internal storage for routing parameters.",
            "key.doc.declaration" : "internal var _parameters: Parameters",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"112\" column=\"18\"><Name>_parameters<\/Name><USR>s:5Vapor7RequestC11_parameters7Routing10ParametersVvp<\/USR><Declaration>internal var _parameters: Parameters<\/Declaration><CommentParts><Abstract><Para>Internal storage for routing parameters.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 112,
            "key.doc.name" : "_parameters",
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 3989,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>_parameters<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Routing10ParametersV\">Parameters<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.name" : "_parameters",
            "key.namelength" : 11,
            "key.nameoffset" : 4051,
            "key.offset" : 4047,
            "key.parsed_declaration" : "internal var _parameters: Parameters",
            "key.parsed_scope.end" : 112,
            "key.parsed_scope.start" : 112,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Parameters",
            "key.typeusr" : "$S7Routing10ParametersVD",
            "key.usr" : "s:5Vapor7RequestC11_parameters7Routing10ParametersVvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: Init",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 4083
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(http: <Type usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/Type> = default, using container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4131
              }
            ],
            "key.bodylength" : 213,
            "key.bodyoffset" : 4201,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `Request`.",
            "key.doc.declaration" : "public init(http: HTTPRequest = default, using container: Container)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"117\" column=\"12\"><Name>init(http:using:)<\/Name><USR>s:5Vapor7RequestC4http5usingAC4HTTP11HTTPRequestV_7Service9Container_ptcfc<\/USR><Declaration>public init(http: HTTPRequest = default, using container: Container)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 117,
            "key.doc.name" : "init(http:using:)",
            "key.doc.type" : "Function",
            "key.doclength" : 28,
            "key.docoffset" : 4099,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>http<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 277,
            "key.name" : "init(http:using:)",
            "key.namelength" : 61,
            "key.nameoffset" : 4138,
            "key.offset" : 4138,
            "key.parsed_declaration" : "public init(http: HTTPRequest = .init(), using container: Container)",
            "key.parsed_scope.end" : 123,
            "key.parsed_scope.start" : 117,
            "key.substructure" : [

            ],
            "key.typename" : "(Request.Type) -> (HTTPRequest, Container) -> Request",
            "key.typeusr" : "$S4http5using5Vapor7RequestC4HTTP11HTTPRequestV_7Service9Container_ptcD",
            "key.usr" : "s:5Vapor7RequestC4http5usingAC4HTTP11HTTPRequestV_7Service9Container_ptcfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: Response",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 4424
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func makeResponse(http: <Type usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/Type> = default) -&gt; <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4897
              }
            ],
            "key.bodylength" : 65,
            "key.bodyoffset" : 4965,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Response` on the same container as this `Request`.\n\n    router.get(\"greeting2\") { req in\n        let res = req.makeResponse()\n        try res.content.encode(\"hello\", as: .plaintext)\n        return res\n    }\n\n- parameters:\n    - http: Optional `HTTPResponse` to use.\n- returns: A new, empty 200 OK `Response` on the same container as the current `Request`.",
            "key.doc.declaration" : "public func makeResponse(http: HTTPResponse = default) -> Response",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"138\" column=\"17\"><Name>makeResponse(http:)<\/Name><USR>s:5Vapor7RequestC12makeResponse4httpAA0D0C4HTTP12HTTPResponseV_tF<\/USR><Declaration>public func makeResponse(http: HTTPResponse = default) -&gt; Response<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Response<\/codeVoice> on the same container as this <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>http<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Optional <codeVoice>HTTPResponse<\/codeVoice> to use.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A new, empty 200 OK <codeVoice>Response<\/codeVoice> on the same container as the current <codeVoice>Request<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"greeting2\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let res = req.makeResponse()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try res.content.encode(\"hello\", as: .plaintext)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return res]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 138,
            "key.doc.name" : "makeResponse(http:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Optional `HTTPResponse` to use."
                  }
                ],
                "name" : "http"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A new, empty 200 OK `Response` on the same container as the current `Request`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 449,
            "key.docoffset" : 4444,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeResponse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>http<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 127,
            "key.name" : "makeResponse(http:)",
            "key.namelength" : 42,
            "key.nameoffset" : 4909,
            "key.offset" : 4904,
            "key.parsed_declaration" : "public func makeResponse(http: HTTPResponse = .init()) -> Response",
            "key.parsed_scope.end" : 140,
            "key.parsed_scope.start" : 138,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor7RequestC12makeResponse_2asAA0D0C4HTTP29LosslessHTTPBodyRepresentable_p_4Core9MediaTypeVtF\">makeResponse(_:as:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Request) -> (HTTPResponse) -> Response",
            "key.typeusr" : "$S4http5Vapor8ResponseC4HTTP12HTTPResponseV_tcD",
            "key.usr" : "s:5Vapor7RequestC12makeResponse4httpAA0D0C4HTTP12HTTPResponseV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func makeResponse(_ body: <Type usr=\"s:4HTTP29LosslessHTTPBodyRepresentableP\">LosslessHTTPBodyRepresentable<\/Type>, as contentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> = default) -&gt; <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5371
              }
            ],
            "key.bodylength" : 123,
            "key.bodyoffset" : 5488,
            "key.doc.column" : 17,
            "key.doc.comment" : "Generate a `Response` for a `HTTPBody` convertible object using the supplied `MediaType`.\n\n    router.get(\"html\") { req in\n        return req.makeResponse(\"<h1>Hello, world!<\/h1>\", as: .html)\n    }\n\n- parameters:\n    - type: The type of data to return the container with.",
            "key.doc.declaration" : "public func makeResponse(_ body: LosslessHTTPBodyRepresentable, as contentType: MediaType = default) -> Response",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"150\" column=\"17\"><Name>makeResponse(_:as:)<\/Name><USR>s:5Vapor7RequestC12makeResponse_2asAA0D0C4HTTP29LosslessHTTPBodyRepresentable_p_4Core9MediaTypeVtF<\/USR><Declaration>public func makeResponse(_ body: LosslessHTTPBodyRepresentable, as contentType: MediaType = default) -&gt; Response<\/Declaration><CommentParts><Abstract><Para>Generate a <codeVoice>Response<\/codeVoice> for a <codeVoice>HTTPBody<\/codeVoice> convertible object using the supplied <codeVoice>MediaType<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>type<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The type of data to return the container with.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"html\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return req.makeResponse(\"<h1>Hello, world!<\/h1>\", as: .html)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 150,
            "key.doc.name" : "makeResponse(_:as:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The type of data to return the container with."
                  }
                ],
                "name" : "type"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 330,
            "key.docoffset" : 5037,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeResponse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>body<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP29LosslessHTTPBodyRepresentableP\">LosslessHTTPBodyRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>as<\/decl.var.parameter.argument_label> <decl.var.parameter.name>contentType<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 234,
            "key.name" : "makeResponse(_:as:)",
            "key.namelength" : 91,
            "key.nameoffset" : 5383,
            "key.offset" : 5378,
            "key.parsed_declaration" : "public func makeResponse(_ body: LosslessHTTPBodyRepresentable, as contentType: MediaType = .plainText) -> Response",
            "key.parsed_scope.end" : 154,
            "key.parsed_scope.start" : 150,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor7RequestC12makeResponse4httpAA0D0C4HTTP12HTTPResponseV_tF\">makeResponse(http:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>res<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 47,
                "key.name" : "res",
                "key.namelength" : 3,
                "key.nameoffset" : 5501,
                "key.offset" : 5497,
                "key.parsed_declaration" : "let res = makeResponse(http: .init(body: body))",
                "key.parsed_scope.end" : 151,
                "key.parsed_scope.start" : 151,
                "key.typename" : "Response",
                "key.typeusr" : "$S5Vapor8ResponseCD",
                "key.usr" : "s:5Vapor7RequestC12makeResponse_2asAA0D0C4HTTP29LosslessHTTPBodyRepresentable_p_4Core9MediaTypeVtF3resL_AGvp"
              }
            ],
            "key.typename" : "(Request) -> (LosslessHTTPBodyRepresentable, MediaType) -> Response",
            "key.typeusr" : "$S_2as5Vapor8ResponseC4HTTP29LosslessHTTPBodyRepresentable_p_4Core9MediaTypeVtcD",
            "key.usr" : "s:5Vapor7RequestC12makeResponse_2asAA0D0C4HTTP29LosslessHTTPBodyRepresentable_p_4Core9MediaTypeVtF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: Database",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 5621
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func databaseConnection&lt;D&gt;(to database: <Type usr=\"s:11DatabaseKit0A10IdentifierV\">DatabaseIdentifier<\/Type>&lt;<Type usr=\"s:5Vapor7RequestC18databaseConnection2to3NIO15EventLoopFutureCy0D0QzG11DatabaseKit0J10IdentifierVyxGSg_tAL0J0RzlF1DL_xmfp\">D<\/Type>&gt;?) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7RequestC18databaseConnection2to3NIO15EventLoopFutureCy0D0QzG11DatabaseKit0J10IdentifierVyxGSg_tAL0J0RzlF1DL_xmfp\">D<\/Type>.<Type usr=\"s:11DatabaseKit0A0P10ConnectionQa\">Connection<\/Type>&gt; where D : <Type usr=\"s:11DatabaseKit0A0P\">Database<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5676
              }
            ],
            "key.bodylength" : 912,
            "key.bodyoffset" : 5772,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `DatabaseConnectable`.",
            "key.doc.declaration" : "public func databaseConnection<D>(to database: DatabaseIdentifier<D>?) -> Future<D.Connection> where D : Database",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"159\" column=\"17\"><Name>databaseConnection(to:)<\/Name><USR>s:5Vapor7RequestC18databaseConnection2to3NIO15EventLoopFutureCy0D0QzG11DatabaseKit0J10IdentifierVyxGSg_tAL0J0RzlF<\/USR><Declaration>public func databaseConnection&lt;D&gt;(to database: DatabaseIdentifier&lt;D&gt;?) -&gt; Future&lt;D.Connection&gt; where D : Database<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>DatabaseConnectable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 159,
            "key.doc.name" : "databaseConnection(to:)",
            "key.doc.type" : "Function",
            "key.doclength" : 31,
            "key.docoffset" : 5641,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>databaseConnection<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor7RequestC18databaseConnection2to3NIO15EventLoopFutureCy0D0QzG11DatabaseKit0J10IdentifierVyxGSg_tAL0J0RzlF1DL_xmfp\"><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>database<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11DatabaseKit0A10IdentifierV\">DatabaseIdentifier<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:5Vapor7RequestC18databaseConnection2to3NIO15EventLoopFutureCy0D0QzG11DatabaseKit0J10IdentifierVyxGSg_tAL0J0RzlF1DL_xmfp\">D<\/ref.generic_type_param>&gt;?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor7RequestC18databaseConnection2to3NIO15EventLoopFutureCy0D0QzG11DatabaseKit0J10IdentifierVyxGSg_tAL0J0RzlF1DL_xmfp\">D<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:11DatabaseKit0A0P10ConnectionQa\">Connection<\/ref.associatedtype>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>D : <ref.protocol usr=\"s:11DatabaseKit0A0P\">Database<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1002,
            "key.name" : "databaseConnection(to:)",
            "key.namelength" : 58,
            "key.nameoffset" : 5688,
            "key.offset" : 5683,
            "key.overrides" : [
              {
                "key.usr" : "s:11DatabaseKit0A11ConnectableP18databaseConnection2to3NIO15EventLoopFutureCy0E0Qyd__GAA0A10IdentifierVyqd__GSg_tAA0A0Rd__lF"
              }
            ],
            "key.parsed_declaration" : "public func databaseConnection<D>(to database: DatabaseIdentifier<D>?) -> Future<D.Connection>",
            "key.parsed_scope.end" : 174,
            "key.parsed_scope.start" : 159,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>D<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>D<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "D",
                "key.namelength" : 1,
                "key.nameoffset" : 5707,
                "key.offset" : 5707,
                "key.parsed_declaration" : "public func databaseConnection<D>(to database: DatabaseIdentifier<D>?) -> Future<D.Connection>",
                "key.parsed_scope.end" : 159,
                "key.parsed_scope.start" : 159,
                "key.typename" : "D.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor7RequestC18databaseConnection2to3NIO15EventLoopFutureCy0D0QzG11DatabaseKit0J10IdentifierVyxGSg_tAL0J0RzlF1DL_xmfp"
              }
            ],
            "key.typename" : "<D where D : Database> (Request) -> (DatabaseIdentifier<D>?) -> EventLoopFuture<D.Connection>",
            "key.typeusr" : "$S2to3NIO15EventLoopFutureCy10ConnectionQzG11DatabaseKit0G10IdentifierVyxGSg_tcAH0G0RzluD",
            "key.usr" : "s:5Vapor7RequestC18databaseConnection2to3NIO15EventLoopFutureCy0D0QzG11DatabaseKit0J10IdentifierVyxGSg_tAL0J0RzlF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 21,
            "key.name" : "MARK: Request Codable",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 6694
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func decode(from request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6753
              }
            ],
            "key.bodylength" : 56,
            "key.bodyoffset" : 6829,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `RequestDecodable`.",
            "key.doc.declaration" : "public static func decode(from request: Request) throws -> Future<Request>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"179\" column=\"24\"><Name>decode(from:)<\/Name><USR>s:5Vapor7RequestC6decode4from3NIO15EventLoopFutureCyACGAC_tKFZ<\/USR><Declaration>public static func decode(from request: Request) throws -&gt; Future&lt;Request&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>RequestDecodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 179,
            "key.doc.name" : "decode(from:)",
            "key.doc.type" : "Function",
            "key.doclength" : 28,
            "key.docoffset" : 6721,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 126,
            "key.name" : "decode(from:)",
            "key.namelength" : 29,
            "key.nameoffset" : 6772,
            "key.offset" : 6760,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor16RequestDecodableP6decode4from3NIO15EventLoopFutureCyxGAA0B0C_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func decode(from request: Request) throws -> Future<Request>",
            "key.parsed_scope.end" : 181,
            "key.parsed_scope.start" : 179,
            "key.substructure" : [

            ],
            "key.typename" : "(Request.Type) -> (Request) throws -> EventLoopFuture<Request>",
            "key.typeusr" : "$S4from3NIO15EventLoopFutureCy5Vapor7RequestCGAG_tKcD",
            "key.usr" : "s:5Vapor7RequestC6decode4from3NIO15EventLoopFutureCyACGAC_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(using container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6924
              }
            ],
            "key.bodylength" : 55,
            "key.bodyoffset" : 6998,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `RequestEncodable`.",
            "key.doc.declaration" : "public func encode(using container: Container) throws -> Future<Request>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"184\" column=\"17\"><Name>encode(using:)<\/Name><USR>s:5Vapor7RequestC6encode5using3NIO15EventLoopFutureCyACG7Service9Container_p_tKF<\/USR><Declaration>public func encode(using container: Container) throws -&gt; Future&lt;Request&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>RequestEncodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 184,
            "key.doc.name" : "encode(using:)",
            "key.doc.type" : "Function",
            "key.doclength" : 28,
            "key.docoffset" : 6892,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 123,
            "key.name" : "encode(using:)",
            "key.namelength" : 34,
            "key.nameoffset" : 6936,
            "key.offset" : 6931,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor16RequestEncodableP6encode5using3NIO15EventLoopFutureCyAA0B0CG7Service9Container_p_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(using container: Container) throws -> Future<Request>",
            "key.parsed_scope.end" : 186,
            "key.parsed_scope.start" : 184,
            "key.substructure" : [

            ],
            "key.typename" : "(Request) -> (Container) throws -> EventLoopFuture<Request>",
            "key.typeusr" : "$S5using3NIO15EventLoopFutureCy5Vapor7RequestCG7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor7RequestC6encode5using3NIO15EventLoopFutureCyACG7Service9Container_p_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>deinit<\/Declaration>",
            "key.bodylength" : 110,
            "key.bodyoffset" : 7117,
            "key.doc.column" : 5,
            "key.doc.comment" : "Called when the `Request` deinitializes.",
            "key.doc.declaration" : "",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"189\" column=\"5\"><Name>deinit<\/Name><USR>s:5Vapor7RequestCfd<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Called when the <codeVoice>Request<\/codeVoice> deinitializes.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 189,
            "key.doc.name" : "deinit",
            "key.doc.type" : "Function",
            "key.doclength" : 45,
            "key.docoffset" : 7060,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
            "key.fully_annotated_decl" : "<decl.function.destructor><syntaxtype.keyword>deinit<\/syntaxtype.keyword><\/decl.function.destructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 119,
            "key.name" : "deinit",
            "key.namelength" : 6,
            "key.nameoffset" : 7109,
            "key.offset" : 7109,
            "key.parsed_declaration" : "deinit",
            "key.parsed_scope.end" : 193,
            "key.parsed_scope.start" : 189,
            "key.substructure" : [

            ],
            "key.typename" : "(Request) -> () -> ()",
            "key.typeusr" : "$SyycD",
            "key.usr" : "s:5Vapor7RequestCfd"
          }
        ],
        "key.typename" : "Request.Type",
        "key.typeusr" : "$S5Vapor7RequestCmD",
        "key.usr" : "s:5Vapor7RequestC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1363,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol RequestDecodable<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 41
          }
        ],
        "key.bodylength" : 284,
        "key.bodyoffset" : 75,
        "key.doc.column" : 17,
        "key.doc.comment" : "Can be initialized from a `Request`.",
        "key.doc.declaration" : "public protocol RequestDecodable",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift\" line=\"2\" column=\"17\"><Name>RequestDecodable<\/Name><USR>s:5Vapor16RequestDecodableP<\/USR><Declaration>public protocol RequestDecodable<\/Declaration><CommentParts><Abstract><Para>Can be initialized from a <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "RequestDecodable",
        "key.doc.type" : "Class",
        "key.doclength" : 41,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RequestDecodable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 312,
        "key.name" : "RequestDecodable",
        "key.namelength" : 16,
        "key.nameoffset" : 57,
        "key.offset" : 48,
        "key.parsed_declaration" : "public protocol RequestDecodable",
        "key.parsed_scope.end" : 9,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main16RequestDecodable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func decode(from req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor16RequestDecodableP4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 17,
            "key.doc.comment" : "Decodes an instance of `Self` asynchronously from a `Request`.\n\n- parameters:\n    - req: The `Request` to initialize from.\n- returns: A `Future` containing an instance of `Self`.",
            "key.doc.declaration" : "static func decode(from req: Request) throws -> Future<Self>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift\" line=\"8\" column=\"17\"><Name>decode(from:)<\/Name><USR>s:5Vapor16RequestDecodableP6decode4from3NIO15EventLoopFutureCyxGAA0B0C_tKFZ<\/USR><Declaration>static func decode(from req: Request) throws -&gt; Future&lt;Self&gt;<\/Declaration><CommentParts><Abstract><Para>Decodes an instance of <codeVoice>Self<\/codeVoice> asynchronously from a <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Request<\/codeVoice> to initialize from.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing an instance of <codeVoice>Self<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "decode(from:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Request` to initialize from."
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing an instance of `Self`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 214,
            "key.docoffset" : 80,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor16RequestDecodableP4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 60,
            "key.name" : "decode(from:)",
            "key.namelength" : 25,
            "key.nameoffset" : 310,
            "key.offset" : 298,
            "key.parsed_declaration" : "static func decode(from req: Request) throws -> Future<Self>",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RequestDecodable> (Self.Type) -> (Request) throws -> EventLoopFuture<Self>",
            "key.typeusr" : "$S4from3NIO15EventLoopFutureCyxG5Vapor7RequestC_tKcD",
            "key.usr" : "s:5Vapor16RequestDecodableP6decode4from3NIO15EventLoopFutureCyxGAA0B0C_tKFZ"
          }
        ],
        "key.typename" : "RequestDecodable.Protocol",
        "key.typeusr" : "$S5Vapor16RequestDecodable_pmD",
        "key.usr" : "s:5Vapor16RequestDecodableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol RequestEncodable<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 401
          }
        ],
        "key.bodylength" : 302,
        "key.bodyoffset" : 435,
        "key.doc.column" : 17,
        "key.doc.comment" : "Can convert `self` to a `Request`.",
        "key.doc.declaration" : "public protocol RequestEncodable",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift\" line=\"12\" column=\"17\"><Name>RequestEncodable<\/Name><USR>s:5Vapor16RequestEncodableP<\/USR><Declaration>public protocol RequestEncodable<\/Declaration><CommentParts><Abstract><Para>Can convert <codeVoice>self<\/codeVoice> to a <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 12,
        "key.doc.name" : "RequestEncodable",
        "key.doc.type" : "Class",
        "key.doclength" : 39,
        "key.docoffset" : 362,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RequestEncodable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 330,
        "key.name" : "RequestEncodable",
        "key.namelength" : 16,
        "key.nameoffset" : 417,
        "key.offset" : 408,
        "key.parsed_declaration" : "public protocol RequestEncodable",
        "key.parsed_scope.end" : 19,
        "key.parsed_scope.start" : 12,
        "key.runtime_name" : "_TtP4main16RequestEncodable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func encode(using container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Encodes an instance of `Self` asynchronously to a `Request`.\n\n- parameters:\n    - container: `Container` to use for initializing the `Request`.\n- returns: A `Future` containing the `Request`.",
            "key.doc.declaration" : "func encode(using container: Container) throws -> Future<Request>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift\" line=\"18\" column=\"10\"><Name>encode(using:)<\/Name><USR>s:5Vapor16RequestEncodableP6encode5using3NIO15EventLoopFutureCyAA0B0CG7Service9Container_p_tKF<\/USR><Declaration>func encode(using container: Container) throws -&gt; Future&lt;Request&gt;<\/Declaration><CommentParts><Abstract><Para>Encodes an instance of <codeVoice>Self<\/codeVoice> asynchronously to a <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>container<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Container<\/codeVoice> to use for initializing the <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the <codeVoice>Request<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 18,
            "key.doc.name" : "encode(using:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Container` to use for initializing the `Request`."
                  }
                ],
                "name" : "container"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the `Request`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 227,
            "key.docoffset" : 440,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 65,
            "key.name" : "encode(using:)",
            "key.namelength" : 34,
            "key.nameoffset" : 676,
            "key.offset" : 671,
            "key.parsed_declaration" : "func encode(using container: Container) throws -> Future<Request>",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RequestEncodable> (Self) -> (Container) throws -> EventLoopFuture<Request>",
            "key.typeusr" : "$S5using3NIO15EventLoopFutureCy5Vapor7RequestCG7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor16RequestEncodableP6encode5using3NIO15EventLoopFutureCyAA0B0CG7Service9Container_p_tKF"
          }
        ],
        "key.typename" : "RequestEncodable.Protocol",
        "key.typeusr" : "$S5Vapor16RequestEncodable_pmD",
        "key.usr" : "s:5Vapor16RequestEncodableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias RequestCodable = <Type usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/Type> &amp; <Type usr=\"s:5Vapor16RequestEncodableP\">RequestEncodable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 786
          }
        ],
        "key.doc.column" : 18,
        "key.doc.comment" : "Can be converted to and from a `Request`.",
        "key.doc.declaration" : "public typealias RequestCodable = RequestDecodable & RequestEncodable",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift\" line=\"22\" column=\"18\"><Name>RequestCodable<\/Name><USR>s:5Vapor14RequestCodablea<\/USR><Declaration>public typealias RequestCodable = RequestDecodable &amp; RequestEncodable<\/Declaration><CommentParts><Abstract><Para>Can be converted to and from a <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 22,
        "key.doc.name" : "RequestCodable",
        "key.doc.type" : "Other",
        "key.doclength" : 46,
        "key.docoffset" : 740,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>RequestCodable<\/decl.name> = <ref.protocol usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/ref.protocol> &amp; <ref.protocol usr=\"s:5Vapor16RequestEncodableP\">RequestEncodable<\/ref.protocol><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 62,
        "key.name" : "RequestCodable",
        "key.namelength" : 14,
        "key.nameoffset" : 803,
        "key.offset" : 793,
        "key.parsed_declaration" : "public typealias RequestCodable = RequestDecodable & RequestEncodable",
        "key.parsed_scope.end" : 22,
        "key.parsed_scope.start" : 22,
        "key.typename" : "RequestDecodable & RequestEncodable.Protocol",
        "key.typeusr" : "$S5Vapor16RequestDecodable_AA0B9EncodablepmD",
        "key.usr" : "s:5Vapor14RequestCodablea"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 26,
        "key.name" : "MARK: Default Conformances",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 860
      },
      {
        "key.annotated_decl" : "<Declaration>struct HTTPRequest : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
        "key.bodylength" : 434,
        "key.bodyoffset" : 927,
        "key.doc.declaration" : "struct HTTPRequest : HTTPMessage",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPClient` and `HTTPServer`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>HTTPRequest<\/Name><USR>s:4HTTP11HTTPRequestV<\/USR><Declaration>struct HTTPRequest : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>An HTTP request from a client to a server.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let httpReq = HTTPRequest(method: .GET, url: \"\/hello\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPClient<\/codeVoice> and <codeVoice>HTTPServer<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "HTTPRequest",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 14,
            "key.offset" : 911
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>HTTPRequest<\/decl.name> : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "RequestCodable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 474,
        "key.modulename" : "HTTP",
        "key.name" : "HTTPRequest",
        "key.namelength" : 11,
        "key.nameoffset" : 898,
        "key.offset" : 888,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func decode(from req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 964
              }
            ],
            "key.bodylength" : 71,
            "key.bodyoffset" : 1049,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `RequestDecodable`.",
            "key.doc.declaration" : "public static func decode(from req: Request) throws -> EventLoopFuture<HTTPRequest>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift\" line=\"28\" column=\"24\"><Name>decode(from:)<\/Name><USR>s:4HTTP11HTTPRequestV5VaporE6decode4from3NIO15EventLoopFutureCyACGAD7RequestC_tKFZ<\/USR><Declaration>public static func decode(from req: Request) throws -&gt; EventLoopFuture&lt;HTTPRequest&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>RequestDecodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 28,
            "key.doc.name" : "decode(from:)",
            "key.doc.type" : "Function",
            "key.doclength" : 28,
            "key.docoffset" : 932,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 150,
            "key.name" : "decode(from:)",
            "key.namelength" : 25,
            "key.nameoffset" : 983,
            "key.offset" : 971,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor16RequestDecodableP6decode4from3NIO15EventLoopFutureCyxGAA0B0C_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func decode(from req: Request) throws -> EventLoopFuture<HTTPRequest>",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 28,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPRequest.Type) -> (Request) throws -> EventLoopFuture<HTTPRequest>",
            "key.typeusr" : "$S4from3NIO15EventLoopFutureCy4HTTP11HTTPRequestVG5Vapor7RequestC_tKcD",
            "key.usr" : "s:4HTTP11HTTPRequestV5VaporE6decode4from3NIO15EventLoopFutureCyACGAD7RequestC_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(using container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1159
              }
            ],
            "key.bodylength" : 126,
            "key.bodyoffset" : 1233,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `RequestEncodable`.",
            "key.doc.declaration" : "public func encode(using container: Container) throws -> Future<Request>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift\" line=\"33\" column=\"17\"><Name>encode(using:)<\/Name><USR>s:4HTTP11HTTPRequestV5VaporE6encode5using3NIO15EventLoopFutureCyAD7RequestCG7Service9Container_p_tKF<\/USR><Declaration>public func encode(using container: Container) throws -&gt; Future&lt;Request&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>RequestEncodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 33,
            "key.doc.name" : "encode(using:)",
            "key.doc.type" : "Function",
            "key.doclength" : 28,
            "key.docoffset" : 1127,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/RequestCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 194,
            "key.name" : "encode(using:)",
            "key.namelength" : 34,
            "key.nameoffset" : 1171,
            "key.offset" : 1166,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor16RequestEncodableP6encode5using3NIO15EventLoopFutureCyAA0B0CG7Service9Container_p_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(using container: Container) throws -> Future<Request>",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 33,
            "key.substructure" : [

            ],
            "key.typename" : "(HTTPRequest) -> (Container) throws -> EventLoopFuture<Request>",
            "key.typeusr" : "$S5using3NIO15EventLoopFutureCy5Vapor7RequestCG7Service9Container_p_tKcD",
            "key.usr" : "s:4HTTP11HTTPRequestV5VaporE6encode5using3NIO15EventLoopFutureCyAD7RequestCG7Service9Container_p_tKF"
          }
        ],
        "key.typename" : "HTTPRequest.Type",
        "key.typeusr" : "$S4HTTP11HTTPRequestVmD",
        "key.usr" : "s:4HTTP11HTTPRequestV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1852,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ApplicationResponder : <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 98
          }
        ],
        "key.bodylength" : 1085,
        "key.bodyoffset" : 158,
        "key.doc.column" : 15,
        "key.doc.comment" : "Vapor's main `Responder` type. Combines configured middleware + router to create a responder.",
        "key.doc.declaration" : "public struct ApplicationResponder : Responder, ServiceType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift\" line=\"2\" column=\"15\"><Name>ApplicationResponder<\/Name><USR>s:5Vapor20ApplicationResponderV<\/USR><Declaration>public struct ApplicationResponder : Responder, ServiceType<\/Declaration><CommentParts><Abstract><Para>Vapor’s main <codeVoice>Responder<\/codeVoice> type. Combines configured middleware + router to create a responder.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "ApplicationResponder",
        "key.doc.type" : "Class",
        "key.doclength" : 98,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 134
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 145
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ApplicationResponder<\/decl.name> : <ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Responder"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1139,
        "key.name" : "ApplicationResponder",
        "key.namelength" : 20,
        "key.nameoffset" : 112,
        "key.offset" : 105,
        "key.parsed_declaration" : "public struct ApplicationResponder: Responder, ServiceType",
        "key.parsed_scope.end" : 34,
        "key.parsed_scope.start" : 2,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 190
              }
            ],
            "key.bodylength" : 25,
            "key.bodyoffset" : 237,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static var serviceSupports: [Any.Type] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift\" line=\"4\" column=\"23\"><Name>serviceSupports<\/Name><USR>s:5Vapor20ApplicationResponderV15serviceSupportsSayypXpGvpZ<\/USR><Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "serviceSupports",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 163,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>serviceSupports<\/decl.name>: <decl.var.type>[Any.Type]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 66,
            "key.name" : "serviceSupports",
            "key.namelength" : 15,
            "key.nameoffset" : 208,
            "key.offset" : 197,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP15serviceSupportsSayypXpGvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var serviceSupports: [Any.Type]",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "[Any.Type]",
            "key.typeusr" : "$SSayypXpGD",
            "key.usr" : "s:5Vapor20ApplicationResponderV15serviceSupportsSayypXpGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor20ApplicationResponderV\">ApplicationResponder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 296
              }
            ],
            "key.bodylength" : 367,
            "key.bodyoffset" : 385,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for container: Container) throws -> ApplicationResponder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift\" line=\"7\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor20ApplicationResponderV11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for container: Container) throws -&gt; ApplicationResponder<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 7,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 269,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor20ApplicationResponderV\">ApplicationResponder<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 450,
            "key.name" : "makeService(for:)",
            "key.namelength" : 37,
            "key.nameoffset" : 315,
            "key.offset" : 303,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for container: Container) throws -> ApplicationResponder",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 7,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let middleware: [<Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>middleware<\/decl.name>: <decl.var.type>[<ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 108,
                "key.name" : "middleware",
                "key.namelength" : 10,
                "key.nameoffset" : 451,
                "key.offset" : 447,
                "key.parsed_declaration" : "let middleware = try container",
                "key.parsed_scope.end" : 9,
                "key.parsed_scope.start" : 9,
                "key.typename" : "[Middleware]",
                "key.typeusr" : "$SSay5Vapor10Middleware_pGD",
                "key.usr" : "s:5Vapor20ApplicationResponderV11makeService3forAC0E09Container_p_tKFZ10middlewareL_SayAA10Middleware_pGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>router<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 44,
                "key.name" : "router",
                "key.namelength" : 6,
                "key.nameoffset" : 618,
                "key.offset" : 614,
                "key.parsed_declaration" : "let router = try container.make(Router.self)",
                "key.parsed_scope.end" : 14,
                "key.parsed_scope.start" : 14,
                "key.typename" : "Router",
                "key.typeusr" : "$S5Vapor6Router_pD",
                "key.usr" : "s:5Vapor20ApplicationResponderV11makeService3forAC0E09Container_p_tKFZ6routerL_AA6Router_pvp"
              }
            ],
            "key.typename" : "(ApplicationResponder.Type) -> (Container) throws -> ApplicationResponder",
            "key.typeusr" : "$S3for5Vapor20ApplicationResponderV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor20ApplicationResponderV11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let responder: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 788
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Wrapped `Responder`.",
            "key.doc.declaration" : "private let responder: Responder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift\" line=\"21\" column=\"17\"><Name>responder<\/Name><USR>s:5Vapor20ApplicationResponderV9responder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLAA0C0_pvp<\/USR><Declaration>private let responder: Responder<\/Declaration><CommentParts><Abstract><Para>Wrapped <codeVoice>Responder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 21,
            "key.doc.name" : "responder",
            "key.doc.type" : "Other",
            "key.doclength" : 25,
            "key.docoffset" : 759,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>responder<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "responder",
            "key.namelength" : 9,
            "key.nameoffset" : 800,
            "key.offset" : 796,
            "key.parsed_declaration" : "private let responder: Responder",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.typename" : "Responder",
            "key.typeusr" : "$S5Vapor9Responder_pD",
            "key.usr" : "s:5Vapor20ApplicationResponderV9responder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLAA0C0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type>, _ middleware: [<Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>] = default)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 872
              }
            ],
            "key.bodylength" : 157,
            "key.bodyoffset" : 936,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `ApplicationResponder`.",
            "key.doc.declaration" : "public init(_ router: Router, _ middleware: [Middleware] = default)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift\" line=\"24\" column=\"12\"><Name>init(_:_:)<\/Name><USR>s:5Vapor20ApplicationResponderVyAcA6Router_p_SayAA10Middleware_pGtcfc<\/USR><Declaration>public init(_ router: Router, _ middleware: [Middleware] = default)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>ApplicationResponder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 24,
            "key.doc.name" : "init(_:_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 42,
            "key.docoffset" : 826,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>router<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>middleware<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>]<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 215,
            "key.name" : "init(_:_:)",
            "key.namelength" : 55,
            "key.nameoffset" : 879,
            "key.offset" : 879,
            "key.parsed_declaration" : "public init(_ router: Router, _ middleware: [Middleware] = [])",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 24,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let router: <Type usr=\"s:5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLV\">RouterResponder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>router<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLV\">RouterResponder<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 44,
                "key.name" : "router",
                "key.namelength" : 6,
                "key.nameoffset" : 949,
                "key.offset" : 945,
                "key.parsed_declaration" : "let router = RouterResponder(router: router)",
                "key.parsed_scope.end" : 25,
                "key.parsed_scope.start" : 25,
                "key.typename" : "RouterResponder",
                "key.typeusr" : "$S5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLVD",
                "key.usr" : "s:5Vapor20ApplicationResponderVyAcA6Router_p_SayAA10Middleware_pGtcfc6routerL0_AA0dC033_2E00EA9E0EF41A92B1FA5A6189AA8412LLVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let wrapped: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>wrapped<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 57,
                "key.name" : "wrapped",
                "key.namelength" : 7,
                "key.nameoffset" : 1002,
                "key.offset" : 998,
                "key.parsed_declaration" : "let wrapped = middleware.makeResponder(chainedto: router)",
                "key.parsed_scope.end" : 26,
                "key.parsed_scope.start" : 26,
                "key.typename" : "Responder",
                "key.typeusr" : "$S5Vapor9Responder_pD",
                "key.usr" : "s:5Vapor20ApplicationResponderVyAcA6Router_p_SayAA10Middleware_pGtcfc7wrappedL_AA0C0_pvp"
              }
            ],
            "key.typename" : "(ApplicationResponder.Type) -> (Router, [Middleware]) -> ApplicationResponder",
            "key.typeusr" : "$Sy5Vapor20ApplicationResponderVAA6Router_p_SayAA10Middleware_pGtcD",
            "key.usr" : "s:5Vapor20ApplicationResponderVyAcA6Router_p_SayAA10Middleware_pGtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1125
              }
            ],
            "key.bodylength" : 51,
            "key.bodyoffset" : 1190,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Responder`.",
            "key.doc.declaration" : "public func respond(to req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift\" line=\"31\" column=\"17\"><Name>respond(to:)<\/Name><USR>s:5Vapor20ApplicationResponderV7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF<\/USR><Declaration>public func respond(to req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Responder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 31,
            "key.doc.name" : "respond(to:)",
            "key.doc.type" : "Function",
            "key.doclength" : 21,
            "key.docoffset" : 1100,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 110,
            "key.name" : "respond(to:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1137,
            "key.offset" : 1132,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor9ResponderP7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(to req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 31,
            "key.substructure" : [

            ],
            "key.typename" : "(ApplicationResponder) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Vapor20ApplicationResponderV7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
          }
        ],
        "key.typename" : "ApplicationResponder.Type",
        "key.typeusr" : "$S5Vapor20ApplicationResponderVmD",
        "key.usr" : "s:5Vapor20ApplicationResponderV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1249
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private struct RouterResponder : <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 1308
          }
        ],
        "key.bodylength" : 499,
        "key.bodyoffset" : 1351,
        "key.doc.column" : 16,
        "key.doc.comment" : "Converts a `Router` into a `Responder`.",
        "key.doc.declaration" : "private struct RouterResponder : Responder",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift\" line=\"39\" column=\"16\"><Name>RouterResponder<\/Name><USR>s:5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLV<\/USR><Declaration>private struct RouterResponder : Responder<\/Declaration><CommentParts><Abstract><Para>Converts a <codeVoice>Router<\/codeVoice> into a <codeVoice>Responder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 39,
        "key.doc.name" : "RouterResponder",
        "key.doc.type" : "Class",
        "key.doclength" : 44,
        "key.docoffset" : 1264,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 1340
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>RouterResponder<\/decl.name> : <ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Responder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 535,
        "key.name" : "RouterResponder",
        "key.namelength" : 15,
        "key.nameoffset" : 1323,
        "key.offset" : 1316,
        "key.parsed_declaration" : "private struct RouterResponder: Responder",
        "key.parsed_scope.end" : 56,
        "key.parsed_scope.start" : 39,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>router<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 18,
            "key.name" : "router",
            "key.namelength" : 6,
            "key.nameoffset" : 1360,
            "key.offset" : 1356,
            "key.parsed_declaration" : "let router: Router",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 40,
            "key.typename" : "Router",
            "key.typeusr" : "$S5Vapor6Router_pD",
            "key.usr" : "s:5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLV6routerAA0B0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type>)<\/Declaration>",
            "key.bodylength" : 34,
            "key.bodyoffset" : 1443,
            "key.doc.column" : 5,
            "key.doc.comment" : "Creates a new `RouterResponder`.",
            "key.doc.declaration" : "init(router: Router)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift\" line=\"43\" column=\"5\"><Name>init(router:)<\/Name><USR>s:5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLV6routerAdA0B0_p_tcfc<\/USR><Declaration>init(router: Router)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>RouterResponder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 43,
            "key.doc.name" : "init(router:)",
            "key.doc.type" : "Function",
            "key.doclength" : 37,
            "key.docoffset" : 1380,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>router<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 57,
            "key.name" : "init(router:)",
            "key.namelength" : 20,
            "key.nameoffset" : 1421,
            "key.offset" : 1421,
            "key.parsed_declaration" : "init(router: Router)",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 43,
            "key.substructure" : [

            ],
            "key.typename" : "(RouterResponder.Type) -> (Router) -> RouterResponder",
            "key.typeusr" : "$S6router5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLVAB0C0_p_tcD",
            "key.usr" : "s:5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLV6routerAdA0B0_p_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 281,
            "key.bodyoffset" : 1567,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `Responder`.",
            "key.doc.declaration" : "func respond(to req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift\" line=\"48\" column=\"10\"><Name>respond(to:)<\/Name><USR>s:5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLV7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF<\/USR><Declaration>func respond(to req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Responder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 48,
            "key.doc.name" : "respond(to:)",
            "key.doc.type" : "Function",
            "key.doclength" : 21,
            "key.docoffset" : 1484,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ApplicationResponder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 340,
            "key.name" : "respond(to:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1514,
            "key.offset" : 1509,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor9ResponderP7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "func respond(to req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 48,
            "key.substructure" : [

            ],
            "key.typename" : "(RouterResponder) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLV7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
          }
        ],
        "key.typename" : "RouterResponder.Type",
        "key.typeusr" : "$S5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLVmD",
        "key.usr" : "s:5Vapor15RouterResponder33_2E00EA9E0EF41A92B1FA5A6189AA8412LLV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 770,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct BasicResponder : <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 40
          }
        ],
        "key.bodylength" : 687,
        "key.bodyoffset" : 81,
        "key.doc.column" : 15,
        "key.doc.comment" : "A basic, closure-based `Responder`.",
        "key.doc.declaration" : "public struct BasicResponder : Responder",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift\" line=\"2\" column=\"15\"><Name>BasicResponder<\/Name><USR>s:5Vapor14BasicResponderV<\/USR><Declaration>public struct BasicResponder : Responder<\/Declaration><CommentParts><Abstract><Para>A basic, closure-based <codeVoice>Responder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "BasicResponder",
        "key.doc.type" : "Class",
        "key.doclength" : 40,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 70
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>BasicResponder<\/decl.name> : <ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Responder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 722,
        "key.name" : "BasicResponder",
        "key.namelength" : 14,
        "key.nameoffset" : 54,
        "key.offset" : 47,
        "key.parsed_declaration" : "public struct BasicResponder: Responder",
        "key.parsed_scope.end" : 23,
        "key.parsed_scope.start" : 2,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let closure: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 124
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The stored responder closure.",
            "key.doc.declaration" : "private let closure: (Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift\" line=\"4\" column=\"17\"><Name>closure<\/Name><USR>s:5Vapor14BasicResponderV7closure33_C49818DCE1107AB1E75EBA5D6C7752B2LLy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCKcvp<\/USR><Declaration>private let closure: (Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>The stored responder closure.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "closure",
            "key.doc.type" : "Other",
            "key.doclength" : 34,
            "key.docoffset" : 86,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>closure<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 49,
            "key.name" : "closure",
            "key.namelength" : 7,
            "key.nameoffset" : 136,
            "key.offset" : 132,
            "key.parsed_declaration" : "private let closure: (Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "(Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCy5Vapor8ResponseCGAD7RequestCKcD",
            "key.usr" : "s:5Vapor14BasicResponderV7closure33_C49818DCE1107AB1E75EBA5D6C7752B2LLy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCKcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 526
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 596,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `BasicResponder`.\n\n    let notFound: Responder = BasicResponder { req in\n        let res = req.makeResponse(http: .init(status: .notFound))\n        return req.eventLoop.newSucceededFuture(result: res)\n    }\n\n- parameters:\n    - closure: Responder closure.",
            "key.doc.declaration" : "public init(closure: @escaping (Request) throws -> Future<Response>)",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift\" line=\"15\" column=\"12\"><Name>init(closure:)<\/Name><USR>s:5Vapor14BasicResponderV7closureAC3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCKc_tcfc<\/USR><Declaration>public init(closure: @escaping (Request) throws -&gt; Future&lt;Response&gt;)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>BasicResponder<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Responder closure.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let notFound: Responder = BasicResponder { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let res = req.makeResponse(http: .init(status: .notFound))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return req.eventLoop.newSucceededFuture(result: res)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "init(closure:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Responder closure."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 335,
            "key.docoffset" : 187,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>closure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 100,
            "key.name" : "init(closure:)",
            "key.namelength" : 61,
            "key.nameoffset" : 533,
            "key.offset" : 533,
            "key.parsed_declaration" : "public init(closure: @escaping (Request) throws -> Future<Response>)",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [

            ],
            "key.typename" : "(BasicResponder.Type) -> (@escaping (Request) throws -> EventLoopFuture<Response>) -> BasicResponder",
            "key.typeusr" : "$S7closure5Vapor14BasicResponderV3NIO15EventLoopFutureCyAB8ResponseCGAB7RequestCKc_tcD",
            "key.usr" : "s:5Vapor14BasicResponderV7closureAC3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestCKc_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 664
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 729,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Responder`.",
            "key.doc.declaration" : "public func respond(to req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift\" line=\"20\" column=\"17\"><Name>respond(to:)<\/Name><USR>s:5Vapor14BasicResponderV7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF<\/USR><Declaration>public func respond(to req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Responder<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 20,
            "key.doc.name" : "respond(to:)",
            "key.doc.type" : "Function",
            "key.doclength" : 21,
            "key.docoffset" : 639,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/BasicResponder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 96,
            "key.name" : "respond(to:)",
            "key.namelength" : 24,
            "key.nameoffset" : 676,
            "key.offset" : 671,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor9ResponderP7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(to req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 20,
            "key.substructure" : [

            ],
            "key.typename" : "(BasicResponder) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Vapor14BasicResponderV7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
          }
        ],
        "key.typename" : "BasicResponder.Type",
        "key.typeusr" : "$S5Vapor14BasicResponderVmD",
        "key.usr" : "s:5Vapor14BasicResponderV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 383,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias HTTPStatus = <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 53
          }
        ],
        "key.doc.column" : 18,
        "key.doc.comment" : "Less verbose typealias for `HTTPResponseStatus`.",
        "key.doc.declaration" : "public typealias HTTPStatus = HTTPResponseStatus",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift\" line=\"2\" column=\"18\"><Name>HTTPStatus<\/Name><USR>s:5Vapor10HTTPStatusa<\/USR><Declaration>public typealias HTTPStatus = HTTPResponseStatus<\/Declaration><CommentParts><Abstract><Para>Less verbose typealias for <codeVoice>HTTPResponseStatus<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 2,
        "key.doc.name" : "HTTPStatus",
        "key.doc.type" : "Other",
        "key.doclength" : 53,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>HTTPStatus<\/decl.name> = <ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 41,
        "key.name" : "HTTPStatus",
        "key.namelength" : 10,
        "key.nameoffset" : 70,
        "key.offset" : 60,
        "key.parsed_declaration" : "public typealias HTTPStatus = HTTPResponseStatus",
        "key.parsed_scope.end" : 2,
        "key.parsed_scope.start" : 2,
        "key.typename" : "HTTPResponseStatus.Type",
        "key.typeusr" : "$S8NIOHTTP118HTTPResponseStatusOmD",
        "key.usr" : "s:5Vapor10HTTPStatusa"
      },
      {
        "key.annotated_decl" : "<Declaration>public typealias HTTPStatus = <Type usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/Type><\/Declaration>",
        "key.bodylength" : 237,
        "key.bodyoffset" : 144,
        "key.doc.column" : 18,
        "key.doc.declaration" : "public typealias HTTPStatus = HTTPResponseStatus",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift\" line=\"2\" column=\"18\"><Name>HTTPStatus<\/Name><USR>s:5Vapor10HTTPStatusa<\/USR><Declaration>public typealias HTTPStatus = HTTPResponseStatus<\/Declaration><CommentParts><Abstract><Para>Less verbose typealias for <codeVoice>HTTPResponseStatus<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 2,
        "key.doc.name" : "HTTPStatus",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 125
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>HTTPStatus<\/decl.name> = <ref.enum usr=\"s:8NIOHTTP118HTTPResponseStatusO\">HTTPResponseStatus<\/ref.enum><\/decl.typealias>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ResponseEncodable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 279,
        "key.name" : "HTTPStatus",
        "key.namelength" : 10,
        "key.nameoffset" : 113,
        "key.offset" : 103,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 182
              }
            ],
            "key.bodylength" : 132,
            "key.bodyoffset" : 247,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ResponseEncodable`.",
            "key.doc.declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift\" line=\"6\" column=\"17\"><Name>encode(for:)<\/Name><USR>s:8NIOHTTP118HTTPResponseStatusO5VaporE6encode3for3NIO15EventLoopFutureCyAD8ResponseCGAD7RequestC_tKF<\/USR><Declaration>public func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ResponseEncodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 6,
            "key.doc.name" : "encode(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 149,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 191,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 194,
            "key.offset" : 189,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 6,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/HTTPStatus.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>res<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 57,
                "key.name" : "res",
                "key.namelength" : 3,
                "key.nameoffset" : 260,
                "key.offset" : 256,
                "key.parsed_declaration" : "let res = Response(http: .init(status: self), using: req)",
                "key.parsed_scope.end" : 7,
                "key.parsed_scope.start" : 7,
                "key.typename" : "Response",
                "key.typeusr" : "$S5Vapor8ResponseCD",
                "key.usr" : "s:8NIOHTTP118HTTPResponseStatusO5VaporE6encode3for3NIO15EventLoopFutureCyAD8ResponseCGAD7RequestC_tKF3resL_AKvp"
              }
            ],
            "key.typename" : "(HTTPResponseStatus) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:8NIOHTTP118HTTPResponseStatusO5VaporE6encode3for3NIO15EventLoopFutureCyAD8ResponseCGAD7RequestC_tKF"
          }
        ],
        "key.typename" : "HTTPResponseStatus.Type",
        "key.typeusr" : "$S8NIOHTTP118HTTPResponseStatusOmD",
        "key.usr" : "s:5Vapor10HTTPStatusa"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1292,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public final class Request : <Type usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/Type>, <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>, <Type usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/Type>, <Type usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type>, <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type><\/Declaration>",
        "key.bodylength" : 595,
        "key.bodyoffset" : 19,
        "key.doc.column" : 20,
        "key.doc.declaration" : "public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible",
        "key.doc.discussion" : [
          {
            "Para" : "Use `Request` to access information about the `HTTPRequest` (`req.http`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also use `Request` to create services you may need while generating a response (`req.make()`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` also carries a `ParametersContainer` for routing. Use `parameters` to fetch parameterized values."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` is `DatabaseConnectable`, meaning you can use it in-place of an actual `DatabaseConnection`. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPRequest`, `Container`, `ParameterContainer`, and `DatabaseConnectable` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"27\" column=\"20\"><Name>Request<\/Name><USR>s:5Vapor7RequestC<\/USR><Declaration>public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible<\/Declaration><CommentParts><Abstract><Para><codeVoice>Request<\/codeVoice> is a service-container wrapper around an <codeVoice>HTTPRequest<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Use <codeVoice>Request<\/codeVoice> to access information about the <codeVoice>HTTPRequest<\/codeVoice> (<codeVoice>req.http<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(req.http.url.path) \/\/ \"\/hello\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also use <codeVoice>Request<\/codeVoice> to create services you may need while generating a response (<codeVoice>req.make()<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let client = try req.make(Client.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(client) \/\/ Client]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[client.get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> also carries a <codeVoice>ParametersContainer<\/codeVoice> for routing. Use <codeVoice>parameters<\/codeVoice> to fetch parameterized values.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"hello\", String.parameter) { req -> String in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let name = try req.parameters.next(String.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> is <codeVoice>DatabaseConnectable<\/codeVoice>, meaning you can use it in-place of an actual <codeVoice>DatabaseConnection<\/codeVoice>. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let users = User.query(on: req).all()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPRequest<\/codeVoice>, <codeVoice>Container<\/codeVoice>, <codeVoice>ParameterContainer<\/codeVoice>, and <codeVoice>DatabaseConnectable<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 27,
        "key.doc.name" : "Request",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Request<\/decl.name> : <ref.protocol usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/ref.protocol>, <ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/ref.protocol>, <ref.typealias usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/ref.typealias>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 615,
        "key.name" : "Request",
        "key.namelength" : 7,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func redirect(to location: <Type usr=\"s:SS\">String<\/Type>, type: <Type usr=\"s:5Vapor12RedirectTypeO\">RedirectType<\/Type> = default) -&gt; <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 360
              }
            ],
            "key.bodylength" : 167,
            "key.bodyoffset" : 445,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a redirect `Response`.\n\n    router.get(\"redirect\") { req in\n        return req.redirect(to: \"https:\/\/vapor.codes\")\n    }\n\nSet type to '.permanently' to allow caching to automatically redirect from browsers.\nDefaulting to non-permanent to prevent unexpected caching.",
            "key.doc.declaration" : "public func redirect(to location: String, type: RedirectType = default) -> Response",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "Set type to ‘.permanently’ to allow caching to automatically redirect from browsers. Defaulting to non-permanent to prevent unexpected caching."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift\" line=\"10\" column=\"17\"><Name>redirect(to:type:)<\/Name><USR>s:5Vapor7RequestC8redirect2to4typeAA8ResponseCSS_AA12RedirectTypeOtF<\/USR><Declaration>public func redirect(to location: String, type: RedirectType = default) -&gt; Response<\/Declaration><CommentParts><Abstract><Para>Creates a redirect <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"redirect\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return req.redirect(to: \"https:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Set type to ‘.permanently’ to allow caching to automatically redirect from browsers. Defaulting to non-permanent to prevent unexpected caching.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 10,
            "key.doc.name" : "redirect(to:type:)",
            "key.doc.type" : "Function",
            "key.doclength" : 332,
            "key.docoffset" : 24,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>redirect<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>location<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>type<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:5Vapor12RedirectTypeO\">RedirectType<\/ref.enum><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 246,
            "key.name" : "redirect(to:type:)",
            "key.namelength" : 59,
            "key.nameoffset" : 372,
            "key.offset" : 367,
            "key.parsed_declaration" : "public func redirect(to location: String, type: RedirectType = .normal) -> Response",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 10,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>res<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.name" : "res",
                "key.namelength" : 3,
                "key.nameoffset" : 458,
                "key.offset" : 454,
                "key.parsed_declaration" : "let res = makeResponse()",
                "key.parsed_scope.end" : 11,
                "key.parsed_scope.start" : 11,
                "key.typename" : "Response",
                "key.typeusr" : "$S5Vapor8ResponseCD",
                "key.usr" : "s:5Vapor7RequestC8redirect2to4typeAA8ResponseCSS_AA12RedirectTypeOtF3resL_AHvp"
              }
            ],
            "key.typename" : "(Request) -> (String, RedirectType) -> Response",
            "key.typeusr" : "$S2to4type5Vapor8ResponseCSS_AC12RedirectTypeOtcD",
            "key.usr" : "s:5Vapor7RequestC8redirect2to4typeAA8ResponseCSS_AA12RedirectTypeOtF"
          }
        ],
        "key.typename" : "Request.Type",
        "key.typeusr" : "$S5Vapor7RequestCmD",
        "key.usr" : "s:5Vapor7RequestC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum RedirectType<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 684
          }
        ],
        "key.bodylength" : 580,
        "key.bodyoffset" : 710,
        "key.doc.column" : 13,
        "key.doc.comment" : "Specifies the type of redirect that the client should receive.",
        "key.doc.declaration" : "public enum RedirectType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift\" line=\"19\" column=\"13\"><Name>RedirectType<\/Name><USR>s:5Vapor12RedirectTypeO<\/USR><Declaration>public enum RedirectType<\/Declaration><CommentParts><Abstract><Para>Specifies the type of redirect that the client should receive.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 19,
        "key.doc.name" : "RedirectType",
        "key.doc.type" : "Other",
        "key.doclength" : 67,
        "key.docoffset" : 617,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>RedirectType<\/decl.name><\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 600,
        "key.name" : "RedirectType",
        "key.namelength" : 12,
        "key.nameoffset" : 696,
        "key.offset" : 691,
        "key.parsed_declaration" : "public enum RedirectType",
        "key.parsed_scope.end" : 38,
        "key.parsed_scope.start" : 19,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 769,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case permanent<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "A cacheable redirect.\n`301 permanent`",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift\" line=\"22\" column=\"10\"><Name>permanent<\/Name><USR>s:5Vapor12RedirectTypeO9permanentyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>A cacheable redirect. <codeVoice>301 permanent<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 22,
                "key.doc.name" : "permanent",
                "key.doc.type" : "Other",
                "key.doclength" : 50,
                "key.docoffset" : 715,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>permanent<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.name" : "permanent",
                "key.namelength" : 9,
                "key.nameoffset" : 774,
                "key.offset" : 774,
                "key.parsed_declaration" : "case permanent",
                "key.parsed_scope.end" : 22,
                "key.parsed_scope.start" : 22,
                "key.typename" : "(RedirectType.Type) -> RedirectType",
                "key.typeusr" : "$Sy5Vapor12RedirectTypeOACmcD",
                "key.usr" : "s:5Vapor12RedirectTypeO9permanentyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 11,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 886,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case normal<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "Forces the redirect to come with a GET, regardless of req method.\n`303 see other`",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift\" line=\"25\" column=\"10\"><Name>normal<\/Name><USR>s:5Vapor12RedirectTypeO6normalyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Forces the redirect to come with a GET, regardless of req method. <codeVoice>303 see other<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 25,
                "key.doc.name" : "normal",
                "key.doc.type" : "Other",
                "key.doclength" : 94,
                "key.docoffset" : 788,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>normal<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 6,
                "key.name" : "normal",
                "key.namelength" : 6,
                "key.nameoffset" : 891,
                "key.offset" : 891,
                "key.parsed_declaration" : "case normal",
                "key.parsed_scope.end" : 25,
                "key.parsed_scope.start" : 25,
                "key.typename" : "(RedirectType.Type) -> RedirectType",
                "key.typeusr" : "$Sy5Vapor12RedirectTypeOACmcD",
                "key.usr" : "s:5Vapor12RedirectTypeO6normalyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 14,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1004,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>case temporary<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "Maintains original request method, ie: PUT will call PUT on redirect.\n`307 Temporary`",
                "key.doc.declaration" : "",
                "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift\" line=\"28\" column=\"10\"><Name>temporary<\/Name><USR>s:5Vapor12RedirectTypeO9temporaryyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Maintains original request method, ie: PUT will call PUT on redirect. <codeVoice>307 Temporary<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Other>",
                "key.doc.line" : 28,
                "key.doc.name" : "temporary",
                "key.doc.type" : "Other",
                "key.doclength" : 98,
                "key.docoffset" : 902,
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>temporary<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 9,
                "key.name" : "temporary",
                "key.namelength" : 9,
                "key.nameoffset" : 1009,
                "key.offset" : 1009,
                "key.parsed_declaration" : "case temporary",
                "key.parsed_scope.end" : 28,
                "key.parsed_scope.start" : 28,
                "key.typename" : "(RedirectType.Type) -> RedirectType",
                "key.typeusr" : "$Sy5Vapor12RedirectTypeOACmcD",
                "key.usr" : "s:5Vapor12RedirectTypeO9temporaryyA2CmF"
              }
            ]
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var status: <Type usr=\"s:5Vapor10HTTPStatusa\">HTTPStatus<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1080
              }
            ],
            "key.bodylength" : 177,
            "key.bodyoffset" : 1111,
            "key.doc.column" : 16,
            "key.doc.comment" : "Associated `HTTPStatus` for this redirect type.",
            "key.doc.declaration" : "public var status: HTTPStatus { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift\" line=\"31\" column=\"16\"><Name>status<\/Name><USR>s:5Vapor12RedirectTypeO6status8NIOHTTP118HTTPResponseStatusOvp<\/USR><Declaration>public var status: HTTPStatus { get }<\/Declaration><CommentParts><Abstract><Para>Associated <codeVoice>HTTPStatus<\/codeVoice> for this redirect type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 31,
            "key.doc.name" : "status",
            "key.doc.type" : "Other",
            "key.doclength" : 52,
            "key.docoffset" : 1024,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Redirect.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:5Vapor10HTTPStatusa\">HTTPStatus<\/ref.typealias><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 202,
            "key.name" : "status",
            "key.namelength" : 6,
            "key.nameoffset" : 1091,
            "key.offset" : 1087,
            "key.parsed_declaration" : "public var status: HTTPStatus",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 31,
            "key.typename" : "HTTPResponseStatus",
            "key.typeusr" : "$S8NIOHTTP118HTTPResponseStatusOD",
            "key.usr" : "s:5Vapor12RedirectTypeO6status8NIOHTTP118HTTPResponseStatusOvp"
          }
        ],
        "key.typename" : "RedirectType.Type",
        "key.typeusr" : "$S5Vapor12RedirectTypeOmD",
        "key.usr" : "s:5Vapor12RedirectTypeO"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Responder.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 348,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Responder<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 42
          }
        ],
        "key.bodylength" : 277,
        "key.bodyoffset" : 69,
        "key.doc.column" : 17,
        "key.doc.comment" : "Capable of responding to a `Request`.",
        "key.doc.declaration" : "public protocol Responder",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Responder.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Responder.swift\" line=\"2\" column=\"17\"><Name>Responder<\/Name><USR>s:5Vapor9ResponderP<\/USR><Declaration>public protocol Responder<\/Declaration><CommentParts><Abstract><Para>Capable of responding to a <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Responder",
        "key.doc.type" : "Class",
        "key.doclength" : 42,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Responder.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Responder<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 298,
        "key.name" : "Responder",
        "key.namelength" : 9,
        "key.nameoffset" : 58,
        "key.offset" : 49,
        "key.parsed_declaration" : "public protocol Responder",
        "key.parsed_scope.end" : 9,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main9Responder_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Asynchronously returns a `Response` for the supplied `Request`.\n\n- parameters:\n    - req: `Request` to respond to.\n- returns: A `Future` that contains the returned `Response`.",
            "key.doc.declaration" : "func respond(to req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Responder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Responder.swift\" line=\"8\" column=\"10\"><Name>respond(to:)<\/Name><USR>s:5Vapor9ResponderP7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF<\/USR><Declaration>func respond(to req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Asynchronously returns a <codeVoice>Response<\/codeVoice> for the supplied <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Request<\/codeVoice> to respond to.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> that contains the returned <codeVoice>Response<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "respond(to:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Request` to respond to."
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` that contains the returned `Response`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 211,
            "key.docoffset" : 74,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Responder.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 56,
            "key.name" : "respond(to:)",
            "key.namelength" : 24,
            "key.nameoffset" : 294,
            "key.offset" : 289,
            "key.parsed_declaration" : "func respond(to req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Responder> (Self) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Vapor9ResponderP7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
          }
        ],
        "key.typename" : "Responder.Protocol",
        "key.typeusr" : "$S5Vapor9Responder_pmD",
        "key.usr" : "s:5Vapor9ResponderP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2986,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class Response : <Type usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/Type>, <Type usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/Type>, <Type usr=\"s:5Vapor15ResponseCodablea\">ResponseCodable<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type>, <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 515
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 508
          }
        ],
        "key.bodylength" : 2337,
        "key.bodyoffset" : 647,
        "key.doc.column" : 20,
        "key.doc.comment" : "`Response` is a service-container wrapper around an `HTTPResponse`.\n\nUse this `Response` to access information about the `HTTPResponse` (`res.http`).\n\n    print(res.http.status) \/\/ 200 OK\n\nYou can also use `Response` to create services you may need while generating a response (`res.make(_:)`.\n\n    let client = try res.make(Client.self)\n    print(client) \/\/ Client\n    client.get(\"http:\/\/vapor.codes\")\n\nSee `HTTPResponse` and `Container` for more information.",
        "key.doc.declaration" : "public final class Response : ContainerAlias, HTTPMessageContainer, ResponseCodable, CustomStringConvertible, CustomDebugStringConvertible",
        "key.doc.discussion" : [
          {
            "Para" : "Use this `Response` to access information about the `HTTPResponse` (`res.http`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also use `Response` to create services you may need while generating a response (`res.make(_:)`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPResponse` and `Container` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"14\" column=\"20\"><Name>Response<\/Name><USR>s:5Vapor8ResponseC<\/USR><Declaration>public final class Response : ContainerAlias, HTTPMessageContainer, ResponseCodable, CustomStringConvertible, CustomDebugStringConvertible<\/Declaration><CommentParts><Abstract><Para><codeVoice>Response<\/codeVoice> is a service-container wrapper around an <codeVoice>HTTPResponse<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Use this <codeVoice>Response<\/codeVoice> to access information about the <codeVoice>HTTPResponse<\/codeVoice> (<codeVoice>res.http<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(res.http.status) \/\/ 200 OK]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also use <codeVoice>Response<\/codeVoice> to create services you may need while generating a response (<codeVoice>res.make(_:)<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let client = try res.make(Client.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(client) \/\/ Client]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[client.get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPResponse<\/codeVoice> and <codeVoice>Container<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 14,
        "key.doc.name" : "Response",
        "key.doc.type" : "Class",
        "key.doclength" : 508,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 14,
            "key.offset" : 537
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 20,
            "key.offset" : 553
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 575
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 23,
            "key.offset" : 592
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 28,
            "key.offset" : 617
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Response<\/decl.name> : <ref.protocol usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/ref.protocol>, <ref.typealias usr=\"s:5Vapor15ResponseCodablea\">ResponseCodable<\/ref.typealias>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ContainerAlias"
          },
          {
            "key.name" : "HTTPMessageContainer"
          },
          {
            "key.name" : "ResponseCodable"
          },
          {
            "key.name" : "CustomStringConvertible"
          },
          {
            "key.name" : "CustomDebugStringConvertible"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 2464,
        "key.name" : "Response",
        "key.namelength" : 8,
        "key.nameoffset" : 527,
        "key.offset" : 521,
        "key.parsed_declaration" : "public final class Response: ContainerAlias, HTTPMessageContainer, ResponseCodable, CustomStringConvertible, CustomDebugStringConvertible",
        "key.parsed_scope.end" : 92,
        "key.parsed_scope.start" : 14,
        "key.runtime_name" : "_TtC4main8Response",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static let aliasedContainer: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>, <Type usr=\"s:7Service9ContainerP\">Container<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 682
              }
            ],
            "key.doc.column" : 23,
            "key.doc.comment" : "See `ContainerAlias`.",
            "key.doc.declaration" : "public static let aliasedContainer: KeyPath<Vapor.Response, Container>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"16\" column=\"23\"><Name>aliasedContainer<\/Name><USR>s:5Vapor8ResponseC16aliasedContainers7KeyPathCyAC7Service0D0_pGvpZ<\/USR><Declaration>public static let aliasedContainer: KeyPath&lt;Vapor.Response, Container&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ContainerAlias<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 16,
            "key.doc.name" : "aliasedContainer",
            "key.doc.type" : "Other",
            "key.doclength" : 26,
            "key.docoffset" : 652,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>aliasedContainer<\/decl.name>: <decl.var.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>, <ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol>&gt;<\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 77,
            "key.name" : "aliasedContainer",
            "key.namelength" : 16,
            "key.nameoffset" : 700,
            "key.offset" : 689,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service14ContainerAliasP07aliasedB0s7KeyPathCyxAA0B0_pGvpZ"
              }
            ],
            "key.parsed_declaration" : "public static let aliasedContainer: KeyPath<Response, Container> = \\.sharedContainer",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.typename" : "KeyPath<Response, Container>",
            "key.typeusr" : "$Ss7KeyPathCy5Vapor8ResponseC7Service9Container_pGD",
            "key.usr" : "s:5Vapor8ResponseC16aliasedContainers7KeyPathCyAC7Service0D0_pGvpZ"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: HTTP",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 775
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var http: <Type usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 888
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "The wrapped `HTTPResponse`.\n\n    print(res.http.status) \/\/ 200 OK",
            "key.doc.declaration" : "public var http: HTTPResponse",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"24\" column=\"16\"><Name>http<\/Name><USR>s:5Vapor8ResponseC4http4HTTP12HTTPResponseVvp<\/USR><Declaration>public var http: HTTPResponse<\/Declaration><CommentParts><Abstract><Para>The wrapped <codeVoice>HTTPResponse<\/codeVoice>.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(res.http.status) \/\/ 200 OK]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 24,
            "key.doc.name" : "http",
            "key.doc.type" : "Other",
            "key.doclength" : 93,
            "key.docoffset" : 791,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>http<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "http",
            "key.namelength" : 4,
            "key.nameoffset" : 899,
            "key.offset" : 895,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor20HTTPMessageContainerP4http0B4TypeQzvp"
              }
            ],
            "key.parsed_declaration" : "public var http: HTTPResponse",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 24,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "HTTPResponse",
            "key.typeusr" : "$S4HTTP12HTTPResponseVD",
            "key.usr" : "s:5Vapor8ResponseC4http4HTTP12HTTPResponseVvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 14,
            "key.name" : "MARK: Services",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 926
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let sharedContainer: <Type usr=\"s:7Service9ContainerP\">Container<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1108
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "This `Response`'s parent container. This is normally the event loop. The `Response` will redirect\nall calls to create services to this container.",
            "key.doc.declaration" : "public let sharedContainer: Container",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"30\" column=\"16\"><Name>sharedContainer<\/Name><USR>s:5Vapor8ResponseC15sharedContainer7Service0D0_pvp<\/USR><Declaration>public let sharedContainer: Container<\/Declaration><CommentParts><Abstract><Para>This <codeVoice>Response<\/codeVoice>’s parent container. This is normally the event loop. The <codeVoice>Response<\/codeVoice> will redirect all calls to create services to this container.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 30,
            "key.doc.name" : "sharedContainer",
            "key.doc.type" : "Other",
            "key.doclength" : 158,
            "key.docoffset" : 946,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sharedContainer<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "sharedContainer",
            "key.namelength" : 15,
            "key.nameoffset" : 1119,
            "key.offset" : 1115,
            "key.parsed_declaration" : "public let sharedContainer: Container",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 30,
            "key.typename" : "Container",
            "key.typeusr" : "$S7Service9Container_pD",
            "key.usr" : "s:5Vapor8ResponseC15sharedContainer7Service0D0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let privateContainer: <Type usr=\"s:7Service12SubContainerP\">SubContainer<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1194
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "This response's private container.",
            "key.doc.declaration" : "public let privateContainer: SubContainer",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"33\" column=\"16\"><Name>privateContainer<\/Name><USR>s:5Vapor8ResponseC16privateContainer7Service03SubD0_pvp<\/USR><Declaration>public let privateContainer: SubContainer<\/Declaration><CommentParts><Abstract><Para>This response’s private container.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 33,
            "key.doc.name" : "privateContainer",
            "key.doc.type" : "Other",
            "key.doclength" : 39,
            "key.docoffset" : 1151,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>privateContainer<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7Service12SubContainerP\">SubContainer<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 34,
            "key.name" : "privateContainer",
            "key.namelength" : 16,
            "key.nameoffset" : 1205,
            "key.offset" : 1201,
            "key.parsed_declaration" : "public let privateContainer: SubContainer",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 33,
            "key.typename" : "SubContainer",
            "key.typeusr" : "$S7Service12SubContainer_pD",
            "key.usr" : "s:5Vapor8ResponseC16privateContainer7Service03SubD0_pvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 18,
            "key.name" : "MARK: Descriptions",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1244
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var description: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1307
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 1339,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `CustomStringConvertible`.",
            "key.doc.declaration" : "public var description: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"38\" column=\"16\"><Name>description<\/Name><USR>s:5Vapor8ResponseC11descriptionSSvp<\/USR><Declaration>public var description: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>CustomStringConvertible<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 38,
            "key.doc.name" : "description",
            "key.doc.type" : "Other",
            "key.doclength" : 35,
            "key.docoffset" : 1268,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>description<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 63,
            "key.name" : "description",
            "key.namelength" : 11,
            "key.nameoffset" : 1318,
            "key.offset" : 1314,
            "key.overrides" : [
              {
                "key.usr" : "s:s23CustomStringConvertibleP11descriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var description: String",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 38,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor8ResponseC11descriptionSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var debugDescription: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1427
              }
            ],
            "key.bodylength" : 42,
            "key.bodyoffset" : 1464,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `CustomDebugStringConvertible`.",
            "key.doc.declaration" : "public var debugDescription: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"43\" column=\"16\"><Name>debugDescription<\/Name><USR>s:5Vapor8ResponseC16debugDescriptionSSvp<\/USR><Declaration>public var debugDescription: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>CustomDebugStringConvertible<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 43,
            "key.doc.name" : "debugDescription",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 1383,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>debugDescription<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 73,
            "key.name" : "debugDescription",
            "key.namelength" : 16,
            "key.nameoffset" : 1438,
            "key.offset" : 1434,
            "key.overrides" : [
              {
                "key.usr" : "s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp"
              }
            ],
            "key.parsed_declaration" : "public var debugDescription: String",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 43,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor8ResponseC16debugDescriptionSSvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Content",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1516
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var content: <Type usr=\"s:5Vapor16ContentContainerV\">ContentContainer<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2030
              }
            ],
            "key.bodylength" : 43,
            "key.bodyoffset" : 2078,
            "key.doc.column" : 16,
            "key.doc.comment" : "Helper for encoding and decoding `Content` from an HTTP message.\n\nThis helper can encode data to the HTTP message. Uses the Content's default media type if none is supplied.\n\n    try res.content.encode(user)\n\nThis helper can also _decode_ data from the HTTP message.\n\n    let user = try res.content.decode(User.self)\n    print(user) \/\/\/ Future<User>\n\nSee `ContentContainer` methods for more information.",
            "key.doc.declaration" : "public var content: ContentContainer<Response> { get }",
            "key.doc.discussion" : [
              {
                "Para" : "This helper can encode data to the HTTP message. Uses the Content’s default media type if none is supplied."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "This helper can also  data from the HTTP message."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `ContentContainer` methods for more information."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"61\" column=\"16\"><Name>content<\/Name><USR>s:5Vapor8ResponseC7contentAA16ContentContainerVyACGvp<\/USR><Declaration>public var content: ContentContainer&lt;Response&gt; { get }<\/Declaration><CommentParts><Abstract><Para>Helper for encoding and decoding <codeVoice>Content<\/codeVoice> from an HTTP message.<\/Para><\/Abstract><Discussion><Para>This helper can encode data to the HTTP message. Uses the Content’s default media type if none is supplied.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try res.content.encode(user)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>This helper can also <emphasis>decode<\/emphasis> data from the HTTP message.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let user = try res.content.decode(User.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(user) \/\/\/ Future<User>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ContentContainer<\/codeVoice> methods for more information.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 61,
            "key.doc.name" : "content",
            "key.doc.type" : "Other",
            "key.doclength" : 491,
            "key.docoffset" : 1535,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>content<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor16ContentContainerV\">ContentContainer<\/ref.struct>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 85,
            "key.name" : "content",
            "key.namelength" : 7,
            "key.nameoffset" : 2041,
            "key.offset" : 2037,
            "key.parsed_declaration" : "public var content: ContentContainer<Response>",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 61,
            "key.typename" : "ContentContainer<Response>",
            "key.typeusr" : "$S5Vapor16ContentContainerVyAA8ResponseCGD",
            "key.usr" : "s:5Vapor8ResponseC7contentAA16ContentContainerVyACGvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: Init",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2131
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(http: <Type usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/Type> = default, using container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2180
              }
            ],
            "key.bodylength" : 141,
            "key.bodyoffset" : 2251,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `Response`.",
            "key.doc.declaration" : "public init(http: HTTPResponse = default, using container: Container)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"68\" column=\"12\"><Name>init(http:using:)<\/Name><USR>s:5Vapor8ResponseC4http5usingAC4HTTP12HTTPResponseV_7Service9Container_ptcfc<\/USR><Declaration>public init(http: HTTPResponse = default, using container: Container)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 68,
            "key.doc.name" : "init(http:using:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 2147,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>http<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 206,
            "key.name" : "init(http:using:)",
            "key.namelength" : 62,
            "key.nameoffset" : 2187,
            "key.offset" : 2187,
            "key.parsed_declaration" : "public init(http: HTTPResponse = .init(), using container: Container)",
            "key.parsed_scope.end" : 72,
            "key.parsed_scope.start" : 68,
            "key.substructure" : [

            ],
            "key.typename" : "(Response.Type) -> (HTTPResponse, Container) -> Response",
            "key.typeusr" : "$S4http5using5Vapor8ResponseC4HTTP12HTTPResponseV_7Service9Container_ptcD",
            "key.usr" : "s:5Vapor8ResponseC4http5usingAC4HTTP12HTTPResponseV_7Service9Container_ptcfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Request",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2402
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func makeRequest() -&gt; <Type usr=\"s:5Vapor7RequestC\">Request<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2491
              }
            ],
            "key.bodylength" : 52,
            "key.bodyoffset" : 2529,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Request` on the same container as this `Response`.",
            "key.doc.declaration" : "public func makeRequest() -> Request",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"77\" column=\"17\"><Name>makeRequest()<\/Name><USR>s:5Vapor8ResponseC11makeRequestAA0D0CyF<\/USR><Declaration>public func makeRequest() -&gt; Request<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Request<\/codeVoice> on the same container as this <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 77,
            "key.doc.name" : "makeRequest()",
            "key.doc.type" : "Function",
            "key.doclength" : 66,
            "key.docoffset" : 2421,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeRequest<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 84,
            "key.name" : "makeRequest()",
            "key.namelength" : 13,
            "key.nameoffset" : 2503,
            "key.offset" : 2498,
            "key.parsed_declaration" : "public func makeRequest() -> Request",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 77,
            "key.substructure" : [

            ],
            "key.typename" : "(Response) -> () -> Request",
            "key.typeusr" : "$S5Vapor7RequestCycD",
            "key.usr" : "s:5Vapor8ResponseC11makeRequestAA0D0CyF"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Codable",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2591
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func decode(from res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>, for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2643
              }
            ],
            "key.bodylength" : 66,
            "key.bodyoffset" : 2744,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ResponseDecodable`.",
            "key.doc.declaration" : "public static func decode(from res: Response, for req: Request) throws -> EventLoopFuture<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"84\" column=\"24\"><Name>decode(from:for:)<\/Name><USR>s:5Vapor8ResponseC6decode4from3for3NIO15EventLoopFutureCyACGAC_AA7RequestCtKFZ<\/USR><Declaration>public static func decode(from res: Response, for req: Request) throws -&gt; EventLoopFuture&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ResponseDecodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 84,
            "key.doc.name" : "decode(from:for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 2610,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>res<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 161,
            "key.name" : "decode(from:for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 2662,
            "key.offset" : 2650,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor17ResponseDecodableP6decode4from3for3NIO15EventLoopFutureCyxGAA0B0C_AA7RequestCtKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func decode(from res: Response, for req: Request) throws -> EventLoopFuture<Response>",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 84,
            "key.substructure" : [

            ],
            "key.typename" : "(Response.Type) -> (Response, Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S4from3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAH_AF7RequestCtKcD",
            "key.usr" : "s:5Vapor8ResponseC6decode4from3for3NIO15EventLoopFutureCyACGAC_AA7RequestCtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2850
              }
            ],
            "key.bodylength" : 67,
            "key.bodyoffset" : 2915,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ResponseEncodable`.",
            "key.doc.declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift\" line=\"89\" column=\"17\"><Name>encode(for:)<\/Name><USR>s:5Vapor8ResponseC6encode3for3NIO15EventLoopFutureCyACGAA7RequestC_tKF<\/USR><Declaration>public func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ResponseEncodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 89,
            "key.doc.name" : "encode(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 2817,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/Response.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 126,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 2862,
            "key.offset" : 2857,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 89,
            "key.substructure" : [

            ],
            "key.typename" : "(Response) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Vapor8ResponseC6encode3for3NIO15EventLoopFutureCyACGAA7RequestC_tKF"
          }
        ],
        "key.typename" : "Response.Type",
        "key.typeusr" : "$S5Vapor8ResponseCmD",
        "key.usr" : "s:5Vapor8ResponseC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3450,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol ResponseDecodable<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 56
          }
        ],
        "key.bodylength" : 367,
        "key.bodyoffset" : 91,
        "key.doc.column" : 17,
        "key.doc.comment" : "Can create an instance of `Self` from a `Response`.",
        "key.doc.declaration" : "public protocol ResponseDecodable",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"2\" column=\"17\"><Name>ResponseDecodable<\/Name><USR>s:5Vapor17ResponseDecodableP<\/USR><Declaration>public protocol ResponseDecodable<\/Declaration><CommentParts><Abstract><Para>Can create an instance of <codeVoice>Self<\/codeVoice> from a <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "ResponseDecodable",
        "key.doc.type" : "Class",
        "key.doclength" : 56,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ResponseDecodable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 396,
        "key.name" : "ResponseDecodable",
        "key.namelength" : 17,
        "key.nameoffset" : 72,
        "key.offset" : 63,
        "key.parsed_declaration" : "public protocol ResponseDecodable",
        "key.parsed_scope.end" : 10,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main17ResponseDecodable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func decode(from res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>, for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor17ResponseDecodableP4Selfxmfp\">Self<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 17,
            "key.doc.comment" : "Decodes an instance of `Self` asynchronously from a `Response`.\n\n- parameters:\n    - res: `Response` to decode.\n    - req: The `Request` associated with this `Response`.\n- returns: A `Future` containing the decoded instance of `Self`.",
            "key.doc.declaration" : "static func decode(from res: Response, for req: Request) throws -> Future<Self>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"9\" column=\"17\"><Name>decode(from:for:)<\/Name><USR>s:5Vapor17ResponseDecodableP6decode4from3for3NIO15EventLoopFutureCyxGAA0B0C_AA7RequestCtKFZ<\/USR><Declaration>static func decode(from res: Response, for req: Request) throws -&gt; Future&lt;Self&gt;<\/Declaration><CommentParts><Abstract><Para>Decodes an instance of <codeVoice>Self<\/codeVoice> asynchronously from a <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>res<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Response<\/codeVoice> to decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Request<\/codeVoice> associated with this <codeVoice>Response<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the decoded instance of <codeVoice>Self<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 9,
            "key.doc.name" : "decode(from:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Response` to decode."
                  }
                ],
                "name" : "res"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The `Request` associated with this `Response`."
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the decoded instance of `Self`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 278,
            "key.docoffset" : 96,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>decode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>res<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.generic_type_param usr=\"s:5Vapor17ResponseDecodableP4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 79,
            "key.name" : "decode(from:for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 390,
            "key.offset" : 378,
            "key.parsed_declaration" : "static func decode(from res: Response, for req: Request) throws -> Future<Self>",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ResponseDecodable> (Self.Type) -> (Response, Request) throws -> EventLoopFuture<Self>",
            "key.typeusr" : "$S4from3for3NIO15EventLoopFutureCyxG5Vapor8ResponseC_AG7RequestCtKcD",
            "key.usr" : "s:5Vapor17ResponseDecodableP6decode4from3for3NIO15EventLoopFutureCyxGAA0B0C_AA7RequestCtKFZ"
          }
        ],
        "key.typename" : "ResponseDecodable.Protocol",
        "key.typeusr" : "$S5Vapor17ResponseDecodable_pmD",
        "key.usr" : "s:5Vapor17ResponseDecodableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol ResponseEncodable<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 580
          }
        ],
        "key.bodylength" : 285,
        "key.bodyoffset" : 615,
        "key.doc.column" : 17,
        "key.doc.comment" : "Can convert `self` to a `Response`.\n\nTypes that conform to this protocol can be returned in route closures.",
        "key.doc.declaration" : "public protocol ResponseEncodable",
        "key.doc.discussion" : [
          {
            "Para" : "Types that conform to this protocol can be returned in route closures."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"15\" column=\"17\"><Name>ResponseEncodable<\/Name><USR>s:5Vapor17ResponseEncodableP<\/USR><Declaration>public protocol ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Can convert <codeVoice>self<\/codeVoice> to a <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Types that conform to this protocol can be returned in route closures.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 15,
        "key.doc.name" : "ResponseEncodable",
        "key.doc.type" : "Class",
        "key.doclength" : 119,
        "key.docoffset" : 461,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ResponseEncodable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 314,
        "key.name" : "ResponseEncodable",
        "key.namelength" : 17,
        "key.nameoffset" : 596,
        "key.offset" : 587,
        "key.parsed_declaration" : "public protocol ResponseEncodable",
        "key.parsed_scope.end" : 22,
        "key.parsed_scope.start" : 15,
        "key.runtime_name" : "_TtP4main17ResponseEncodable_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Encodes an instance of `Self` asynchronously to a `Response`.\n\n- parameters:\n    - req: The `Request` associated with this `Response`.\n- returns: A `Future` containing the `Response`.",
            "key.doc.declaration" : "func encode(for req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"21\" column=\"10\"><Name>encode(for:)<\/Name><USR>s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF<\/USR><Declaration>func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Encodes an instance of <codeVoice>Self<\/codeVoice> asynchronously to a <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The <codeVoice>Request<\/codeVoice> associated with this <codeVoice>Response<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the <codeVoice>Response<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 21,
            "key.doc.name" : "encode(for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The `Request` associated with this `Response`."
                  }
                ],
                "name" : "req"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the `Response`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 219,
            "key.docoffset" : 620,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 56,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 848,
            "key.offset" : 843,
            "key.parsed_declaration" : "func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor17ResponseEncodablePAAE6encode6status7headers3for3NIO15EventLoopFutureCyAA0B0CG8NIOHTTP118HTTPResponseStatusO_AN11HTTPHeadersVAA7RequestCtF\">encode(status:headers:for:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ResponseEncodable> (Self) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF"
          }
        ],
        "key.typename" : "ResponseEncodable.Protocol",
        "key.typeusr" : "$S5Vapor17ResponseEncodable_pmD",
        "key.usr" : "s:5Vapor17ResponseEncodableP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias ResponseCodable = <Type usr=\"s:5Vapor17ResponseDecodableP\">ResponseDecodable<\/Type> &amp; <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 950
          }
        ],
        "key.doc.column" : 18,
        "key.doc.comment" : "Can be converted to and from a `Response`.",
        "key.doc.declaration" : "public typealias ResponseCodable = ResponseDecodable & ResponseEncodable",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"25\" column=\"18\"><Name>ResponseCodable<\/Name><USR>s:5Vapor15ResponseCodablea<\/USR><Declaration>public typealias ResponseCodable = ResponseDecodable &amp; ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Can be converted to and from a <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 25,
        "key.doc.name" : "ResponseCodable",
        "key.doc.type" : "Other",
        "key.doclength" : 47,
        "key.docoffset" : 903,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>ResponseCodable<\/decl.name> = <ref.protocol usr=\"s:5Vapor17ResponseDecodableP\">ResponseDecodable<\/ref.protocol> &amp; <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 65,
        "key.name" : "ResponseCodable",
        "key.namelength" : 15,
        "key.nameoffset" : 967,
        "key.offset" : 957,
        "key.parsed_declaration" : "public typealias ResponseCodable = ResponseDecodable & ResponseEncodable",
        "key.parsed_scope.end" : 25,
        "key.parsed_scope.start" : 25,
        "key.typename" : "ResponseDecodable & ResponseEncodable.Protocol",
        "key.typeusr" : "$S5Vapor17ResponseDecodable_AA0B9EncodablepmD",
        "key.usr" : "s:5Vapor15ResponseCodablea"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 17,
        "key.name" : "MARK: Convenience",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1027
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol ResponseEncodable<\/Declaration>",
        "key.bodylength" : 1062,
        "key.bodyoffset" : 1075,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol ResponseEncodable",
        "key.doc.discussion" : [
          {
            "Para" : "Types that conform to this protocol can be returned in route closures."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"15\" column=\"17\"><Name>ResponseEncodable<\/Name><USR>s:5Vapor17ResponseEncodableP<\/USR><Declaration>public protocol ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Can convert <codeVoice>self<\/codeVoice> to a <codeVoice>Response<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Types that conform to this protocol can be returned in route closures.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 15,
        "key.doc.name" : "ResponseEncodable",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ResponseEncodable<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1092,
        "key.name" : "ResponseEncodable",
        "key.namelength" : 17,
        "key.nameoffset" : 1056,
        "key.offset" : 1046,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(status: <Type usr=\"s:5Vapor10HTTPStatusa\">HTTPStatus<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1644
              }
            ],
            "key.bodylength" : 385,
            "key.bodyoffset" : 1750,
            "key.doc.column" : 17,
            "key.doc.comment" : "Asynchronously encodes `Self` into a `Response`, setting the supplied status and headers.\n\n    router.post(\"users\") { req -> Future<Response> in\n        return try req.content\n            .decode(User.self)\n            .save(on: req)\n            .encode(status: .created, for: req)\n    }\n\n- parameters:\n    - status: `HTTPStatus` to set on the `Response`.\n    - headers: `HTTPHeaders` to merge into the `Response`'s headers.\n- returns: Newly encoded `Response`.",
            "key.doc.declaration" : "public func encode(status: HTTPStatus, headers: HTTPHeaders = default, for req: Request) -> Future<Response>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"43\" column=\"17\"><Name>encode(status:headers:for:)<\/Name><USR>s:5Vapor17ResponseEncodablePAAE6encode6status7headers3for3NIO15EventLoopFutureCyAA0B0CG8NIOHTTP118HTTPResponseStatusO_AN11HTTPHeadersVAA7RequestCtF<\/USR><Declaration>public func encode(status: HTTPStatus, headers: HTTPHeaders = default, for req: Request) -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Asynchronously encodes <codeVoice>Self<\/codeVoice> into a <codeVoice>Response<\/codeVoice>, setting the supplied status and headers.<\/Para><\/Abstract><Parameters><Parameter><Name>status<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPStatus<\/codeVoice> to set on the <codeVoice>Response<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPHeaders<\/codeVoice> to merge into the <codeVoice>Response<\/codeVoice>’s headers.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Newly encoded <codeVoice>Response<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.post(\"users\") { req -> Future<Response> in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return try req.content]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .decode(User.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .save(on: req)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .encode(status: .created, for: req)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 43,
            "key.doc.name" : "encode(status:headers:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPStatus` to set on the `Response`."
                  }
                ],
                "name" : "status"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPHeaders` to merge into the `Response`’s headers."
                  }
                ],
                "name" : "headers"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Newly encoded `Response`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 560,
            "key.docoffset" : 1080,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>status<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:5Vapor10HTTPStatusa\">HTTPStatus<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 485,
            "key.name" : "encode(status:headers:for:)",
            "key.namelength" : 72,
            "key.nameoffset" : 1656,
            "key.offset" : 1651,
            "key.parsed_declaration" : "public func encode(status: HTTPStatus, headers: HTTPHeaders = [:], for req: Request) -> Future<Response>",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 43,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF\">encode(for:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : ResponseEncodable> (Self) -> (HTTPResponseStatus, HTTPHeaders, Request) -> EventLoopFuture<Response>",
            "key.typeusr" : "$S6status7headers3for3NIO15EventLoopFutureCy5Vapor8ResponseCG8NIOHTTP118HTTPResponseStatusO_AK11HTTPHeadersVAG7RequestCtcD",
            "key.usr" : "s:5Vapor17ResponseEncodablePAAE6encode6status7headers3for3NIO15EventLoopFutureCyAA0B0CG8NIOHTTP118HTTPResponseStatusO_AN11HTTPHeadersVAA7RequestCtF"
          }
        ],
        "key.typename" : "ResponseEncodable.Protocol",
        "key.typeusr" : "$S5Vapor17ResponseEncodable_pmD",
        "key.usr" : "s:5Vapor17ResponseEncodableP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 26,
        "key.name" : "MARK: Default Conformances",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 2143
      },
      {
        "key.annotated_decl" : "<Declaration>struct HTTPResponse : <Type usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/Type><\/Declaration>",
        "key.bodylength" : 232,
        "key.bodyoffset" : 2214,
        "key.doc.declaration" : "struct HTTPResponse : HTTPMessage",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPClient` and `HTTPServer`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>HTTPResponse<\/Name><USR>s:4HTTP12HTTPResponseV<\/USR><Declaration>struct HTTPResponse : HTTPMessage<\/Declaration><CommentParts><Abstract><Para>An HTTP response from a server back to the client.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let httpRes = HTTPResponse(status: .ok)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPClient<\/codeVoice> and <codeVoice>HTTPServer<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "HTTPResponse",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 2195
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>HTTPResponse<\/decl.name> : <ref.protocol usr=\"s:4HTTP11HTTPMessageP\">HTTPMessage<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ResponseEncodable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 276,
        "key.modulename" : "HTTP",
        "key.name" : "HTTPResponse",
        "key.namelength" : 12,
        "key.nameoffset" : 2181,
        "key.offset" : 2171,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2252
              }
            ],
            "key.bodylength" : 127,
            "key.bodyoffset" : 2317,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ResponseEncodable`.",
            "key.doc.declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"62\" column=\"17\"><Name>encode(for:)<\/Name><USR>s:4HTTP12HTTPResponseV5VaporE6encode3for3NIO15EventLoopFutureCyAD8ResponseCGAD7RequestC_tKF<\/USR><Declaration>public func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ResponseEncodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 62,
            "key.doc.name" : "encode(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 2219,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 186,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 2264,
            "key.offset" : 2259,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 66,
            "key.parsed_scope.start" : 62,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let new: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>new<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 28,
                "key.name" : "new",
                "key.namelength" : 3,
                "key.nameoffset" : 2330,
                "key.offset" : 2326,
                "key.parsed_declaration" : "let new = req.makeResponse()",
                "key.parsed_scope.end" : 63,
                "key.parsed_scope.start" : 63,
                "key.typename" : "Response",
                "key.typeusr" : "$S5Vapor8ResponseCD",
                "key.usr" : "s:4HTTP12HTTPResponseV5VaporE6encode3for3NIO15EventLoopFutureCyAD8ResponseCGAD7RequestC_tKF3newL_AKvp"
              }
            ],
            "key.typename" : "(HTTPResponse) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:4HTTP12HTTPResponseV5VaporE6encode3for3NIO15EventLoopFutureCyAD8ResponseCGAD7RequestC_tKF"
          }
        ],
        "key.typename" : "HTTPResponse.Type",
        "key.typeusr" : "$S4HTTP12HTTPResponseVmD",
        "key.usr" : "s:4HTTP12HTTPResponseV"
      },
      {
        "key.annotated_decl" : "<Declaration>typealias Future = <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type><\/Declaration>",
        "key.bodylength" : 161,
        "key.bodyoffset" : 2513,
        "key.doc.declaration" : "typealias Future = NIO.EventLoopFuture",
        "key.doc.full_as_xml" : "<Other><Name>Future<\/Name><USR>s:5Async6Futurea<\/USR><Declaration>typealias Future = NIO.EventLoopFuture<\/Declaration><CommentParts><Abstract><Para>Convenience shorthand for <codeVoice>EventLoopFuture<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.name" : "Future",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 2467
          }
        ],
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Future<\/decl.name> = <ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class><\/decl.typealias>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ResponseEncodable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 226,
        "key.modulename" : "Async",
        "key.name" : "Future",
        "key.namelength" : 6,
        "key.nameoffset" : 2459,
        "key.offset" : 2449,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2551
              }
            ],
            "key.bodylength" : 56,
            "key.bodyoffset" : 2616,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ResponseEncodable`.",
            "key.doc.declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"71\" column=\"17\"><Name>encode(for:)<\/Name><USR>s:3NIO15EventLoopFutureC5VaporAD17ResponseEncodableRzlE6encode3forACyAD0F0CGAD7RequestC_tKF<\/USR><Declaration>public func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ResponseEncodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 71,
            "key.doc.name" : "encode(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 2518,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 115,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 2563,
            "key.offset" : 2558,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 71,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:3NIO15EventLoopFutureC4CoreSERzlE6encode2toys7Encoder_p_tKF\">encode(to:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<T where T : ResponseEncodable> (EventLoopFuture<T>) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:3NIO15EventLoopFutureC5VaporAD17ResponseEncodableRzlE6encode3forACyAD0F0CGAD7RequestC_tKF"
          }
        ],
        "key.typename" : "EventLoopFuture.Type",
        "key.typeusr" : "$S3NIO15EventLoopFutureCmD",
        "key.usr" : "s:5Async6Futurea"
      },
      {
        "key.annotated_decl" : "<Declaration>struct StaticString : <Type usr=\"s:s33ExpressibleByUnicodeScalarLiteralP\">ExpressibleByUnicodeScalarLiteral<\/Type>, <Type usr=\"s:s43ExpressibleByExtendedGraphemeClusterLiteralP\">ExpressibleByExtendedGraphemeClusterLiteral<\/Type>, <Type usr=\"s:s26ExpressibleByStringLiteralP\">ExpressibleByStringLiteral<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type>, <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type>, <Type usr=\"s:s17CustomReflectableP\">CustomReflectable<\/Type><\/Declaration>",
        "key.bodylength" : 297,
        "key.bodyoffset" : 2720,
        "key.doc.declaration" : "struct StaticString : ExpressibleByUnicodeScalarLiteral, ExpressibleByExtendedGraphemeClusterLiteral, ExpressibleByStringLiteral, CustomStringConvertible, CustomDebugStringConvertible, CustomReflectable",
        "key.doc.discussion" : [
          {
            "Para" : "Instances of the `StaticString` type are immutable. `StaticString` provides limited, pointer-based access to its contents, unlike Swift’s more commonly used `String` type. A static string can store its value as a pointer to an ASCII code unit sequence, as a pointer to a UTF-8 code unit sequence, or as a single Unicode scalar value."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>StaticString<\/Name><USR>s:s12StaticStringV<\/USR><Declaration>struct StaticString : ExpressibleByUnicodeScalarLiteral, ExpressibleByExtendedGraphemeClusterLiteral, ExpressibleByStringLiteral, CustomStringConvertible, CustomDebugStringConvertible, CustomReflectable<\/Declaration><CommentParts><Abstract><Para>A string type designed to represent text that is known at compile time.<\/Para><\/Abstract><Discussion><Para>Instances of the <codeVoice>StaticString<\/codeVoice> type are immutable. <codeVoice>StaticString<\/codeVoice> provides limited, pointer-based access to its contents, unlike Swift’s more commonly used <codeVoice>String<\/codeVoice> type. A static string can store its value as a pointer to an ASCII code unit sequence, as a pointer to a UTF-8 code unit sequence, or as a single Unicode scalar value.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "StaticString",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 2701
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>StaticString<\/decl.name> : <ref.protocol usr=\"s:s33ExpressibleByUnicodeScalarLiteralP\">ExpressibleByUnicodeScalarLiteral<\/ref.protocol>, <ref.protocol usr=\"s:s43ExpressibleByExtendedGraphemeClusterLiteralP\">ExpressibleByExtendedGraphemeClusterLiteral<\/ref.protocol>, <ref.protocol usr=\"s:s26ExpressibleByStringLiteralP\">ExpressibleByStringLiteral<\/ref.protocol>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s17CustomReflectableP\">CustomReflectable<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "String",
        "key.inheritedtypes" : [
          {
            "key.name" : "ResponseEncodable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 341,
        "key.modulename" : "Swift",
        "key.name" : "StaticString",
        "key.namelength" : 12,
        "key.nameoffset" : 2687,
        "key.offset" : 2677,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2758
              }
            ],
            "key.bodylength" : 192,
            "key.bodyoffset" : 2823,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ResponseEncodable`.",
            "key.doc.declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"78\" column=\"17\"><Name>encode(for:)<\/Name><USR>s:s12StaticStringV5VaporE6encode3for3NIO15EventLoopFutureCyAC8ResponseCGAC7RequestC_tKF<\/USR><Declaration>public func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ResponseEncodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 78,
            "key.doc.name" : "encode(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 2725,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 251,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 2770,
            "key.offset" : 2765,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 81,
            "key.parsed_scope.start" : 78,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>res<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "String",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 101,
                "key.name" : "res",
                "key.namelength" : 3,
                "key.nameoffset" : 2836,
                "key.offset" : 2832,
                "key.parsed_declaration" : "let res = Response(http: .init(headers: staticStringHeaders, body: self), using: req.sharedContainer)",
                "key.parsed_scope.end" : 79,
                "key.parsed_scope.start" : 79,
                "key.typename" : "Response",
                "key.typeusr" : "$S5Vapor8ResponseCD",
                "key.usr" : "s:s12StaticStringV5VaporE6encode3for3NIO15EventLoopFutureCyAC8ResponseCGAC7RequestC_tKF3resL_AJvp"
              }
            ],
            "key.typename" : "(StaticString) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:s12StaticStringV5VaporE6encode3for3NIO15EventLoopFutureCyAC8ResponseCGAC7RequestC_tKF"
          }
        ],
        "key.typename" : "StaticString.Type",
        "key.typeusr" : "$Ss12StaticStringVmD",
        "key.usr" : "s:s12StaticStringV"
      },
      {
        "key.annotated_decl" : "<Declaration>struct String<\/Declaration>",
        "key.bodylength" : 297,
        "key.bodyoffset" : 3057,
        "key.doc.declaration" : "struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and the accent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 3038
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.inheritedtypes" : [
          {
            "key.name" : "ResponseEncodable"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 335,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 3030,
        "key.offset" : 3020,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3095
              }
            ],
            "key.bodylength" : 192,
            "key.bodyoffset" : 3160,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ResponseEncodable`.",
            "key.doc.declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift\" line=\"86\" column=\"17\"><Name>encode(for:)<\/Name><USR>s:SS5VaporE6encode3for3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF<\/USR><Declaration>public func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ResponseEncodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 86,
            "key.doc.name" : "encode(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 3062,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 251,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 3107,
            "key.offset" : 3102,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 89,
            "key.parsed_scope.start" : 86,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS6encode2toys7Encoder_p_tKF\">encode(to:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>res<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "String",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 101,
                "key.name" : "res",
                "key.namelength" : 3,
                "key.nameoffset" : 3173,
                "key.offset" : 3169,
                "key.parsed_declaration" : "let res = Response(http: .init(headers: staticStringHeaders, body: self), using: req.sharedContainer)",
                "key.parsed_scope.end" : 87,
                "key.parsed_scope.start" : 87,
                "key.typename" : "Response",
                "key.typeusr" : "$S5Vapor8ResponseCD",
                "key.usr" : "s:SS5VaporE6encode3for3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF3resL_AHvp"
              }
            ],
            "key.typename" : "(String) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:SS5VaporE6encode3for3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$SSSmD",
        "key.usr" : "s:SS"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private let staticStringHeaders: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 3357
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Response\/ResponseCodable.swift",
        "key.fully_annotated_decl" : "<decl.var.global><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>staticStringHeaders<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type><\/decl.var.global>",
        "key.kind" : "source.lang.swift.decl.var.global",
        "key.length" : 84,
        "key.name" : "staticStringHeaders",
        "key.namelength" : 19,
        "key.nameoffset" : 3369,
        "key.offset" : 3365,
        "key.parsed_declaration" : "private let staticStringHeaders: HTTPHeaders = [\"content-type\": \"text\/plain; charset=utf-8\"]",
        "key.parsed_scope.end" : 92,
        "key.parsed_scope.start" : 92,
        "key.typename" : "HTTPHeaders",
        "key.typeusr" : "$S8NIOHTTP111HTTPHeadersVD",
        "key.usr" : "s:5Vapor19staticStringHeaders33_AF65FDA60D7DA29092039369EF9964A9LL8NIOHTTP111HTTPHeadersVvp"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2626,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class EngineRouter : <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 53
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 46
          }
        ],
        "key.bodylength" : 1424,
        "key.bodyoffset" : 87,
        "key.doc.column" : 20,
        "key.doc.comment" : "An HTTP wrapper around the TrieNodeRouter",
        "key.doc.declaration" : "public final class EngineRouter : Router",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"2\" column=\"20\"><Name>EngineRouter<\/Name><USR>s:5Vapor12EngineRouterC<\/USR><Declaration>public final class EngineRouter : Router<\/Declaration><CommentParts><Abstract><Para>An HTTP wrapper around the TrieNodeRouter<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "EngineRouter",
        "key.doc.type" : "Class",
        "key.doclength" : 46,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 79
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>EngineRouter<\/decl.name> : <ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Router"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1453,
        "key.name" : "EngineRouter",
        "key.namelength" : 12,
        "key.nameoffset" : 65,
        "key.offset" : 59,
        "key.parsed_declaration" : "public final class EngineRouter: Router",
        "key.parsed_scope.end" : 44,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtC4main12EngineRouter",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`() -&gt; <Type usr=\"s:5Vapor12EngineRouterC\">EngineRouter<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 279
              }
            ],
            "key.bodylength" : 57,
            "key.bodyoffset" : 327,
            "key.doc.column" : 24,
            "key.doc.comment" : "Create a new `EngineRouter` with default settings.\n\nCurrently this creates an `EngineRouter` with case-sensitive routing but\nthis may change in the future.",
            "key.doc.declaration" : "public static func `default`() -> EngineRouter",
            "key.doc.discussion" : [
              {
                "Para" : "Currently this creates an `EngineRouter` with case-sensitive routing but this may change in the future."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"7\" column=\"24\"><Name>default()<\/Name><USR>s:5Vapor12EngineRouterC7defaultACyFZ<\/USR><Declaration>public static func `default`() -&gt; EngineRouter<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>EngineRouter<\/codeVoice> with default settings.<\/Para><\/Abstract><Discussion><Para>Currently this creates an <codeVoice>EngineRouter<\/codeVoice> with case-sensitive routing but this may change in the future.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 7,
            "key.doc.name" : "default()",
            "key.doc.type" : "Function",
            "key.doclength" : 183,
            "key.docoffset" : 92,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor12EngineRouterC\">EngineRouter<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 99,
            "key.name" : "default()",
            "key.namelength" : 11,
            "key.nameoffset" : 298,
            "key.offset" : 286,
            "key.parsed_declaration" : "public static func `default`() -> EngineRouter",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 7,
            "key.substructure" : [

            ],
            "key.typename" : "(EngineRouter.Type) -> () -> EngineRouter",
            "key.typeusr" : "$S5Vapor12EngineRouterCycD",
            "key.usr" : "s:5Vapor12EngineRouterC7defaultACyFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let router: <Type usr=\"s:7Routing10TrieRouterC\">TrieRouter<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 419
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The internal router",
            "key.doc.declaration" : "private let router: TrieRouter<Responder>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"12\" column=\"17\"><Name>router<\/Name><USR>s:5Vapor12EngineRouterC6router33_BEC152AEA6A3EF7DFCB6A2C5C64A1C1ALL7Routing04TrieC0CyAA9Responder_pGvp<\/USR><Declaration>private let router: TrieRouter&lt;Responder&gt;<\/Declaration><CommentParts><Abstract><Para>The internal router<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 12,
            "key.doc.name" : "router",
            "key.doc.type" : "Other",
            "key.doclength" : 24,
            "key.docoffset" : 391,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>router<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Routing10TrieRouterC\">TrieRouter<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "router",
            "key.namelength" : 6,
            "key.nameoffset" : 431,
            "key.offset" : 427,
            "key.parsed_declaration" : "private let router: TrieRouter<Responder>",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "TrieRouter<Responder>",
            "key.typeusr" : "$S7Routing10TrieRouterCy5Vapor9Responder_pGD",
            "key.usr" : "s:5Vapor12EngineRouterC6router33_BEC152AEA6A3EF7DFCB6A2C5C64A1C1ALL7Routing04TrieC0CyAA9Responder_pGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var routes: [<Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 488
              }
            ],
            "key.bodylength" : 34,
            "key.bodyoffset" : 527,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `Router`.",
            "key.doc.declaration" : "public var routes: [Route<Responder>] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"15\" column=\"16\"><Name>routes<\/Name><USR>s:5Vapor12EngineRouterC6routesSay7Routing5RouteCyAA9Responder_pGGvp<\/USR><Declaration>public var routes: [Route&lt;Responder&gt;] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 15,
            "key.doc.name" : "routes",
            "key.doc.type" : "Other",
            "key.doclength" : 18,
            "key.docoffset" : 466,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>routes<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 67,
            "key.name" : "routes",
            "key.namelength" : 6,
            "key.nameoffset" : 499,
            "key.offset" : 495,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP6routesSay7Routing5RouteCyAA9Responder_pGGvp"
              }
            ],
            "key.parsed_declaration" : "public var routes: [Route<Responder>]",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 15,
            "key.typename" : "[Route<Responder>]",
            "key.typeusr" : "$SSay7Routing5RouteCy5Vapor9Responder_pGGD",
            "key.usr" : "s:5Vapor12EngineRouterC6routesSay7Routing5RouteCyAA9Responder_pGGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(caseInsensitive: <Type usr=\"s:Sb\">Bool<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 718
              }
            ],
            "key.bodylength" : 131,
            "key.bodyoffset" : 754,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `EngineRouter`.\n\n- parameters:\n    - caseInsensitive: If `true`, route matching will be case-insensitive.",
            "key.doc.declaration" : "public init(caseInsensitive: Bool)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"23\" column=\"12\"><Name>init(caseInsensitive:)<\/Name><USR>s:5Vapor12EngineRouterC15caseInsensitiveACSb_tcfc<\/USR><Declaration>public init(caseInsensitive: Bool)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>EngineRouter<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>caseInsensitive<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>If <codeVoice>true<\/codeVoice>, route matching will be case-insensitive.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 23,
            "key.doc.name" : "init(caseInsensitive:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "If `true`, route matching will be case-insensitive."
                  }
                ],
                "name" : "caseInsensitive"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 146,
            "key.docoffset" : 568,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>caseInsensitive<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 161,
            "key.name" : "init(caseInsensitive:)",
            "key.namelength" : 27,
            "key.nameoffset" : 725,
            "key.offset" : 725,
            "key.parsed_declaration" : "public init(caseInsensitive: Bool)",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 23,
            "key.substructure" : [

            ],
            "key.typename" : "(EngineRouter.Type) -> (Bool) -> EngineRouter",
            "key.typeusr" : "$S15caseInsensitive5Vapor12EngineRouterCSb_tcD",
            "key.usr" : "s:5Vapor12EngineRouterC15caseInsensitiveACSb_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func register(route: <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 914
              }
            ],
            "key.bodylength" : 43,
            "key.bodyoffset" : 961,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Router`.",
            "key.doc.declaration" : "public func register(route: Route<Responder>)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"31\" column=\"17\"><Name>register(route:)<\/Name><USR>s:5Vapor12EngineRouterC8register5routey7Routing5RouteCyAA9Responder_pG_tF<\/USR><Declaration>public func register(route: Route&lt;Responder&gt;)<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 31,
            "key.doc.name" : "register(route:)",
            "key.doc.type" : "Function",
            "key.doclength" : 18,
            "key.docoffset" : 892,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>route<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 84,
            "key.name" : "register(route:)",
            "key.namelength" : 33,
            "key.nameoffset" : 926,
            "key.offset" : 921,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP8register5routey7Routing5RouteCyAA9Responder_pG_tF"
              }
            ],
            "key.parsed_declaration" : "public func register(route: Route<Responder>)",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 31,
            "key.substructure" : [

            ],
            "key.typename" : "(EngineRouter) -> (Route<Responder>) -> ()",
            "key.typeusr" : "$S5routey7Routing5RouteCy5Vapor9Responder_pG_tcD",
            "key.usr" : "s:5Vapor12EngineRouterC8register5routey7Routing5RouteCyAA9Responder_pG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func route(request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1033
              }
            ],
            "key.bodylength" : 425,
            "key.bodyoffset" : 1084,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Router`.",
            "key.doc.declaration" : "public func route(request: Request) -> Responder?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"36\" column=\"17\"><Name>route(request:)<\/Name><USR>s:5Vapor12EngineRouterC5route7requestAA9Responder_pSgAA7RequestC_tF<\/USR><Declaration>public func route(request: Request) -&gt; Responder?<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 36,
            "key.doc.name" : "route(request:)",
            "key.doc.type" : "Function",
            "key.doclength" : 18,
            "key.docoffset" : 1011,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>route<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 470,
            "key.name" : "route(request:)",
            "key.namelength" : 23,
            "key.nameoffset" : 1045,
            "key.offset" : 1040,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP5route7requestAA9Responder_pSgAA7RequestC_tF"
              }
            ],
            "key.parsed_declaration" : "public func route(request: Request) -> Responder?",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 36,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 57,
                "key.name" : "FIXME: use NIO's underlying uri byte buffer when possible",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 1096
              },
              {
                "key.annotated_decl" : "<Declaration>let path: [<Type usr=\"s:Ss\">Substring<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:Ss\">Substring<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 133,
                "key.name" : "path",
                "key.namelength" : 4,
                "key.nameoffset" : 1267,
                "key.offset" : 1263,
                "key.parsed_declaration" : "let path: [Substring] = request.http.urlString",
                "key.parsed_scope.end" : 39,
                "key.parsed_scope.start" : 39,
                "key.typename" : "[Substring]",
                "key.typeusr" : "$SSaySsGD",
                "key.usr" : "s:5Vapor12EngineRouterC5route7requestAA9Responder_pSgAA7RequestC_tF4pathL_SaySsGvp"
              }
            ],
            "key.typename" : "(EngineRouter) -> (Request) -> Responder?",
            "key.typeusr" : "$S7request5Vapor9Responder_pSgAB7RequestC_tcD",
            "key.usr" : "s:5Vapor12EngineRouterC5route7requestAA9Responder_pSgAA7RequestC_tF"
          }
        ],
        "key.typename" : "EngineRouter.Type",
        "key.typeusr" : "$S5Vapor12EngineRouterCmD",
        "key.usr" : "s:5Vapor12EngineRouterC"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Substring : <Type usr=\"s:Sy\">StringProtocol<\/Type><\/Declaration>",
        "key.bodylength" : 831,
        "key.bodyoffset" : 1554,
        "key.doc.declaration" : "struct Substring : StringProtocol",
        "key.doc.discussion" : [
          {
            "Para" : "When you create a slice of a string, a `Substring` instance is the result. Operating on substrings is fast and efficient because a substring shares its storage with the original string. The `Substring` type presents the same interface as `String`, so you can avoid or defer any copying of the string’s contents."
          },
          {
            "Para" : "The following example creates a `greeting` string, and then finds the substring of the first sentence:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can perform many string operations on a substring. Here, we find the length of the first sentence and create an uppercase version."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "This example defines a `rawData` string with some unstructured data, and then uses the string’s `prefix(while:)` method to create a substring of the numeric prefix:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to store a substring or pass it to a function that requires a `String` instance, you can convert it to a `String` by using the `String(_:)` initializer. Calling this initializer copies the contents of the substring to a new string."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Alternatively, you can convert the function that takes a `String` to one that is generic over the `StringProtocol` protocol. The following code declares a generic version of the `parseAndAddOne(_:)` function:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can call this generic function with an instance of either `String` or `Substring`."
          },
          {
            "Important" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Substring<\/Name><USR>s:Ss<\/USR><Declaration>struct Substring : StringProtocol<\/Declaration><CommentParts><Abstract><Para>A slice of a string.<\/Para><\/Abstract><Discussion><Para>When you create a slice of a string, a <codeVoice>Substring<\/codeVoice> instance is the result. Operating on substrings is fast and efficient because a substring shares its storage with the original string. The <codeVoice>Substring<\/codeVoice> type presents the same interface as <codeVoice>String<\/codeVoice>, so you can avoid or defer any copying of the string’s contents.<\/Para><Para>The following example creates a <codeVoice>greeting<\/codeVoice> string, and then finds the substring of the first sentence:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Hi there! It's nice to meet you! 👋\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let endOfSentence = greeting.firstIndex(of: \"!\")!]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSentence = greeting[...endOfSentence]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstSentence == \"Hi there!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can perform many string operations on a substring. Here, we find the length of the first sentence and create an uppercase version.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"'\\(firstSentence)' is \\(firstSentence.count) characters long.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"'Hi there!' is 9 characters long.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let shoutingSentence = firstSentence.uppercased()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ shoutingSentence == \"HI THERE!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Converting a Substring to a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>This example defines a <codeVoice>rawData<\/codeVoice> string with some unstructured data, and then uses the string’s <codeVoice>prefix(while:)<\/codeVoice> method to create a substring of the numeric prefix:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let rawInput = \"126 a.b 22219 zzzzzz\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let numericPrefix = rawInput.prefix(while: { \"0\"...\"9\" ~= $0 })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ numericPrefix is the substring \"126\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When you need to store a substring or pass it to a function that requires a <codeVoice>String<\/codeVoice> instance, you can convert it to a <codeVoice>String<\/codeVoice> by using the <codeVoice>String(_:)<\/codeVoice> initializer. Calling this initializer copies the contents of the substring to a new string.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[func parseAndAddOne(_ s: String) -> Int {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return Int(s, radix: 10)! + 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[_ = parseAndAddOne(numericPrefix)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let incrementedPrefix = parseAndAddOne(String(numericPrefix))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ incrementedPrefix == 127]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Alternatively, you can convert the function that takes a <codeVoice>String<\/codeVoice> to one that is generic over the <codeVoice>StringProtocol<\/codeVoice> protocol. The following code declares a generic version of the <codeVoice>parseAndAddOne(_:)<\/codeVoice> function:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[func genericParseAndAddOne<S: StringProtocol>(_ s: S) -> Int {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return Int(s, radix: 10)! + 1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let genericallyIncremented = genericParseAndAddOne(numericPrefix)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ genericallyIncremented == 127]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can call this generic function with an instance of either <codeVoice>String<\/codeVoice> or <codeVoice>Substring<\/codeVoice>.<\/Para><Important><Para>Don’t store substrings longer than you need them to perform a specific operation. A substring holds a reference to the entire storage of the string it comes from, not just to the portion it presents, even when there is no other reference to the original string. Storing substrings may, therefore, prolong the lifetime of string data that is no longer otherwise accessible, which can appear to be memory leakage.<\/Para><\/Important><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Substring",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 1535
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Substring<\/decl.name> : <ref.protocol usr=\"s:Sy\">StringProtocol<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "String",
        "key.inheritedtypes" : [
          {
            "key.name" : "RoutableComponent"
          }
        ],
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 872,
        "key.modulename" : "Swift",
        "key.name" : "Substring",
        "key.namelength" : 9,
        "key.nameoffset" : 1524,
        "key.offset" : 1514,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var routerParameterValue: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1592
              }
            ],
            "key.bodylength" : 20,
            "key.bodyoffset" : 1633,
            "key.doc.column" : 16,
            "key.doc.comment" : "See `RoutableComponent`.",
            "key.doc.declaration" : "public var routerParameterValue: String { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"48\" column=\"16\"><Name>routerParameterValue<\/Name><USR>s:Ss5VaporE20routerParameterValueSSvp<\/USR><Declaration>public var routerParameterValue: String { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>RoutableComponent<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 48,
            "key.doc.name" : "routerParameterValue",
            "key.doc.type" : "Other",
            "key.doclength" : 29,
            "key.docoffset" : 1559,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>routerParameterValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 55,
            "key.name" : "routerParameterValue",
            "key.namelength" : 20,
            "key.nameoffset" : 1603,
            "key.offset" : 1599,
            "key.overrides" : [
              {
                "key.usr" : "s:7Routing17RoutableComponentP20routerParameterValueSSvp"
              }
            ],
            "key.parsed_declaration" : "public var routerParameterValue: String",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 48,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:Ss5VaporE20routerParameterValueSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func routerCompare(to buffer: <Type usr=\"s:SW\">UnsafeRawBufferPointer<\/Type>, options: <Type usr=\"s:Sh\">Set<\/Type>&lt;<Type usr=\"s:7Routing12RouterOptionO\">RouterOption<\/Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1693
              }
            ],
            "key.bodylength" : 592,
            "key.bodyoffset" : 1791,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `RoutableComponent`.",
            "key.doc.declaration" : "public func routerCompare(to buffer: UnsafeRawBufferPointer, options: Set<RouterOption>) -> Bool",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"51\" column=\"17\"><Name>routerCompare(to:options:)<\/Name><USR>s:Ss5VaporE13routerCompare2to7optionsSbSW_Shy7Routing12RouterOptionOGtF<\/USR><Declaration>public func routerCompare(to buffer: UnsafeRawBufferPointer, options: Set&lt;RouterOption&gt;) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>RoutableComponent<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 51,
            "key.doc.name" : "routerCompare(to:options:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 1660,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>routerCompare<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>buffer<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SW\">UnsafeRawBufferPointer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set<\/ref.struct>&lt;<ref.enum usr=\"s:7Routing12RouterOptionO\">RouterOption<\/ref.enum>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 684,
            "key.name" : "routerCompare(to:options:)",
            "key.namelength" : 76,
            "key.nameoffset" : 1705,
            "key.offset" : 1700,
            "key.overrides" : [
              {
                "key.usr" : "s:7Routing17RoutableComponentP13routerCompare2to7optionsSbSW_ShyAA12RouterOptionOGtF"
              }
            ],
            "key.parsed_declaration" : "public func routerCompare(to buffer: UnsafeRawBufferPointer, options: Set<RouterOption>) -> Bool",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 51,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let a: <Type usr=\"s:Ss\">Substring<\/Type>.<Type usr=\"s:Ss8UTF8ViewV\">UTF8View<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>a<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Ss\">Substring<\/ref.struct>.<ref.struct usr=\"s:Ss8UTF8ViewV\">UTF8View<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "String",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 12,
                "key.name" : "a",
                "key.namelength" : 1,
                "key.nameoffset" : 1875,
                "key.offset" : 1871,
                "key.parsed_declaration" : "let a = utf8",
                "key.parsed_scope.end" : 56,
                "key.parsed_scope.start" : 56,
                "key.typename" : "Substring.UTF8View",
                "key.typeusr" : "$SSs8UTF8ViewVD",
                "key.usr" : "s:Ss5VaporE13routerCompare2to7optionsSbSW_Shy7Routing12RouterOptionOGtF1aL_Ss8UTF8ViewVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let b: <Type usr=\"s:SR\">UnsafeBufferPointer<\/Type>&lt;<Type usr=\"s:s5UInt8V\">UInt8<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>b<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SR\">UnsafeBufferPointer<\/ref.struct>&lt;<ref.struct usr=\"s:s5UInt8V\">UInt8<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.groupname" : "String",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 41,
                "key.name" : "b",
                "key.namelength" : 1,
                "key.nameoffset" : 1896,
                "key.offset" : 1892,
                "key.parsed_declaration" : "let b = buffer.bindMemory(to: UInt8.self)",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.typename" : "UnsafeBufferPointer<UInt8>",
                "key.typeusr" : "$SSRys5UInt8VGD",
                "key.usr" : "s:Ss5VaporE13routerCompare2to7optionsSbSW_Shy7Routing12RouterOptionOGtF1bL_SRys5UInt8VGvp"
              }
            ],
            "key.typename" : "(Substring) -> (UnsafeRawBufferPointer, Set<RouterOption>) -> Bool",
            "key.typeusr" : "$S2to7optionsSbSW_Shy7Routing12RouterOptionOGtcD",
            "key.usr" : "s:Ss5VaporE13routerCompare2to7optionsSbSW_Shy7Routing12RouterOptionOGtF"
          }
        ],
        "key.typename" : "Substring.Type",
        "key.typeusr" : "$SSsmD",
        "key.usr" : "s:Ss"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 2391
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>enum HTTPMethod : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 2406
          }
        ],
        "key.bodylength" : 188,
        "key.bodyoffset" : 2436,
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>HTTPMethod<\/decl.name> : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 211,
        "key.modulename" : "NIOHTTP1",
        "key.name" : "HTTPMethod",
        "key.namelength" : 10,
        "key.nameoffset" : 2424,
        "key.offset" : 2414,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>var substring: <Type usr=\"s:Ss\">Substring<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 107,
            "key.bodyoffset" : 2515,
            "key.doc.column" : 9,
            "key.doc.comment" : "Converts `HTTPMethod` to a `Substring`.",
            "key.doc.declaration" : "var substring: Substring { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift\" line=\"81\" column=\"9\"><Name>substring<\/Name><USR>s:8NIOHTTP110HTTPMethodO5VaporE9substring33_BEC152AEA6A3EF7DFCB6A2C5C64A1C1ALLSsvp<\/USR><Declaration>var substring: Substring { get }<\/Declaration><CommentParts><Abstract><Para>Converts <codeVoice>HTTPMethod<\/codeVoice> to a <codeVoice>Substring<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 81,
            "key.doc.name" : "substring",
            "key.doc.type" : "Other",
            "key.doclength" : 44,
            "key.docoffset" : 2441,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/EngineRouter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>substring<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Ss\">Substring<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 134,
            "key.name" : "substring",
            "key.namelength" : 9,
            "key.nameoffset" : 2493,
            "key.offset" : 2489,
            "key.parsed_declaration" : "var substring: Substring",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 81,
            "key.typename" : "Substring",
            "key.typeusr" : "$SSsD",
            "key.usr" : "s:8NIOHTTP110HTTPMethodO5VaporE9substring33_BEC152AEA6A3EF7DFCB6A2C5C64A1C1ALLSsvp"
          }
        ],
        "key.typename" : "HTTPMethod.Type",
        "key.typeusr" : "$S8NIOHTTP110HTTPMethodOmD",
        "key.usr" : "s:8NIOHTTP110HTTPMethodO"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1756,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ParametersContainer<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 123
          }
        ],
        "key.bodylength" : 1596,
        "key.bodyoffset" : 158,
        "key.doc.column" : 15,
        "key.doc.comment" : "Helper for accessing route parameters from an HTTP request.\n\n    let id = try req.parameters.next(Int.self)",
        "key.doc.declaration" : "public struct ParametersContainer",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift\" line=\"5\" column=\"15\"><Name>ParametersContainer<\/Name><USR>s:5Vapor19ParametersContainerV<\/USR><Declaration>public struct ParametersContainer<\/Declaration><CommentParts><Abstract><Para>Helper for accessing route parameters from an HTTP request.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 5,
        "key.doc.name" : "ParametersContainer",
        "key.doc.type" : "Class",
        "key.doclength" : 123,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ParametersContainer<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1625,
        "key.name" : "ParametersContainer",
        "key.namelength" : 19,
        "key.nameoffset" : 137,
        "key.offset" : 130,
        "key.parsed_declaration" : "public struct ParametersContainer",
        "key.parsed_scope.end" : 52,
        "key.parsed_scope.start" : 5,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 190
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Private `Request`.",
            "key.doc.declaration" : "private let request: Request",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift\" line=\"7\" column=\"17\"><Name>request<\/Name><USR>s:5Vapor19ParametersContainerV7request33_7EDB6948BFECC14E89144542613C8233LLAA7RequestCvp<\/USR><Declaration>private let request: Request<\/Declaration><CommentParts><Abstract><Para>Private <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 7,
            "key.doc.name" : "request",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 163,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>request<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "request",
            "key.namelength" : 7,
            "key.nameoffset" : 202,
            "key.offset" : 198,
            "key.parsed_declaration" : "private let request: Request",
            "key.parsed_scope.end" : 7,
            "key.parsed_scope.start" : 7,
            "key.typename" : "Request",
            "key.typeusr" : "$S5Vapor7RequestCD",
            "key.usr" : "s:5Vapor19ParametersContainerV7request33_7EDB6948BFECC14E89144542613C8233LLAA7RequestCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var values: [<Type usr=\"s:7Routing14ParameterValueV\">ParameterValue<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 306
              }
            ],
            "key.bodylength" : 47,
            "key.bodyoffset" : 343,
            "key.doc.column" : 16,
            "key.doc.comment" : "The `ParameterValue`s that this request collected as it was being routed.",
            "key.doc.declaration" : "public var values: [ParameterValue] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift\" line=\"10\" column=\"16\"><Name>values<\/Name><USR>s:5Vapor19ParametersContainerV6valuesSay7Routing14ParameterValueVGvp<\/USR><Declaration>public var values: [ParameterValue] { get }<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>ParameterValue<\/codeVoice>s that this request collected as it was being routed.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 10,
            "key.doc.name" : "values",
            "key.doc.type" : "Other",
            "key.doclength" : 78,
            "key.docoffset" : 224,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>values<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:7Routing14ParameterValueV\">ParameterValue<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 78,
            "key.name" : "values",
            "key.namelength" : 6,
            "key.nameoffset" : 317,
            "key.offset" : 313,
            "key.parsed_declaration" : "public var values: [ParameterValue]",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 10,
            "key.typename" : "[ParameterValue]",
            "key.typeusr" : "$SSay7Routing14ParameterValueVGD",
            "key.usr" : "s:5Vapor19ParametersContainerV6valuesSay7Routing14ParameterValueVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(_ request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>)<\/Declaration>",
            "key.bodylength" : 36,
            "key.bodyoffset" : 494,
            "key.doc.column" : 5,
            "key.doc.comment" : "Creates a new `ParametersContainer`. Use `Request.parameters`.",
            "key.doc.declaration" : "init(_ request: Request)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift\" line=\"15\" column=\"5\"><Name>init(_:)<\/Name><USR>s:5Vapor19ParametersContainerVyAcA7RequestCcfc<\/USR><Declaration>init(_ request: Request)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>ParametersContainer<\/codeVoice>. Use <codeVoice>Request.parameters<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 67,
            "key.docoffset" : 397,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 63,
            "key.name" : "init(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 468,
            "key.offset" : 468,
            "key.parsed_declaration" : "init(_ request: Request)",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [

            ],
            "key.typename" : "(ParametersContainer.Type) -> (Request) -> ParametersContainer",
            "key.typeusr" : "$Sy5Vapor19ParametersContainerVAA7RequestCcD",
            "key.usr" : "s:5Vapor19ParametersContainerVyAcA7RequestCcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func next&lt;P&gt;() throws -&gt; <Type usr=\"s:5Vapor19ParametersContainerV4nextxyK7Routing9ParameterRz08ResolvedF0QzRszlF1PL_xmfp\">P<\/Type> where P : <Type usr=\"s:7Routing9ParameterP\">Parameter<\/Type>, P == P.ResolvedParameter<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 990
              }
            ],
            "key.bodylength" : 37,
            "key.bodyoffset" : 1082,
            "key.doc.column" : 17,
            "key.doc.comment" : "Grabs the next parameter from the parameter bag.\n\n    let id = try req.parameters.next(Int.self)\n\n- note: the parameters _must_ be fetched in the order they appear in the path.\n\nFor example GET \/posts\/:post_id\/comments\/:comment_id must be fetched in this order:\n\n    let post = try req.parameters.next(Post.self)\n    let comment = try req.parameters.next(Comment.self)",
            "key.doc.declaration" : "public func next<P>() throws -> P where P : Parameter, P == P.ResolvedParameter",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Note" : ""
              },
              {
                "Para" : "For example GET \/posts\/:post_id\/comments\/:comment_id must be fetched in this order:"
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift\" line=\"30\" column=\"17\"><Name>next()<\/Name><USR>s:5Vapor19ParametersContainerV4nextxyK7Routing9ParameterRz08ResolvedF0QzRszlF<\/USR><Declaration>public func next&lt;P&gt;() throws -&gt; P where P : Parameter, P == P.ResolvedParameter<\/Declaration><CommentParts><Abstract><Para>Grabs the next parameter from the parameter bag.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>the parameters <emphasis>must<\/emphasis> be fetched in the order they appear in the path.<\/Para><\/Note><Para>For example GET \/posts\/:post_id\/comments\/:comment_id must be fetched in this order:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let post = try req.parameters.next(Post.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let comment = try req.parameters.next(Comment.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 30,
            "key.doc.name" : "next()",
            "key.doc.type" : "Function",
            "key.doclength" : 449,
            "key.docoffset" : 537,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>next<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor19ParametersContainerV4nextxyK7Routing9ParameterRz08ResolvedF0QzRszlF1PL_xmfp\"><decl.generic_type_param.name>P<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor19ParametersContainerV4nextxyK7Routing9ParameterRz08ResolvedF0QzRszlF1PL_xmfp\">P<\/ref.generic_type_param><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>P : <ref.protocol usr=\"s:7Routing9ParameterP\">Parameter<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>P == P.ResolvedParameter<\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 123,
            "key.name" : "next()",
            "key.namelength" : 9,
            "key.nameoffset" : 1002,
            "key.offset" : 997,
            "key.parsed_declaration" : "public func next<P>() throws -> P\n    where P: Parameter, P.ResolvedParameter == P",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 30,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor19ParametersContainerV4nexty17ResolvedParameterQzxmK7Routing0F0RzlF\">next(_:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>P<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>P<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "P",
                "key.namelength" : 1,
                "key.nameoffset" : 1007,
                "key.offset" : 1007,
                "key.parsed_declaration" : "public func next<P>() throws -> P",
                "key.parsed_scope.end" : 30,
                "key.parsed_scope.start" : 30,
                "key.typename" : "P.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor19ParametersContainerV4nextxyK7Routing9ParameterRz08ResolvedF0QzRszlF1PL_xmfp"
              }
            ],
            "key.typename" : "<P where P : Parameter, P == P.ResolvedParameter> (ParametersContainer) -> () throws -> P",
            "key.typeusr" : "$SxyKc7Routing9ParameterRz08ResolvedB0QzRszluD",
            "key.usr" : "s:5Vapor19ParametersContainerV4nextxyK7Routing9ParameterRz08ResolvedF0QzRszlF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func next&lt;P&gt;(_ parameter: <Type usr=\"s:5Vapor19ParametersContainerV4nexty17ResolvedParameterQzxmK7Routing0F0RzlF1PL_xmfp\">P<\/Type>.Type) throws -&gt; <Type usr=\"s:5Vapor19ParametersContainerV4nexty17ResolvedParameterQzxmK7Routing0F0RzlF1PL_xmfp\">P<\/Type>.<Type usr=\"s:7Routing9ParameterP08ResolvedB0Qa\">ResolvedParameter<\/Type> where P : <Type usr=\"s:7Routing9ParameterP\">Parameter<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1579
              }
            ],
            "key.bodylength" : 70,
            "key.bodyoffset" : 1682,
            "key.doc.column" : 17,
            "key.doc.comment" : "Grabs the next parameter from the parameter bag.\n\n    let id = try req.parameters.next(Int.self)\n\n- note: the parameters _must_ be fetched in the order they appear in the path.\n\nFor example GET \/posts\/:post_id\/comments\/:comment_id must be fetched in this order:\n\n    let post = try req.parameters.next(Post.self)\n    let comment = try req.parameters.next(Comment.self)",
            "key.doc.declaration" : "public func next<P>(_ parameter: P.Type) throws -> P.ResolvedParameter where P : Parameter",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Note" : ""
              },
              {
                "Para" : "For example GET \/posts\/:post_id\/comments\/:comment_id must be fetched in this order:"
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift\" line=\"47\" column=\"17\"><Name>next(_:)<\/Name><USR>s:5Vapor19ParametersContainerV4nexty17ResolvedParameterQzxmK7Routing0F0RzlF<\/USR><Declaration>public func next&lt;P&gt;(_ parameter: P.Type) throws -&gt; P.ResolvedParameter where P : Parameter<\/Declaration><CommentParts><Abstract><Para>Grabs the next parameter from the parameter bag.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>the parameters <emphasis>must<\/emphasis> be fetched in the order they appear in the path.<\/Para><\/Note><Para>For example GET \/posts\/:post_id\/comments\/:comment_id must be fetched in this order:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let post = try req.parameters.next(Post.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let comment = try req.parameters.next(Comment.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 47,
            "key.doc.name" : "next(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 449,
            "key.docoffset" : 1126,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>next<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor19ParametersContainerV4nexty17ResolvedParameterQzxmK7Routing0F0RzlF1PL_xmfp\"><decl.generic_type_param.name>P<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>parameter<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor19ParametersContainerV4nexty17ResolvedParameterQzxmK7Routing0F0RzlF1PL_xmfp\">P<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor19ParametersContainerV4nexty17ResolvedParameterQzxmK7Routing0F0RzlF1PL_xmfp\">P<\/ref.generic_type_param>.<ref.associatedtype usr=\"s:7Routing9ParameterP08ResolvedB0Qa\">ResolvedParameter<\/ref.associatedtype><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>P : <ref.protocol usr=\"s:7Routing9ParameterP\">Parameter<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 167,
            "key.name" : "next(_:)",
            "key.namelength" : 28,
            "key.nameoffset" : 1591,
            "key.offset" : 1586,
            "key.parsed_declaration" : "public func next<P>(_ parameter: P.Type) throws -> P.ResolvedParameter\n    where P: Parameter",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 47,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor19ParametersContainerV4nextxyK7Routing9ParameterRz08ResolvedF0QzRszlF\">next()<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>P<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/ParametersContainer.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>P<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "P",
                "key.namelength" : 1,
                "key.nameoffset" : 1596,
                "key.offset" : 1596,
                "key.parsed_declaration" : "public func next<P>(_ parameter: P.Type) throws -> P.ResolvedParameter",
                "key.parsed_scope.end" : 47,
                "key.parsed_scope.start" : 47,
                "key.typename" : "P.Type",
                "key.typeusr" : "$SxmD",
                "key.usr" : "s:5Vapor19ParametersContainerV4nexty17ResolvedParameterQzxmK7Routing0F0RzlF1PL_xmfp"
              }
            ],
            "key.typename" : "<P where P : Parameter> (ParametersContainer) -> (P.Type) throws -> P.ResolvedParameter",
            "key.typeusr" : "$Sy17ResolvedParameterQzxmKc7Routing0B0RzluD",
            "key.usr" : "s:5Vapor19ParametersContainerV4nexty17ResolvedParameterQzxmK7Routing0F0RzlF"
          }
        ],
        "key.typename" : "ParametersContainer.Type",
        "key.typeusr" : "$S5Vapor19ParametersContainerVmD",
        "key.usr" : "s:5Vapor19ParametersContainerV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 565,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol RouteCollection<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 66
          }
        ],
        "key.bodylength" : 179,
        "key.bodyoffset" : 99,
        "key.doc.column" : 17,
        "key.doc.comment" : "Groups collections of routes together for adding to a router.",
        "key.doc.declaration" : "public protocol RouteCollection",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift\" line=\"2\" column=\"17\"><Name>RouteCollection<\/Name><USR>s:5Vapor15RouteCollectionP<\/USR><Declaration>public protocol RouteCollection<\/Declaration><CommentParts><Abstract><Para>Groups collections of routes together for adding to a router.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "RouteCollection",
        "key.doc.type" : "Class",
        "key.doclength" : 66,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>RouteCollection<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 206,
        "key.name" : "RouteCollection",
        "key.namelength" : 15,
        "key.nameoffset" : 82,
        "key.offset" : 73,
        "key.parsed_declaration" : "public protocol RouteCollection",
        "key.parsed_scope.end" : 8,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main15RouteCollection_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func boot(router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type>) throws<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Registers routes to the incoming router.\n\n- parameters:\n    - router: `Router` to register any new routes to.",
            "key.doc.declaration" : "func boot(router: Router) throws",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift\" line=\"7\" column=\"10\"><Name>boot(router:)<\/Name><USR>s:5Vapor15RouteCollectionP4boot6routeryAA6Router_p_tKF<\/USR><Declaration>func boot(router: Router) throws<\/Declaration><CommentParts><Abstract><Para>Registers routes to the incoming router.<\/Para><\/Abstract><Parameters><Parameter><Name>router<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Router<\/codeVoice> to register any new routes to.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 7,
            "key.doc.name" : "boot(router:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Router` to register any new routes to."
                  }
                ],
                "name" : "router"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 137,
            "key.docoffset" : 104,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>boot<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>router<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 32,
            "key.name" : "boot(router:)",
            "key.namelength" : 20,
            "key.nameoffset" : 250,
            "key.offset" : 245,
            "key.parsed_declaration" : "func boot(router: Router) throws",
            "key.parsed_scope.end" : 7,
            "key.parsed_scope.start" : 7,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : RouteCollection> (Self) -> (Router) throws -> ()",
            "key.typeusr" : "$S6routery5Vapor6Router_p_tKcD",
            "key.usr" : "s:5Vapor15RouteCollectionP4boot6routeryAA6Router_p_tKF"
          }
        ],
        "key.typename" : "RouteCollection.Protocol",
        "key.typeusr" : "$S5Vapor15RouteCollection_pmD",
        "key.usr" : "s:5Vapor15RouteCollectionP"
      },
      {
        "key.annotated_decl" : "<Declaration>public protocol Router : AnyObject, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 264,
        "key.bodyoffset" : 299,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Router : AnyObject, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"2\" column=\"17\"><Name>Router<\/Name><USR>s:5Vapor6RouterP<\/USR><Declaration>public protocol Router : AnyObject, Service<\/Declaration><CommentParts><Abstract><Para>Capable of registering <codeVoice>Responder<\/codeVoice> routes and returning appropriate responders for a given request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Router",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Router<\/decl.name> : AnyObject, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 283,
        "key.name" : "Router",
        "key.namelength" : 6,
        "key.nameoffset" : 291,
        "key.offset" : 281,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func register(collection: <Type usr=\"s:5Vapor15RouteCollectionP\">RouteCollection<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 456
              }
            ],
            "key.bodylength" : 47,
            "key.bodyoffset" : 514,
            "key.doc.column" : 17,
            "key.doc.comment" : "Registers all of the routes in the group to this router.\n\n- parameters:\n    - collection: `RouteCollection` to register.",
            "key.doc.declaration" : "public func register(collection: RouteCollection) throws",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift\" line=\"15\" column=\"17\"><Name>register(collection:)<\/Name><USR>s:5Vapor6RouterPAAE8register10collectionyAA15RouteCollection_p_tKF<\/USR><Declaration>public func register(collection: RouteCollection) throws<\/Declaration><CommentParts><Abstract><Para>Registers all of the routes in the group to this router.<\/Para><\/Abstract><Parameters><Parameter><Name>collection<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>RouteCollection<\/codeVoice> to register.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "register(collection:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`RouteCollection` to register."
                  }
                ],
                "name" : "collection"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 148,
            "key.docoffset" : 304,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/RouteCollection.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>collection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor15RouteCollectionP\">RouteCollection<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 99,
            "key.name" : "register(collection:)",
            "key.namelength" : 37,
            "key.nameoffset" : 468,
            "key.offset" : 463,
            "key.parsed_declaration" : "public func register(collection: RouteCollection) throws",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 15,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterP8register5routey7Routing5RouteCyAA9Responder_pG_tF\">register(route:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> (RouteCollection) throws -> ()",
            "key.typeusr" : "$S10collectiony5Vapor15RouteCollection_p_tKcD",
            "key.usr" : "s:5Vapor6RouterPAAE8register10collectionyAA15RouteCollection_p_tKF"
          }
        ],
        "key.typename" : "Router.Protocol",
        "key.typeusr" : "$S5Vapor6Router_pmD",
        "key.usr" : "s:5Vapor6RouterP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5908,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public protocol Router : AnyObject, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 5888,
        "key.bodyoffset" : 18,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Router : AnyObject, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"2\" column=\"17\"><Name>Router<\/Name><USR>s:5Vapor6RouterP<\/USR><Declaration>public protocol Router : AnyObject, Service<\/Declaration><CommentParts><Abstract><Para>Capable of registering <codeVoice>Responder<\/codeVoice> routes and returning appropriate responders for a given request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Router",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Router<\/decl.name> : AnyObject, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 5907,
        "key.name" : "Router",
        "key.namelength" : 6,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Content",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 26
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func post&lt;C, T&gt;(_ content: <Type usr=\"s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/Type>.Type, at path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where C : <Type usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/Type>, T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 843
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 820
              }
            ],
            "key.bodylength" : 81,
            "key.bodyoffset" : 1056,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` that automatically decodes `Content` at the provided path using the `POST` method.\n\n    router.post(User.self, at: \"users\") { req, user in\n        print(user) \/\/ User\n        \/\/ create user and return response...\n    }\n\nThe above route closure would automatically decode a `User` to requests to `POST \/users`.\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - content: `Content` type to automatically decode.\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func post<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder> where C : RequestDecodable, T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would automatically decode a `User` to requests to `POST \/users`."
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift\" line=\"21\" column=\"17\"><Name>post(_:at:use:)<\/Name><USR>s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF<\/USR><Declaration>public func post&lt;C, T&gt;(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -&gt; T) -&gt; Route&lt;Responder&gt; where C : RequestDecodable, T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> that automatically decodes <codeVoice>Content<\/codeVoice> at the provided path using the <codeVoice>POST<\/codeVoice> method.<\/Para><\/Abstract><Parameters><Parameter><Name>content<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Content<\/codeVoice> type to automatically decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.post(User.self, at: \"users\") { req, user in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(user) \/\/ User]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ create user and return response...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would automatically decode a <codeVoice>User<\/codeVoice> to requests to <codeVoice>POST \/users<\/codeVoice>.<\/Para><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 21,
            "key.doc.name" : "post(_:at:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Content` type to automatically decode."
                  }
                ],
                "name" : "content"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 771,
            "key.docoffset" : 45,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>post<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>content<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 288,
            "key.name" : "post(_:at:use:)",
            "key.namelength" : 119,
            "key.nameoffset" : 855,
            "key.offset" : 850,
            "key.parsed_declaration" : "public func post<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>\n    where C: RequestDecodable, T: ResponseEncodable",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 21,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE4post_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF\">post(_:use:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 860,
                "key.offset" : 860,
                "key.parsed_declaration" : "public func post<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 863,
                "key.offset" : 863,
                "key.parsed_declaration" : "public func post<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd_0_mD",
                "key.usr" : "s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp"
              }
            ],
            "key.typename" : "<Self, C, T where Self : Router, C : RequestDecodable, T : ResponseEncodable> (Self) -> (C.Type, PathComponentsRepresentable..., @escaping (Request, C) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_2at3use7Routing5RouteCy5Vapor9Responder_pGqd__m_AC27PathComponentsRepresentable_pdqd_0_AF7RequestC_qd__tKctcAF0J9DecodableRd__AF17ResponseEncodableRd_0_r0_luD",
            "key.usr" : "s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func patch&lt;C, T&gt;(_ content: <Type usr=\"s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/Type>.Type, at path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where C : <Type usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/Type>, T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2056
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2033
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 2270,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` that automatically decodes `Content` at the provided path using the `PATCH` method.\n\n    router.patch(User.self, at: \"users\", Int.parameter) { req, user in\n        let id = try req.parameters.next(Int.self)\n        print(id) \/\/ Int\n        print(user) \/\/ User\n        \/\/ update user and return response...\n    }\n\nThe above route closure would automatically decode a `User` to requests to `PATCH \/users\/:id`.\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - content: `Content` type to automatically decode.\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func patch<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder> where C : RequestDecodable, T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would automatically decode a `User` to requests to `PATCH \/users\/:id`."
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift\" line=\"46\" column=\"17\"><Name>patch(_:at:use:)<\/Name><USR>s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF<\/USR><Declaration>public func patch&lt;C, T&gt;(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -&gt; T) -&gt; Route&lt;Responder&gt; where C : RequestDecodable, T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> that automatically decodes <codeVoice>Content<\/codeVoice> at the provided path using the <codeVoice>PATCH<\/codeVoice> method.<\/Para><\/Abstract><Parameters><Parameter><Name>content<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Content<\/codeVoice> type to automatically decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.patch(User.self, at: \"users\", Int.parameter) { req, user in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(id) \/\/ Int]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(user) \/\/ User]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ update user and return response...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would automatically decode a <codeVoice>User<\/codeVoice> to requests to <codeVoice>PATCH \/users\/:id<\/codeVoice>.<\/Para><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 46,
            "key.doc.name" : "patch(_:at:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Content` type to automatically decode."
                  }
                ],
                "name" : "content"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 885,
            "key.docoffset" : 1144,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>patch<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>content<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 290,
            "key.name" : "patch(_:at:use:)",
            "key.namelength" : 120,
            "key.nameoffset" : 2068,
            "key.offset" : 2063,
            "key.parsed_declaration" : "public func patch<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>\n    where C: RequestDecodable, T: ResponseEncodable",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 46,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5patch_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF\">patch(_:use:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 2074,
                "key.offset" : 2074,
                "key.parsed_declaration" : "public func patch<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 46,
                "key.parsed_scope.start" : 46,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2077,
                "key.offset" : 2077,
                "key.parsed_declaration" : "public func patch<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 46,
                "key.parsed_scope.start" : 46,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd_0_mD",
                "key.usr" : "s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp"
              }
            ],
            "key.typename" : "<Self, C, T where Self : Router, C : RequestDecodable, T : ResponseEncodable> (Self) -> (C.Type, PathComponentsRepresentable..., @escaping (Request, C) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_2at3use7Routing5RouteCy5Vapor9Responder_pGqd__m_AC27PathComponentsRepresentable_pdqd_0_AF7RequestC_qd__tKctcAF0J9DecodableRd__AF17ResponseEncodableRd_0_r0_luD",
            "key.usr" : "s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func put&lt;C, T&gt;(_ content: <Type usr=\"s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/Type>.Type, at path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where C : <Type usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/Type>, T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3265
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 3242
              }
            ],
            "key.bodylength" : 80,
            "key.bodyoffset" : 3477,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` that automatically decodes `Content` at the provided path using the `PUT` method.\n\n    router.put(User.self, at: \"users\", Int.parameter) { req, user in\n        let id = try req.parameters.next(Int.self)\n        print(id) \/\/ Int\n        print(user) \/\/ User\n        \/\/ update user and return response...\n    }\n\nThe above route closure would automatically decode a `User` to requests to `PUT \/users\/:id`.\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - content: `Content` type to automatically decode.\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func put<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder> where C : RequestDecodable, T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would automatically decode a `User` to requests to `PUT \/users\/:id`."
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift\" line=\"71\" column=\"17\"><Name>put(_:at:use:)<\/Name><USR>s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF<\/USR><Declaration>public func put&lt;C, T&gt;(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -&gt; T) -&gt; Route&lt;Responder&gt; where C : RequestDecodable, T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> that automatically decodes <codeVoice>Content<\/codeVoice> at the provided path using the <codeVoice>PUT<\/codeVoice> method.<\/Para><\/Abstract><Parameters><Parameter><Name>content<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Content<\/codeVoice> type to automatically decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.put(User.self, at: \"users\", Int.parameter) { req, user in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(id) \/\/ Int]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(user) \/\/ User]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ update user and return response...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would automatically decode a <codeVoice>User<\/codeVoice> to requests to <codeVoice>PUT \/users\/:id<\/codeVoice>.<\/Para><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 71,
            "key.doc.name" : "put(_:at:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Content` type to automatically decode."
                  }
                ],
                "name" : "content"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 879,
            "key.docoffset" : 2359,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>put<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>content<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 286,
            "key.name" : "put(_:at:use:)",
            "key.namelength" : 118,
            "key.nameoffset" : 3277,
            "key.offset" : 3272,
            "key.parsed_declaration" : "public func put<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>\n    where C: RequestDecodable, T: ResponseEncodable",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 71,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE3put_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF\">put(_:use:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 3281,
                "key.offset" : 3281,
                "key.parsed_declaration" : "public func put<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 71,
                "key.parsed_scope.start" : 71,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 3284,
                "key.offset" : 3284,
                "key.parsed_declaration" : "public func put<C, T>(_ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 71,
                "key.parsed_scope.start" : 71,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd_0_mD",
                "key.usr" : "s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp"
              }
            ],
            "key.typename" : "<Self, C, T where Self : Router, C : RequestDecodable, T : ResponseEncodable> (Self) -> (C.Type, PathComponentsRepresentable..., @escaping (Request, C) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_2at3use7Routing5RouteCy5Vapor9Responder_pGqd__m_AC27PathComponentsRepresentable_pdqd_0_AF7RequestC_qd__tKctcAF0J9DecodableRd__AF17ResponseEncodableRd_0_r0_luD",
            "key.usr" : "s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func on&lt;C, T&gt;(_ method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type>, _ content: <Type usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/Type>.Type, at path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where C : <Type usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/Type>, T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4502
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 4479
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 4735,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` that automatically decodes `Content` at the provided path using an HTTP method.\n\n    router.on(.PUT, User.self, at: \"users\", Int.parameter) { req, user in\n        let id = try req.parameters.next(Int.self)\n        print(id) \/\/ Int\n        print(user) \/\/ User\n        \/\/ update user and return response...\n    }\n\nThe above route closure would automatically decode a `User` to requests to `PUT \/users\/:id`.\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - method: `HTTPMethod` to accept.\n    - content: `Content` type to automatically decode.\n    - path: Array of `PathComponent`s to define path.\n    - closure: Converts `Request` to a `Response`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func on<C, T>(_ method: HTTPMethod, _ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder> where C : RequestDecodable, T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would automatically decode a `User` to requests to `PUT \/users\/:id`."
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift\" line=\"97\" column=\"17\"><Name>on(_:_:at:use:)<\/Name><USR>s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF<\/USR><Declaration>public func on&lt;C, T&gt;(_ method: HTTPMethod, _ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -&gt; T) -&gt; Route&lt;Responder&gt; where C : RequestDecodable, T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> that automatically decodes <codeVoice>Content<\/codeVoice> at the provided path using an HTTP method.<\/Para><\/Abstract><Parameters><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMethod<\/codeVoice> to accept.<\/Para><\/Discussion><\/Parameter><Parameter><Name>content<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Content<\/codeVoice> type to automatically decode.<\/Para><\/Discussion><\/Parameter><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Array of <codeVoice>PathComponent<\/codeVoice>s to define path.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Converts <codeVoice>Request<\/codeVoice> to a <codeVoice>Response<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.on(.PUT, User.self, at: \"users\", Int.parameter) { req, user in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(id) \/\/ Int]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(user) \/\/ User]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ update user and return response...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would automatically decode a <codeVoice>User<\/codeVoice> to requests to <codeVoice>PUT \/users\/:id<\/codeVoice>.<\/Para><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 97,
            "key.doc.name" : "on(_:_:at:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMethod` to accept."
                  }
                ],
                "name" : "method"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Content` type to automatically decode."
                  }
                ],
                "name" : "content"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Array of `PathComponent`s to define path."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Converts `Request` to a `Response`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 911,
            "key.docoffset" : 3564,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>on<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>method<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>content<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 309,
            "key.name" : "on(_:_:at:use:)",
            "key.namelength" : 139,
            "key.nameoffset" : 4514,
            "key.offset" : 4509,
            "key.parsed_declaration" : "public func on<C, T>(_ method: HTTPMethod, _ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>\n    where C: RequestDecodable, T: ResponseEncodable",
            "key.parsed_scope.end" : 101,
            "key.parsed_scope.start" : 97,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_AG27PathComponentsRepresentable_pdqd__AA7RequestCKctAA17ResponseEncodableRd__lF\">on&lt;T&gt;(_: HTTPMethod, at: PathComponentsRepresentable..., use: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAG27PathComponentsRepresentable_pGqd__AA7RequestCKctAA17ResponseEncodableRd__lF\">on&lt;T&gt;(_: HTTPMethod, at: [PathComponentsRepresentable], use: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 4517,
                "key.offset" : 4517,
                "key.parsed_declaration" : "public func on<C, T>(_ method: HTTPMethod, _ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 97,
                "key.parsed_scope.start" : 97,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 4520,
                "key.offset" : 4520,
                "key.parsed_declaration" : "public func on<C, T>(_ method: HTTPMethod, _ content: C.Type, at path: PathComponentsRepresentable..., use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 97,
                "key.parsed_scope.start" : 97,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd_0_mD",
                "key.usr" : "s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp"
              }
            ],
            "key.typename" : "<Self, C, T where Self : Router, C : RequestDecodable, T : ResponseEncodable> (Self) -> (HTTPMethod, C.Type, PathComponentsRepresentable..., @escaping (Request, C) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S__2at3use7Routing5RouteCy5Vapor9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAC27PathComponentsRepresentable_pdqd_0_AF7RequestC_qd__tKctcAF0L9DecodableRd__AF17ResponseEncodableRd_0_r0_luD",
            "key.usr" : "s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>@discardableResult private func _on&lt;C, T&gt;(_ method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type>, at path: [<Type usr=\"s:7Routing13PathComponentO\">PathComponent<\/Type>], use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where C : <Type usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/Type>, T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 5301
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 5278
              }
            ],
            "key.bodylength" : 402,
            "key.bodyoffset" : 5502,
            "key.doc.column" : 18,
            "key.doc.comment" : "Registers a route handler that automatically decodes content at the supplied path.\n\nUse the HTTP prefixed methods instead of this method. See `get(...)`, `post(...)`, etc.\n\n- parameters:\n    - method: `HTTPMethod` to accept.\n    - path: Array of `PathComponent`s to define path.\n    - closure: Converts `Request` to a `Response`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "private func _on<C, T>(_ method: HTTPMethod, at path: [PathComponent], use closure: @escaping (Request, C) throws -> T) -> Route<Responder> where C : RequestDecodable, T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "Para" : "Use the HTTP prefixed methods instead of this method. See `get(...)`, `post(...)`, etc."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift\" line=\"113\" column=\"18\"><Name>_on(_:at:use:)<\/Name><USR>s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF<\/USR><Declaration>private func _on&lt;C, T&gt;(_ method: HTTPMethod, at path: [PathComponent], use closure: @escaping (Request, C) throws -&gt; T) -&gt; Route&lt;Responder&gt; where C : RequestDecodable, T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Registers a route handler that automatically decodes content at the supplied path.<\/Para><\/Abstract><Parameters><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMethod<\/codeVoice> to accept.<\/Para><\/Discussion><\/Parameter><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Array of <codeVoice>PathComponent<\/codeVoice>s to define path.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Converts <codeVoice>Request<\/codeVoice> to a <codeVoice>Response<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><Para>Use the HTTP prefixed methods instead of this method. See <codeVoice>get(...)<\/codeVoice>, <codeVoice>post(...)<\/codeVoice>, etc.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 113,
            "key.doc.name" : "_on(_:at:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMethod` to accept."
                  }
                ],
                "name" : "method"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Array of `PathComponent`s to define path."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Converts `Request` to a `Response`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 450,
            "key.docoffset" : 4824,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_on<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\"><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>method<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.enum usr=\"s:7Routing13PathComponentO\">PathComponent<\/ref.enum>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp\">C<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>C : <ref.protocol usr=\"s:5Vapor16RequestDecodableP\">RequestDecodable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 596,
            "key.name" : "_on(_:at:use:)",
            "key.namelength" : 106,
            "key.nameoffset" : 5314,
            "key.offset" : 5309,
            "key.parsed_declaration" : "private func _on<C, T>(_ method: HTTPMethod, at path: [PathComponent], use closure: @escaping (Request, C) throws -> T) -> Route<Responder>\n    where C: RequestDecodable, T: ResponseEncodable",
            "key.parsed_scope.end" : 125,
            "key.parsed_scope.start" : 113,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>C<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>C<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "C",
                "key.namelength" : 1,
                "key.nameoffset" : 5318,
                "key.offset" : 5318,
                "key.parsed_declaration" : "private func _on<C, T>(_ method: HTTPMethod, at path: [PathComponent], use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 113,
                "key.parsed_scope.start" : 113,
                "key.typename" : "C.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1CL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 5321,
                "key.offset" : 5321,
                "key.parsed_declaration" : "private func _on<C, T>(_ method: HTTPMethod, at path: [PathComponent], use closure: @escaping (Request, C) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 113,
                "key.parsed_scope.start" : 113,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd_0_mD",
                "key.usr" : "s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF1TL_qd_0_mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let responder: <Type usr=\"s:5Vapor14BasicResponderV\">BasicResponder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>responder<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor14BasicResponderV\">BasicResponder<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 239,
                "key.name" : "responder",
                "key.namelength" : 9,
                "key.nameoffset" : 5515,
                "key.offset" : 5511,
                "key.parsed_declaration" : "let responder = BasicResponder { req in",
                "key.parsed_scope.end" : 116,
                "key.parsed_scope.start" : 116,
                "key.typename" : "BasicResponder",
                "key.typeusr" : "$S5Vapor14BasicResponderVD",
                "key.usr" : "s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF9responderL_AA05BasicO0Vvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let route: <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Content.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>route<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 88,
                "key.name" : "route",
                "key.namelength" : 5,
                "key.nameoffset" : 5763,
                "key.offset" : 5759,
                "key.parsed_declaration" : "let route = Route<Responder>(path: [.constant(method.string)] + path, output: responder)",
                "key.parsed_scope.end" : 122,
                "key.parsed_scope.start" : 122,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterP5route7requestAA9Responder_pSgAA7RequestC_tF\">route(request:)<\/RelatedName>"
                  }
                ],
                "key.typename" : "Route<Responder>",
                "key.typeusr" : "$S7Routing5RouteCy5Vapor9Responder_pGD",
                "key.usr" : "s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF5routeL_ALvp"
              }
            ],
            "key.typename" : "<Self, C, T where Self : Router, C : RequestDecodable, T : ResponseEncodable> (Self) -> (HTTPMethod, [PathComponent], @escaping (Request, C) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_2at3use7Routing5RouteCy5Vapor9Responder_pG8NIOHTTP110HTTPMethodO_SayAC13PathComponentOGqd_0_AF7RequestC_qd__tKctcAF0K9DecodableRd__AF17ResponseEncodableRd_0_r0_luD",
            "key.usr" : "s:5Vapor6RouterPAAE3_on33_769264281A780F8F63CE1D8B21977FD7LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd_0_AA7RequestC_qd__tKctAA0T9DecodableRd__AA17ResponseEncodableRd_0_r0_lF"
          }
        ],
        "key.typename" : "Router.Protocol",
        "key.typeusr" : "$S5Vapor6Router_pmD",
        "key.usr" : "s:5Vapor6RouterP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2291,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public protocol Router : AnyObject, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 1710,
        "key.bodyoffset" : 18,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Router : AnyObject, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"2\" column=\"17\"><Name>Router<\/Name><USR>s:5Vapor6RouterP<\/USR><Declaration>public protocol Router : AnyObject, Service<\/Declaration><CommentParts><Abstract><Para>Capable of registering <codeVoice>Responder<\/codeVoice> routes and returning appropriate responders for a given request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Router",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Router<\/decl.name> : AnyObject, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1729,
        "key.name" : "Router",
        "key.namelength" : 6,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 25,
            "key.name" : "MARK: Middleware Function",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 26
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func grouped(_ respond: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;) -&gt; <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 694
              }
            ],
            "key.bodylength" : 59,
            "key.bodyoffset" : 795,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a sub `Router` wrapped in the supplied middleware function.\n\n    let group = router.grouped { req, next in\n        \/\/ this closure will be called with each request\n        print(req)\n        \/\/ use next responder in chain to respond\n        return try next.respond(to: req)\n    }\n    group.get(\"\/\") { ... }\n\nThe above example logs all incoming requests.\n\n- parameters:\n    - respond: Closure accepting a `Request` and `Responder` and returning a `Future<Response>`.\n- returns: `Router` with closure attached",
            "key.doc.declaration" : "public func grouped(_ respond: @escaping (Request, Responder) throws -> Future<Response>) -> Router",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above example logs all incoming requests."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift\" line=\"19\" column=\"17\"><Name>grouped(_:)<\/Name><USR>s:5Vapor6RouterPAAE7groupedyAaB_p3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKcF<\/USR><Declaration>public func grouped(_ respond: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;) -&gt; Router<\/Declaration><CommentParts><Abstract><Para>Creates a sub <codeVoice>Router<\/codeVoice> wrapped in the supplied middleware function.<\/Para><\/Abstract><Parameters><Parameter><Name>respond<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Closure accepting a <codeVoice>Request<\/codeVoice> and <codeVoice>Responder<\/codeVoice> and returning a <codeVoice>Future&lt;Response&gt;<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>Router<\/codeVoice> with closure attached<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let group = router.grouped { req, next in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ this closure will be called with each request]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(req)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ use next responder in chain to respond]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return try next.respond(to: req)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[group.get(\"\/\") { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above example logs all incoming requests.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 19,
            "key.doc.name" : "grouped(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Closure accepting a `Request` and `Responder` and returning a `Future<Response>`."
                  }
                ],
                "name" : "respond"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`Router` with closure attached"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 629,
            "key.docoffset" : 61,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>grouped<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>respond<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 154,
            "key.name" : "grouped(_:)",
            "key.namelength" : 77,
            "key.nameoffset" : 706,
            "key.offset" : 701,
            "key.parsed_declaration" : "public func grouped(_ respond: @escaping (Request, Responder) throws -> Future<Response>) -> Router",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 19,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF\">grouped&lt;M&gt;(_: M.Type) -&gt; Router where M : Middleware<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pAA10Middleware_pd_tF\">grouped(_: Middleware...) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pSayAA10Middleware_pGF\">grouped(_: [Middleware]) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_p7Routing27PathComponentsRepresentable_pd_tF\">grouped(_: PathComponentsRepresentable...) -&gt; Router<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> (@escaping (Request, Responder) throws -> EventLoopFuture<Response>) -> Router",
            "key.typeusr" : "$Sy5Vapor6Router_p3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKccD",
            "key.usr" : "s:5Vapor6RouterPAAE7groupedyAaB_p3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKcF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func group(_ respond: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;, configure: (<Type usr=\"s:5Vapor6RouterP\">Router<\/Type>) -&gt; ())<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1538
              }
            ],
            "key.bodylength" : 72,
            "key.bodyoffset" : 1654,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a sub `Router` wrapped in the supplied middleware function.\n\n    router.group({ req, next in\n        \/\/ this closure will be called with each request\n        print(req)\n        \/\/ use next responder in chain to respond\n        return try next.respond(to: req)\n    }) { group in\n        group.get(\"\/\") { ... }\n    }\n\nThe above example logs all incoming requests.\n\n- parameters:\n    - respond: Closure accepting a `Request` and `Responder` and returning a `Future<Response>`.\n    - configure: Closure to configure the newly created sub `Router`.",
            "key.doc.declaration" : "public func group(_ respond: @escaping (Request, Responder) throws -> Future<Response>, configure: (Router) -> ())",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above example logs all incoming requests."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift\" line=\"39\" column=\"17\"><Name>group(_:configure:)<\/Name><USR>s:5Vapor6RouterPAAE5group_9configurey3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKc_yAaB_pXEtF<\/USR><Declaration>public func group(_ respond: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;, configure: (Router) -&gt; ())<\/Declaration><CommentParts><Abstract><Para>Creates a sub <codeVoice>Router<\/codeVoice> wrapped in the supplied middleware function.<\/Para><\/Abstract><Parameters><Parameter><Name>respond<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Closure accepting a <codeVoice>Request<\/codeVoice> and <codeVoice>Responder<\/codeVoice> and returning a <codeVoice>Future&lt;Response&gt;<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>configure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Closure to configure the newly created sub <codeVoice>Router<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.group({ req, next in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ this closure will be called with each request]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(req)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ use next responder in chain to respond]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return try next.respond(to: req)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}) { group in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    group.get(\"\/\") { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above example logs all incoming requests.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 39,
            "key.doc.name" : "group(_:configure:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Closure accepting a `Request` and `Responder` and returning a `Future<Response>`."
                  }
                ],
                "name" : "respond"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Closure to configure the newly created sub `Router`."
                  }
                ],
                "name" : "configure"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 673,
            "key.docoffset" : 861,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>group<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>respond<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 182,
            "key.name" : "group(_:configure:)",
            "key.namelength" : 102,
            "key.nameoffset" : 1550,
            "key.offset" : 1545,
            "key.parsed_declaration" : "public func group(_ respond: @escaping (Request, Responder) throws -> Future<Response>, configure: (Router) -> ())",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 39,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF\">group&lt;M&gt;(_: M.Type, configure: (Router) throws -&gt; ()) rethrows where M : Middleware<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureyAA10Middleware_pd_yAaB_pXEtF\">group(_: Middleware..., configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureySayAA10Middleware_pG_yAaB_pXEtF\">group(_: [Middleware], configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configurey7Routing27PathComponentsRepresentable_pd_yAaB_pXEtF\">group(_: PathComponentsRepresentable..., configure: (Router) -&gt; ())<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> (@escaping (Request, Responder) throws -> EventLoopFuture<Response>, (Router) -> ()) -> ()",
            "key.typeusr" : "$S_9configurey3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_AE9Responder_ptKc_yAE6Router_pXEtcD",
            "key.usr" : "s:5Vapor6RouterPAAE5group_9configurey3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKc_yAaB_pXEtF"
          }
        ],
        "key.typename" : "Router.Protocol",
        "key.typeusr" : "$S5Vapor6Router_pmD",
        "key.usr" : "s:5Vapor6RouterP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1734
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private class MiddlewareFunction : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 1796
          }
        ],
        "key.bodylength" : 447,
        "key.bodyoffset" : 1842,
        "key.doc.column" : 15,
        "key.doc.comment" : "Wrapper to create Middleware from function",
        "key.doc.declaration" : "private class MiddlewareFunction : Middleware",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift\" line=\"47\" column=\"15\"><Name>MiddlewareFunction<\/Name><USR>s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLC<\/USR><Declaration>private class MiddlewareFunction : Middleware<\/Declaration><CommentParts><Abstract><Para>Wrapper to create Middleware from function<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 47,
        "key.doc.name" : "MiddlewareFunction",
        "key.doc.type" : "Class",
        "key.doclength" : 47,
        "key.docoffset" : 1749,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 1830
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>MiddlewareFunction<\/decl.name> : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Middleware"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 486,
        "key.name" : "MiddlewareFunction",
        "key.namelength" : 18,
        "key.nameoffset" : 1810,
        "key.offset" : 1804,
        "key.parsed_declaration" : "private class MiddlewareFunction: Middleware",
        "key.parsed_scope.end" : 60,
        "key.parsed_scope.start" : 47,
        "key.runtime_name" : "_TtC4main18MiddlewareFunction",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let respond: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1881
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Internal request handler.",
            "key.doc.declaration" : "private let respond: (Request, Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift\" line=\"49\" column=\"17\"><Name>respond<\/Name><USR>s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLC7respondy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKcvp<\/USR><Declaration>private let respond: (Request, Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Internal request handler.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 49,
            "key.doc.name" : "respond",
            "key.doc.type" : "Other",
            "key.doclength" : 30,
            "key.docoffset" : 1847,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 60,
            "key.name" : "respond",
            "key.namelength" : 7,
            "key.nameoffset" : 1893,
            "key.offset" : 1889,
            "key.parsed_declaration" : "private let respond: (Request, Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF\">respond(to:chainingTo:)<\/RelatedName>"
              }
            ],
            "key.typename" : "(Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCy5Vapor8ResponseCGAD7RequestC_AD9Responder_ptKcD",
            "key.usr" : "s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLC7respondy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(_ function: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 37,
            "key.bodyoffset" : 2075,
            "key.doc.column" : 5,
            "key.doc.comment" : "Creates a new `MiddlewareFunction`",
            "key.doc.declaration" : "init(_ function: @escaping (Request, Responder) throws -> Future<Response>)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift\" line=\"52\" column=\"5\"><Name>init(_:)<\/Name><USR>s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLCyAD3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKccfc<\/USR><Declaration>init(_ function: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>MiddlewareFunction<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 52,
            "key.doc.name" : "init(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 39,
            "key.docoffset" : 1955,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>function<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 115,
            "key.name" : "init(_:)",
            "key.namelength" : 75,
            "key.nameoffset" : 1998,
            "key.offset" : 1998,
            "key.parsed_declaration" : "init(_ function: @escaping (Request, Responder) throws -> Future<Response>)",
            "key.parsed_scope.end" : 54,
            "key.parsed_scope.start" : 52,
            "key.substructure" : [

            ],
            "key.typename" : "(MiddlewareFunction.Type) -> (@escaping (Request, Responder) throws -> EventLoopFuture<Response>) -> MiddlewareFunction",
            "key.typeusr" : "$Sy5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLC3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKccD",
            "key.usr" : "s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLCyAD3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKccfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func respond(to request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 52,
            "key.bodyoffset" : 2235,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `Middleware`.",
            "key.doc.declaration" : "func respond(to request: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift\" line=\"57\" column=\"10\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF<\/USR><Declaration>func respond(to request: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Middleware<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 57,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 22,
            "key.docoffset" : 2119,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Function.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 143,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 56,
            "key.nameoffset" : 2150,
            "key.offset" : 2145,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
              }
            ],
            "key.parsed_declaration" : "func respond(to request: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 57,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLC7respondy3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKcvp\">respond<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(MiddlewareFunction) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
          }
        ],
        "key.typename" : "MiddlewareFunction.Type",
        "key.typeusr" : "$S5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLCmD",
        "key.usr" : "s:5Vapor18MiddlewareFunction33_A7AD795FC8AA7DCEEE5143A8B06C5B4CLLC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2376,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public protocol Router : AnyObject, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 970,
        "key.bodyoffset" : 18,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Router : AnyObject, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"2\" column=\"17\"><Name>Router<\/Name><USR>s:5Vapor6RouterP<\/USR><Declaration>public protocol Router : AnyObject, Service<\/Declaration><CommentParts><Abstract><Para>Capable of registering <codeVoice>Responder<\/codeVoice> routes and returning appropriate responders for a given request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Router",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Router<\/decl.name> : AnyObject, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 989,
        "key.name" : "Router",
        "key.namelength" : 6,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 21,
            "key.name" : "MARK: Lazy Middleware",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 26
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func grouped&lt;M&gt;(_ middleware: <Type usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF1ML_qd__mfp\">M<\/Type>.Type) -&gt; <Type usr=\"s:5Vapor6RouterP\">Router<\/Type> where M : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 343
              }
            ],
            "key.bodylength" : 72,
            "key.bodyoffset" : 419,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a group with the provided `Middleware` type.\n\n    let group = router.grouped(DateMiddleware.self)\n    group.get(\"date\") { ... }\n\nThis middleware will be lazily initialized using the container upon the first request that invokes it.",
            "key.doc.declaration" : "public func grouped<M>(_ middleware: M.Type) -> Router where M : Middleware",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "This middleware will be lazily initialized using the container upon the first request that invokes it."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"10\" column=\"17\"><Name>grouped(_:)<\/Name><USR>s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF<\/USR><Declaration>public func grouped&lt;M&gt;(_ middleware: M.Type) -&gt; Router where M : Middleware<\/Declaration><CommentParts><Abstract><Para>Creates a group with the provided <codeVoice>Middleware<\/codeVoice> type.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let group = router.grouped(DateMiddleware.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[group.get(\"date\") { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>This middleware will be lazily initialized using the container upon the first request that invokes it.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 10,
            "key.doc.name" : "grouped(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 282,
            "key.docoffset" : 57,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>grouped<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF1ML_qd__mfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>middleware<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF1ML_qd__mfp\">M<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>M : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 142,
            "key.name" : "grouped(_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 355,
            "key.offset" : 350,
            "key.parsed_declaration" : "public func grouped<M>(_ middleware: M.Type) -> Router where M: Middleware",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 10,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_p3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKcF\">grouped(_: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pAA10Middleware_pd_tF\">grouped(_: Middleware...) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pSayAA10Middleware_pGF\">grouped(_: [Middleware]) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_p7Routing27PathComponentsRepresentable_pd_tF\">grouped(_: PathComponentsRepresentable...) -&gt; Router<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 363,
                "key.offset" : 363,
                "key.parsed_declaration" : "public func grouped<M>(_ middleware: M.Type) -> Router where M: Middleware",
                "key.parsed_scope.end" : 10,
                "key.parsed_scope.start" : 10,
                "key.typename" : "M.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF1ML_qd__mfp"
              }
            ],
            "key.typename" : "<Self, M where Self : Router, M : Middleware> (Self) -> (M.Type) -> Router",
            "key.typeusr" : "$Sy5Vapor6Router_pqd__mcAA10MiddlewareRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func group&lt;M&gt;(_ middleware: <Type usr=\"s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF1ML_qd__mfp\">M<\/Type>.Type, configure: (<Type usr=\"s:5Vapor6RouterP\">Router<\/Type>) throws -&gt; ()) rethrows where M : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.rethrows",
                "key.length" : 8,
                "key.offset" : 876
              },
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 799
              }
            ],
            "key.bodylength" : 80,
            "key.bodyoffset" : 906,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a group with the provided `Middleware` type.\n\n    router.group(DateMiddleware.self) { group in\n        group.get(\"date\") { ... }\n    }\n\nThis middleware will be lazily initialized using the container upon the first request that invokes it.",
            "key.doc.declaration" : "public func group<M>(_ middleware: M.Type, configure: (Router) throws -> ()) rethrows where M : Middleware",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "This middleware will be lazily initialized using the container upon the first request that invokes it."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"21\" column=\"17\"><Name>group(_:configure:)<\/Name><USR>s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF<\/USR><Declaration>public func group&lt;M&gt;(_ middleware: M.Type, configure: (Router) throws -&gt; ()) rethrows where M : Middleware<\/Declaration><CommentParts><Abstract><Para>Creates a group with the provided <codeVoice>Middleware<\/codeVoice> type.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.group(DateMiddleware.self) { group in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    group.get(\"date\") { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>This middleware will be lazily initialized using the container upon the first request that invokes it.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 21,
            "key.doc.name" : "group(_:configure:)",
            "key.doc.type" : "Function",
            "key.doclength" : 297,
            "key.docoffset" : 498,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>group<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF1ML_qd__mfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>middleware<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF1ML_qd__mfp\">M<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>rethrows<\/syntaxtype.keyword> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>M : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 181,
            "key.name" : "group(_:configure:)",
            "key.namelength" : 64,
            "key.nameoffset" : 811,
            "key.offset" : 806,
            "key.parsed_declaration" : "public func group<M>(_ middleware: M.Type, configure: (Router) throws -> ()) rethrows where M: Middleware",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 21,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configurey3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKc_yAaB_pXEtF\">group(_: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;, configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureyAA10Middleware_pd_yAaB_pXEtF\">group(_: Middleware..., configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureySayAA10Middleware_pG_yAaB_pXEtF\">group(_: [Middleware], configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configurey7Routing27PathComponentsRepresentable_pd_yAaB_pXEtF\">group(_: PathComponentsRepresentable..., configure: (Router) -&gt; ())<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>M<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "M",
                "key.namelength" : 1,
                "key.nameoffset" : 817,
                "key.offset" : 817,
                "key.parsed_declaration" : "public func group<M>(_ middleware: M.Type, configure: (Router) throws -> ()) rethrows where M: Middleware",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.typename" : "M.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF1ML_qd__mfp"
              }
            ],
            "key.typename" : "<Self, M where Self : Router, M : Middleware> (Self) -> (M.Type, (Router) throws -> ()) throws -> ()",
            "key.typeusr" : "$S_9configureyqd__m_y5Vapor6Router_pKXEtKcAB10MiddlewareRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF"
          }
        ],
        "key.typename" : "Router.Protocol",
        "key.typeusr" : "$S5Vapor6Router_pmD",
        "key.usr" : "s:5Vapor6RouterP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private struct LazyMiddlewareResponder&lt;M&gt; : <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type> where M : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 1104
          }
        ],
        "key.bodylength" : 425,
        "key.bodyoffset" : 1178,
        "key.doc.column" : 16,
        "key.doc.comment" : "MARK: Private\nResponder wrapper around middleware type. Lazily initializes the middleware upon request.",
        "key.doc.declaration" : "private struct LazyMiddlewareResponder<M> : Responder where M : Middleware",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"29\" column=\"16\"><Name>LazyMiddlewareResponder<\/Name><USR>s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV<\/USR><Declaration>private struct LazyMiddlewareResponder&lt;M&gt; : Responder where M : Middleware<\/Declaration><CommentParts><Abstract><Para>MARK: Private Responder wrapper around middleware type. Lazily initializes the middleware upon request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 29,
        "key.doc.name" : "LazyMiddlewareResponder",
        "key.doc.type" : "Class",
        "key.doclength" : 113,
        "key.docoffset" : 991,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 1147
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>LazyMiddlewareResponder<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV1Mxmfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>M : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Responder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 492,
        "key.name" : "LazyMiddlewareResponder",
        "key.namelength" : 23,
        "key.nameoffset" : 1119,
        "key.offset" : 1112,
        "key.parsed_declaration" : "private struct LazyMiddlewareResponder<M>: Responder where M: Middleware",
        "key.parsed_scope.end" : 44,
        "key.parsed_scope.start" : 29,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>M<\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "M",
            "key.namelength" : 1,
            "key.nameoffset" : 1143,
            "key.offset" : 1143,
            "key.parsed_declaration" : "private struct LazyMiddlewareResponder<M>: Responder where M: Middleware",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.typename" : "M.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV1Mxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>var responder: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type><\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "The responder to chain to.",
            "key.doc.declaration" : "var responder: Responder",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"31\" column=\"9\"><Name>responder<\/Name><USR>s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV9responderAA0D0_pvp<\/USR><Declaration>var responder: Responder<\/Declaration><CommentParts><Abstract><Para>The responder to chain to.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 31,
            "key.doc.name" : "responder",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 1183,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>responder<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "responder",
            "key.namelength" : 9,
            "key.nameoffset" : 1222,
            "key.offset" : 1218,
            "key.parsed_declaration" : "var responder: Responder",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 31,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Responder",
            "key.typeusr" : "$S5Vapor9Responder_pD",
            "key.usr" : "s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV9responderAA0D0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(_ type: <Type usr=\"s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV1Mxmfp\">M<\/Type>.Type, chainingTo responder: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>)<\/Declaration>",
            "key.bodylength" : 40,
            "key.bodyoffset" : 1351,
            "key.doc.column" : 5,
            "key.doc.comment" : "Creates a new `LazyMiddlewareResponder`",
            "key.doc.declaration" : "init(_ type: M.Type, chainingTo responder: Responder)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"34\" column=\"5\"><Name>init(_:chainingTo:)<\/Name><USR>s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV_10chainingToADyxGxm_AA0D0_ptcfc<\/USR><Declaration>init(_ type: M.Type, chainingTo responder: Responder)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>LazyMiddlewareResponder<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 34,
            "key.doc.name" : "init(_:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 44,
            "key.docoffset" : 1248,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV1Mxmfp\">M<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>responder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 96,
            "key.name" : "init(_:chainingTo:)",
            "key.namelength" : 53,
            "key.nameoffset" : 1296,
            "key.offset" : 1296,
            "key.parsed_declaration" : "init(_ type: M.Type, chainingTo responder: Responder)",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 34,
            "key.substructure" : [

            ],
            "key.typename" : "<M where M : Middleware> (LazyMiddlewareResponder<M>.Type) -> (M.Type, Responder) -> LazyMiddlewareResponder<M>",
            "key.typeusr" : "$S_10chainingTo5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLVyxGxm_AB0F0_ptcD",
            "key.usr" : "s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV_10chainingToADyxGxm_AA0D0_ptcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 121,
            "key.bodyoffset" : 1480,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `Responder`",
            "key.doc.declaration" : "func respond(to req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"39\" column=\"10\"><Name>respond(to:)<\/Name><USR>s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF<\/USR><Declaration>func respond(to req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Responder<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 39,
            "key.doc.name" : "respond(to:)",
            "key.doc.type" : "Function",
            "key.doclength" : 20,
            "key.docoffset" : 1398,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 180,
            "key.name" : "respond(to:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1427,
            "key.offset" : 1422,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor9ResponderP7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "func respond(to req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 39,
            "key.substructure" : [

            ],
            "key.typename" : "<M where M : Middleware> (LazyMiddlewareResponder<M>) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV7respond2to3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_tKF"
          }
        ],
        "key.typename" : "LazyMiddlewareResponder<M>.Type",
        "key.typeusr" : "$S5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLVyxGmD",
        "key.usr" : "s:5Vapor23LazyMiddlewareResponder33_E65344D41616F0E4406435A0E3704134LLV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private final class LazyMiddlewareRouteGroup&lt;M&gt; : <Type usr=\"s:5Vapor6RouterP\">Router<\/Type> where M : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 1647
          },
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 1639
          }
        ],
        "key.bodylength" : 658,
        "key.bodyoffset" : 1716,
        "key.doc.column" : 21,
        "key.doc.comment" : "Lazy initialized route group",
        "key.doc.declaration" : "private final class LazyMiddlewareRouteGroup<M> : Router where M : Middleware",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"47\" column=\"21\"><Name>LazyMiddlewareRouteGroup<\/Name><USR>s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC<\/USR><Declaration>private final class LazyMiddlewareRouteGroup&lt;M&gt; : Router where M : Middleware<\/Declaration><CommentParts><Abstract><Para>Lazy initialized route group<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 47,
        "key.doc.name" : "LazyMiddlewareRouteGroup",
        "key.doc.type" : "Class",
        "key.doclength" : 33,
        "key.docoffset" : 1606,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 1688
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>LazyMiddlewareRouteGroup<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC1Mxmfp\"><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>M : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.generic_type_requirement><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Router"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 722,
        "key.name" : "LazyMiddlewareRouteGroup",
        "key.namelength" : 24,
        "key.nameoffset" : 1659,
        "key.offset" : 1653,
        "key.parsed_declaration" : "private final class LazyMiddlewareRouteGroup<M>: Router where M: Middleware",
        "key.parsed_scope.end" : 70,
        "key.parsed_scope.start" : 47,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>M<\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>M<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 1,
            "key.name" : "M",
            "key.namelength" : 1,
            "key.nameoffset" : 1684,
            "key.offset" : 1684,
            "key.parsed_declaration" : "private final class LazyMiddlewareRouteGroup<M>: Router where M: Middleware",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 47,
            "key.typename" : "M.Type",
            "key.typeusr" : "$SxmD",
            "key.usr" : "s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC1Mxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private(set) var routes: [<Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.setter_access.private",
                "key.length" : 12,
                "key.offset" : 1765
              }
            ],
            "key.doc.column" : 22,
            "key.doc.comment" : "All routes registered to this group",
            "key.doc.declaration" : "private(set) var routes: [Routing.Route<Responder>]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"49\" column=\"22\"><Name>routes<\/Name><USR>s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC6routesSay7Routing0D0CyAA9Responder_pGGvp<\/USR><Declaration>private(set) var routes: [Routing.Route&lt;Responder&gt;]<\/Declaration><CommentParts><Abstract><Para>All routes registered to this group<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 49,
            "key.doc.name" : "routes",
            "key.doc.type" : "Other",
            "key.doclength" : 40,
            "key.docoffset" : 1721,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword>(set) <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>routes<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 35,
            "key.name" : "routes",
            "key.namelength" : 6,
            "key.nameoffset" : 1782,
            "key.offset" : 1778,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP6routesSay7Routing5RouteCyAA9Responder_pGGvp"
              }
            ],
            "key.parsed_declaration" : "private(set) var routes: [Route<Responder>] = []",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "[Route<Responder>]",
            "key.typeusr" : "$SSay7Routing5RouteCy5Vapor9Responder_pGGD",
            "key.usr" : "s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC6routesSay7Routing0D0CyAA9Responder_pGGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let `super`: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "The parent router.",
            "key.doc.declaration" : "let `super`: Router",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"52\" column=\"9\"><Name>super<\/Name><USR>s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC5superAA6Router_pvp<\/USR><Declaration>let `super`: Router<\/Declaration><CommentParts><Abstract><Para>The parent router.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 52,
            "key.doc.name" : "super",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 1819,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>`super`<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 19,
            "key.name" : "super",
            "key.namelength" : 5,
            "key.nameoffset" : 1850,
            "key.offset" : 1846,
            "key.parsed_declaration" : "let `super`: Router",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 52,
            "key.typename" : "Router",
            "key.typeusr" : "$S5Vapor6Router_pD",
            "key.usr" : "s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC5superAA6Router_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(_ type: <Type usr=\"s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC1Mxmfp\">M<\/Type>.Type, cascadingTo router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type>)<\/Declaration>",
            "key.bodylength" : 33,
            "key.bodyoffset" : 1949,
            "key.doc.column" : 5,
            "key.doc.comment" : "Creates a new group",
            "key.doc.declaration" : "init(_ type: M.Type, cascadingTo router: Router)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"55\" column=\"5\"><Name>init(_:cascadingTo:)<\/Name><USR>s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC_11cascadingToADyxGxm_AA6Router_ptcfc<\/USR><Declaration>init(_ type: M.Type, cascadingTo router: Router)<\/Declaration><CommentParts><Abstract><Para>Creates a new group<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 55,
            "key.doc.name" : "init(_:cascadingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 24,
            "key.docoffset" : 1871,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>type<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC1Mxmfp\">M<\/ref.generic_type_param>.Type<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cascadingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>router<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 84,
            "key.name" : "init(_:cascadingTo:)",
            "key.namelength" : 48,
            "key.nameoffset" : 1899,
            "key.offset" : 1899,
            "key.parsed_declaration" : "init(_ type: M.Type, cascadingTo router: Router)",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 55,
            "key.substructure" : [

            ],
            "key.typename" : "<M where M : Middleware> (LazyMiddlewareRouteGroup<M>.Type) -> (M.Type, Router) -> LazyMiddlewareRouteGroup<M>",
            "key.typeusr" : "$S_11cascadingTo5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLCyxGxm_AB6Router_ptcD",
            "key.usr" : "s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC_11cascadingToADyxGxm_AA6Router_ptcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func register(route: <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 162,
            "key.bodyoffset" : 2067,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `Router.register(route:)`",
            "key.doc.declaration" : "func register(route: Route<Responder>)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"60\" column=\"10\"><Name>register(route:)<\/Name><USR>s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC8register5routey7Routing0D0CyAA9Responder_pG_tF<\/USR><Declaration>func register(route: Route&lt;Responder&gt;)<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router.register(route:)<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 60,
            "key.doc.name" : "register(route:)",
            "key.doc.type" : "Function",
            "key.doclength" : 34,
            "key.docoffset" : 1989,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>route<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 203,
            "key.name" : "register(route:)",
            "key.namelength" : 33,
            "key.nameoffset" : 2032,
            "key.offset" : 2027,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP8register5routey7Routing5RouteCyAA9Responder_pG_tF"
              }
            ],
            "key.parsed_declaration" : "func register(route: Route<Responder>)",
            "key.parsed_scope.end" : 64,
            "key.parsed_scope.start" : 60,
            "key.substructure" : [

            ],
            "key.typename" : "<M where M : Middleware> (LazyMiddlewareRouteGroup<M>) -> (Route<Responder>) -> ()",
            "key.typeusr" : "$S5routey7Routing5RouteCy5Vapor9Responder_pG_tcD",
            "key.usr" : "s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC8register5routey7Routing0D0CyAA9Responder_pG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func route(request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>?<\/Declaration>",
            "key.bodylength" : 55,
            "key.bodyoffset" : 2317,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `Router.route(request:)`",
            "key.doc.declaration" : "func route(request: Request) -> Responder?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift\" line=\"67\" column=\"10\"><Name>route(request:)<\/Name><USR>s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC5route7requestAA9Responder_pSgAA7RequestC_tF<\/USR><Declaration>func route(request: Request) -&gt; Responder?<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router.route(request:)<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 67,
            "key.doc.name" : "route(request:)",
            "key.doc.type" : "Function",
            "key.doclength" : 33,
            "key.docoffset" : 2236,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+LazyMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>route<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 100,
            "key.name" : "route(request:)",
            "key.namelength" : 23,
            "key.nameoffset" : 2278,
            "key.offset" : 2273,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP5route7requestAA9Responder_pSgAA7RequestC_tF"
              }
            ],
            "key.parsed_declaration" : "func route(request: Request) -> Responder?",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 67,
            "key.substructure" : [

            ],
            "key.typename" : "<M where M : Middleware> (LazyMiddlewareRouteGroup<M>) -> (Request) -> Responder?",
            "key.typeusr" : "$S7request5Vapor9Responder_pSgAB7RequestC_tcD",
            "key.usr" : "s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC5route7requestAA9Responder_pSgAA7RequestC_tF"
          }
        ],
        "key.typename" : "LazyMiddlewareRouteGroup<M>.Type",
        "key.typeusr" : "$S5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLCyxGmD",
        "key.usr" : "s:5Vapor24LazyMiddlewareRouteGroup33_E65344D41616F0E4406435A0E3704134LLC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 9374,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public protocol Router : AnyObject, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 9313,
        "key.bodyoffset" : 59,
        "key.doc.column" : 17,
        "key.doc.comment" : "Capable of registering async routes.",
        "key.doc.declaration" : "public protocol Router : AnyObject, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"2\" column=\"17\"><Name>Router<\/Name><USR>s:5Vapor6RouterP<\/USR><Declaration>public protocol Router : AnyObject, Service<\/Declaration><CommentParts><Abstract><Para>Capable of registering <codeVoice>Responder<\/codeVoice> routes and returning appropriate responders for a given request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Router",
        "key.doc.type" : "Class",
        "key.doclength" : 41,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Router<\/decl.name> : AnyObject, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 9332,
        "key.name" : "Router",
        "key.namelength" : 6,
        "key.nameoffset" : 51,
        "key.offset" : 41,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 12,
            "key.name" : "MARK: Method",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 67
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func get&lt;T&gt;(_ path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE3get_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1008
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 985
              }
            ],
            "key.bodylength" : 80,
            "key.bodyoffset" : 1173,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` at the provided path using the `GET` method.\n\n    router.get(\"hello\", \"world\") { req in\n        return \"Hello, world!\"\n    }\n\nThe above route closure would return `\"Hello, world\"` to requests to `GET \/hello\/world`.\n\nYou can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters.\n\n    router.get(\"users\", Int.parameter) { req in\n        let id = try req.parameters.next(Int.self)\n        return \"User #\\(id)\"\n    }\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func get<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder> where T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would return `\"Hello, world\"` to requests to `GET \/hello\/world`."
              },
              {
                "Para" : "You can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift\" line=\"27\" column=\"17\"><Name>get(_:use:)<\/Name><USR>s:5Vapor6RouterPAAE3get_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF<\/USR><Declaration>public func get&lt;T&gt;(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> at the provided path using the <codeVoice>GET<\/codeVoice> method.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"hello\", \"world\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, world!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would return <codeVoice>&quot;Hello, world&quot;<\/codeVoice> to requests to <codeVoice>GET \/hello\/world<\/codeVoice>.<\/Para><Para>You can use anything <codeVoice>PathComponentsRepresentable<\/codeVoice> to create the path, including dynamic parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"users\", Int.parameter) { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"User #\\(id)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 27,
            "key.doc.name" : "get(_:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 896,
            "key.docoffset" : 85,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE3get_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE3get_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 239,
            "key.name" : "get(_:use:)",
            "key.namelength" : 92,
            "key.nameoffset" : 1020,
            "key.offset" : 1015,
            "key.parsed_declaration" : "public func get<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>\n    where T: ResponseEncodable",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 27,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 1024,
                "key.offset" : 1024,
                "key.parsed_declaration" : "public func get<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 27,
                "key.parsed_scope.start" : 27,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE3get_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Router, T : ResponseEncodable> (Self) -> (PathComponentsRepresentable..., @escaping (Request) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_3use7Routing5RouteCy5Vapor9Responder_pGAB27PathComponentsRepresentable_pd_qd__AE7RequestCKctcAE17ResponseEncodableRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE3get_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func post&lt;T&gt;(_ path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE4post_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2187
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2164
              }
            ],
            "key.bodylength" : 81,
            "key.bodyoffset" : 2353,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` at the provided path using the `POST` method.\n\n    router.post(\"hello\", \"world\") { req in\n        return \"Hello, world!\"\n    }\n\nThe above route closure would return `\"Hello, world\"` to requests to `POST \/hello\/world`.\n\nYou can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters.\n\n    router.post(\"users\", Int.parameter) { req in\n        let id = try req.parameters.next(Int.self)\n        return \"User #\\(id)\"\n    }\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func post<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder> where T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would return `\"Hello, world\"` to requests to `POST \/hello\/world`."
              },
              {
                "Para" : "You can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift\" line=\"55\" column=\"17\"><Name>post(_:use:)<\/Name><USR>s:5Vapor6RouterPAAE4post_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF<\/USR><Declaration>public func post&lt;T&gt;(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> at the provided path using the <codeVoice>POST<\/codeVoice> method.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.post(\"hello\", \"world\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, world!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would return <codeVoice>&quot;Hello, world&quot;<\/codeVoice> to requests to <codeVoice>POST \/hello\/world<\/codeVoice>.<\/Para><Para>You can use anything <codeVoice>PathComponentsRepresentable<\/codeVoice> to create the path, including dynamic parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.post(\"users\", Int.parameter) { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"User #\\(id)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 55,
            "key.doc.name" : "post(_:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 900,
            "key.docoffset" : 1260,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>post<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE4post_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE4post_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 241,
            "key.name" : "post(_:use:)",
            "key.namelength" : 93,
            "key.nameoffset" : 2199,
            "key.offset" : 2194,
            "key.parsed_declaration" : "public func post<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>\n    where T: ResponseEncodable",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 55,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE4post_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF\">post(_:at:use:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 2204,
                "key.offset" : 2204,
                "key.parsed_declaration" : "public func post<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 55,
                "key.parsed_scope.start" : 55,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE4post_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Router, T : ResponseEncodable> (Self) -> (PathComponentsRepresentable..., @escaping (Request) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_3use7Routing5RouteCy5Vapor9Responder_pGAB27PathComponentsRepresentable_pd_qd__AE7RequestCKctcAE17ResponseEncodableRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE4post_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func patch&lt;T&gt;(_ path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE5patch_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3372
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 3349
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 3539,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` at the provided path using the `PATCH` method.\n\n    router.patch(\"hello\", \"world\") { req in\n        return \"Hello, world!\"\n    }\n\nThe above route closure would return `\"Hello, world\"` to requests to `PATCH \/hello\/world`.\n\nYou can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters.\n\n    router.patch(\"users\", Int.parameter) { req in\n        let id = try req.parameters.next(Int.self)\n        return \"User #\\(id)\"\n    }\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func patch<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder> where T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would return `\"Hello, world\"` to requests to `PATCH \/hello\/world`."
              },
              {
                "Para" : "You can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift\" line=\"83\" column=\"17\"><Name>patch(_:use:)<\/Name><USR>s:5Vapor6RouterPAAE5patch_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF<\/USR><Declaration>public func patch&lt;T&gt;(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> at the provided path using the <codeVoice>PATCH<\/codeVoice> method.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.patch(\"hello\", \"world\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, world!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would return <codeVoice>&quot;Hello, world&quot;<\/codeVoice> to requests to <codeVoice>PATCH \/hello\/world<\/codeVoice>.<\/Para><Para>You can use anything <codeVoice>PathComponentsRepresentable<\/codeVoice> to create the path, including dynamic parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.patch(\"users\", Int.parameter) { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"User #\\(id)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 83,
            "key.doc.name" : "patch(_:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 904,
            "key.docoffset" : 2441,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>patch<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE5patch_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE5patch_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 243,
            "key.name" : "patch(_:use:)",
            "key.namelength" : 94,
            "key.nameoffset" : 3384,
            "key.offset" : 3379,
            "key.parsed_declaration" : "public func patch<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>\n    where T: ResponseEncodable",
            "key.parsed_scope.end" : 87,
            "key.parsed_scope.start" : 83,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5patch_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF\">patch(_:at:use:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 3390,
                "key.offset" : 3390,
                "key.parsed_declaration" : "public func patch<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 83,
                "key.parsed_scope.start" : 83,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE5patch_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Router, T : ResponseEncodable> (Self) -> (PathComponentsRepresentable..., @escaping (Request) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_3use7Routing5RouteCy5Vapor9Responder_pGAB27PathComponentsRepresentable_pd_qd__AE7RequestCKctcAE17ResponseEncodableRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE5patch_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func put&lt;T&gt;(_ path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE3put_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4551
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 4528
              }
            ],
            "key.bodylength" : 80,
            "key.bodyoffset" : 4716,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` at the provided path using the `PUT` method.\n\n    router.put(\"hello\", \"world\") { req in\n        return \"Hello, world!\"\n    }\n\nThe above route closure would return `\"Hello, world\"` to requests to `PUT \/hello\/world`.\n\nYou can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters.\n\n    router.put(\"users\", Int.parameter) { req in\n        let id = try req.parameters.next(Int.self)\n        return \"User #\\(id)\"\n    }\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func put<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder> where T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would return `\"Hello, world\"` to requests to `PUT \/hello\/world`."
              },
              {
                "Para" : "You can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift\" line=\"111\" column=\"17\"><Name>put(_:use:)<\/Name><USR>s:5Vapor6RouterPAAE3put_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF<\/USR><Declaration>public func put&lt;T&gt;(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> at the provided path using the <codeVoice>PUT<\/codeVoice> method.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.put(\"hello\", \"world\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, world!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would return <codeVoice>&quot;Hello, world&quot;<\/codeVoice> to requests to <codeVoice>PUT \/hello\/world<\/codeVoice>.<\/Para><Para>You can use anything <codeVoice>PathComponentsRepresentable<\/codeVoice> to create the path, including dynamic parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.put(\"users\", Int.parameter) { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"User #\\(id)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 111,
            "key.doc.name" : "put(_:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 896,
            "key.docoffset" : 3628,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>put<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE3put_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE3put_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 239,
            "key.name" : "put(_:use:)",
            "key.namelength" : 92,
            "key.nameoffset" : 4563,
            "key.offset" : 4558,
            "key.parsed_declaration" : "public func put<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>\n    where T: ResponseEncodable",
            "key.parsed_scope.end" : 115,
            "key.parsed_scope.start" : 111,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE3put_2at3use7Routing5RouteCyAA9Responder_pGqd__m_AG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0L9DecodableRd__AA17ResponseEncodableRd_0_r0_lF\">put(_:at:use:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 4567,
                "key.offset" : 4567,
                "key.parsed_declaration" : "public func put<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 111,
                "key.parsed_scope.start" : 111,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE3put_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Router, T : ResponseEncodable> (Self) -> (PathComponentsRepresentable..., @escaping (Request) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_3use7Routing5RouteCy5Vapor9Responder_pGAB27PathComponentsRepresentable_pd_qd__AE7RequestCKctcAE17ResponseEncodableRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE3put_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func delete&lt;T&gt;(_ path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE6delete_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5738
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 5715
              }
            ],
            "key.bodylength" : 83,
            "key.bodyoffset" : 5906,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` at the provided path using the `DELETE` method.\n\n    router.delete(\"hello\", \"world\") { req in\n        return \"Hello, world!\"\n    }\n\nThe above route closure would return `\"Hello, world\"` to requests to `DELETE \/hello\/world`.\n\nYou can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters.\n\n    router.delete(\"users\", Int.parameter) { req in\n        let id = try req.parameters.next(Int.self)\n        return \"User #\\(id)\"\n    }\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func delete<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder> where T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would return `\"Hello, world\"` to requests to `DELETE \/hello\/world`."
              },
              {
                "Para" : "You can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift\" line=\"139\" column=\"17\"><Name>delete(_:use:)<\/Name><USR>s:5Vapor6RouterPAAE6delete_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF<\/USR><Declaration>public func delete&lt;T&gt;(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> at the provided path using the <codeVoice>DELETE<\/codeVoice> method.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.delete(\"hello\", \"world\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, world!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would return <codeVoice>&quot;Hello, world&quot;<\/codeVoice> to requests to <codeVoice>DELETE \/hello\/world<\/codeVoice>.<\/Para><Para>You can use anything <codeVoice>PathComponentsRepresentable<\/codeVoice> to create the path, including dynamic parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.delete(\"users\", Int.parameter) { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"User #\\(id)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 139,
            "key.doc.name" : "delete(_:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 908,
            "key.docoffset" : 4803,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>delete<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE6delete_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE6delete_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 245,
            "key.name" : "delete(_:use:)",
            "key.namelength" : 95,
            "key.nameoffset" : 5750,
            "key.offset" : 5745,
            "key.parsed_declaration" : "public func delete<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>\n    where T: ResponseEncodable",
            "key.parsed_scope.end" : 143,
            "key.parsed_scope.start" : 139,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 5757,
                "key.offset" : 5757,
                "key.parsed_declaration" : "public func delete<T>(_ path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 139,
                "key.parsed_scope.start" : 139,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE6delete_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Router, T : ResponseEncodable> (Self) -> (PathComponentsRepresentable..., @escaping (Request) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_3use7Routing5RouteCy5Vapor9Responder_pGAB27PathComponentsRepresentable_pd_qd__AE7RequestCKctcAE17ResponseEncodableRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE6delete_3use7Routing5RouteCyAA9Responder_pGAF27PathComponentsRepresentable_pd_qd__AA7RequestCKctAA17ResponseEncodableRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func on&lt;T&gt;(_ method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type>, at path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_AG27PathComponentsRepresentable_pdqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6981
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 6958
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 7168,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` at the provided path using an HTTP method.\n\n    router.on(.GET, at: \"hello\", \"world\") { req in\n        return \"Hello, world!\"\n    }\n\nThe above route closure would return `\"Hello, world\"` to requests to `GET \/hello\/world`.\n\nYou can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters.\n\n    router.on(.GET, at: \"users\", Int.parameter) { req in\n        let id = try req.parameters.next(Int.self)\n        return \"User #\\(id)\"\n    }\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - method: `HTTPMethod` to accept.\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func on<T>(_ method: HTTPMethod, at path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder> where T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would return `\"Hello, world\"` to requests to `GET \/hello\/world`."
              },
              {
                "Para" : "You can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift\" line=\"168\" column=\"17\"><Name>on(_:at:use:)<\/Name><USR>s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_AG27PathComponentsRepresentable_pdqd__AA7RequestCKctAA17ResponseEncodableRd__lF<\/USR><Declaration>public func on&lt;T&gt;(_ method: HTTPMethod, at path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> at the provided path using an HTTP method.<\/Para><\/Abstract><Parameters><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMethod<\/codeVoice> to accept.<\/Para><\/Discussion><\/Parameter><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.on(.GET, at: \"hello\", \"world\") { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, world!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would return <codeVoice>&quot;Hello, world&quot;<\/codeVoice> to requests to <codeVoice>GET \/hello\/world<\/codeVoice>.<\/Para><Para>You can use anything <codeVoice>PathComponentsRepresentable<\/codeVoice> to create the path, including dynamic parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.on(.GET, at: \"users\", Int.parameter) { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"User #\\(id)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 168,
            "key.doc.name" : "on(_:at:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMethod` to accept."
                  }
                ],
                "name" : "method"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 958,
            "key.docoffset" : 5996,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>on<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_AG27PathComponentsRepresentable_pdqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>method<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_AG27PathComponentsRepresentable_pdqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 263,
            "key.name" : "on(_:at:use:)",
            "key.namelength" : 114,
            "key.nameoffset" : 6993,
            "key.offset" : 6988,
            "key.parsed_declaration" : "public func on<T>(_ method: HTTPMethod, at path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>\n    where T: ResponseEncodable",
            "key.parsed_scope.end" : 172,
            "key.parsed_scope.start" : 168,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF\">on(_:_:at:use:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAG27PathComponentsRepresentable_pGqd__AA7RequestCKctAA17ResponseEncodableRd__lF\">on&lt;T&gt;(_: HTTPMethod, at: [PathComponentsRepresentable], use: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 6996,
                "key.offset" : 6996,
                "key.parsed_declaration" : "public func on<T>(_ method: HTTPMethod, at path: PathComponentsRepresentable..., use closure: @escaping (Request) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 168,
                "key.parsed_scope.start" : 168,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_AG27PathComponentsRepresentable_pdqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Router, T : ResponseEncodable> (Self) -> (HTTPMethod, PathComponentsRepresentable..., @escaping (Request) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_2at3use7Routing5RouteCy5Vapor9Responder_pG8NIOHTTP110HTTPMethodO_AC27PathComponentsRepresentable_pdqd__AF7RequestCKctcAF17ResponseEncodableRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_AG27PathComponentsRepresentable_pdqd__AA7RequestCKctAA17ResponseEncodableRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func on&lt;T&gt;(_ method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type>, at path: [<Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>], use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAG27PathComponentsRepresentable_pGqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8246
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 8223
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 8432,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `Route` at the provided path using an HTTP method.\n\n    router.on(.GET, at: [\"hello\", \"world\"]) { req in\n        return \"Hello, world!\"\n    }\n\nThe above route closure would return `\"Hello, world\"` to requests to `GET \/hello\/world`.\n\nYou can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters.\n\n    router.on(.GET, at: [\"users\", Int.parameter]) { req in\n        let id = try req.parameters.next(Int.self)\n        return \"User #\\(id)\"\n    }\n\nSee `ParametersContainer` for more information on using dynamic parameters.\n\n- parameters:\n    - method: `HTTPMethod` to accept.\n    - path: Variadic `PathComponentsRepresentable` items.\n    - closure: Creates a `Response` for the incoming `Request`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "public func on<T>(_ method: HTTPMethod, at path: [PathComponentsRepresentable], use closure: @escaping (Request) throws -> T) -> Route<Responder> where T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "The above route closure would return `\"Hello, world\"` to requests to `GET \/hello\/world`."
              },
              {
                "Para" : "You can use anything `PathComponentsRepresentable` to create the path, including dynamic parameters."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `ParametersContainer` for more information on using dynamic parameters."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift\" line=\"197\" column=\"17\"><Name>on(_:at:use:)<\/Name><USR>s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAG27PathComponentsRepresentable_pGqd__AA7RequestCKctAA17ResponseEncodableRd__lF<\/USR><Declaration>public func on&lt;T&gt;(_ method: HTTPMethod, at path: [PathComponentsRepresentable], use closure: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>Route<\/codeVoice> at the provided path using an HTTP method.<\/Para><\/Abstract><Parameters><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMethod<\/codeVoice> to accept.<\/Para><\/Discussion><\/Parameter><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>PathComponentsRepresentable<\/codeVoice> items.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a <codeVoice>Response<\/codeVoice> for the incoming <codeVoice>Request<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.on(.GET, at: [\"hello\", \"world\"]) { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, world!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The above route closure would return <codeVoice>&quot;Hello, world&quot;<\/codeVoice> to requests to <codeVoice>GET \/hello\/world<\/codeVoice>.<\/Para><Para>You can use anything <codeVoice>PathComponentsRepresentable<\/codeVoice> to create the path, including dynamic parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.on(.GET, at: [\"users\", Int.parameter]) { req in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let id = try req.parameters.next(Int.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"User #\\(id)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ParametersContainer<\/codeVoice> for more information on using dynamic parameters.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 197,
            "key.doc.name" : "on(_:at:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMethod` to accept."
                  }
                ],
                "name" : "method"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `PathComponentsRepresentable` items."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a `Response` for the incoming `Request`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 962,
            "key.docoffset" : 7257,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>on<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAG27PathComponentsRepresentable_pGqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>method<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAG27PathComponentsRepresentable_pGqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 262,
            "key.name" : "on(_:at:use:)",
            "key.namelength" : 113,
            "key.nameoffset" : 8258,
            "key.offset" : 8253,
            "key.parsed_declaration" : "public func on<T>(_ method: HTTPMethod, at path: [PathComponentsRepresentable], use closure: @escaping (Request) throws -> T) -> Route<Responder>\n    where T: ResponseEncodable",
            "key.parsed_scope.end" : 201,
            "key.parsed_scope.start" : 197,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE2on__2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_qd__mAG27PathComponentsRepresentable_pdqd_0_AA7RequestC_qd__tKctAA0N9DecodableRd__AA17ResponseEncodableRd_0_r0_lF\">on(_:_:at:use:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_AG27PathComponentsRepresentable_pdqd__AA7RequestCKctAA17ResponseEncodableRd__lF\">on&lt;T&gt;(_: HTTPMethod, at: PathComponentsRepresentable..., use: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 8261,
                "key.offset" : 8261,
                "key.parsed_declaration" : "public func on<T>(_ method: HTTPMethod, at path: [PathComponentsRepresentable], use closure: @escaping (Request) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 197,
                "key.parsed_scope.start" : 197,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAG27PathComponentsRepresentable_pGqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp"
              }
            ],
            "key.typename" : "<Self, T where Self : Router, T : ResponseEncodable> (Self) -> (HTTPMethod, [PathComponentsRepresentable], @escaping (Request) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_2at3use7Routing5RouteCy5Vapor9Responder_pG8NIOHTTP110HTTPMethodO_SayAC27PathComponentsRepresentable_pGqd__AF7RequestCKctcAF17ResponseEncodableRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE2on_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAG27PathComponentsRepresentable_pGqd__AA7RequestCKctAA17ResponseEncodableRd__lF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>@discardableResult private func _on&lt;T&gt;(_ method: <Type usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/Type>, at path: [<Type usr=\"s:7Routing13PathComponentO\">PathComponent<\/Type>], use closure: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Vapor6RouterPAAE3_on33_DC215B321D04E127FA772E994FDF6B21LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/Type>) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt; where T : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 8967
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 8944
              }
            ],
            "key.bodylength" : 229,
            "key.bodyoffset" : 9141,
            "key.doc.column" : 18,
            "key.doc.comment" : "Registers a route handler at the supplied path.\n\nUse the HTTP prefixed methods instead of this method. See `get(...)`, `post(...)`, etc.\n\n- parameters:\n    - method: `HTTPMethod` to accept.\n    - path: Array of `PathComponent`s to define path.\n    - closure: Converts `Request` to a `Response`.\n- returns: Discardable `Route` that was just created.",
            "key.doc.declaration" : "private func _on<T>(_ method: HTTPMethod, at path: [PathComponent], use closure: @escaping (Request) throws -> T) -> Route<Responder> where T : ResponseEncodable",
            "key.doc.discussion" : [
              {
                "Para" : "Use the HTTP prefixed methods instead of this method. See `get(...)`, `post(...)`, etc."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift\" line=\"213\" column=\"18\"><Name>_on(_:at:use:)<\/Name><USR>s:5Vapor6RouterPAAE3_on33_DC215B321D04E127FA772E994FDF6B21LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd__AA7RequestCKctAA17ResponseEncodableRd__lF<\/USR><Declaration>private func _on&lt;T&gt;(_ method: HTTPMethod, at path: [PathComponent], use closure: @escaping (Request) throws -&gt; T) -&gt; Route&lt;Responder&gt; where T : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>Registers a route handler at the supplied path.<\/Para><\/Abstract><Parameters><Parameter><Name>method<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPMethod<\/codeVoice> to accept.<\/Para><\/Discussion><\/Parameter><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Array of <codeVoice>PathComponent<\/codeVoice>s to define path.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Converts <codeVoice>Request<\/codeVoice> to a <codeVoice>Response<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable <codeVoice>Route<\/codeVoice> that was just created.<\/Para><\/ResultDiscussion><Discussion><Para>Use the HTTP prefixed methods instead of this method. See <codeVoice>get(...)<\/codeVoice>, <codeVoice>post(...)<\/codeVoice>, etc.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 213,
            "key.doc.name" : "_on(_:at:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPMethod` to accept."
                  }
                ],
                "name" : "method"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Array of `PathComponent`s to define path."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Converts `Request` to a `Response`."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable `Route` that was just created."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 415,
            "key.docoffset" : 8525,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_on<\/decl.name>&lt;<decl.generic_type_param usr=\"s:5Vapor6RouterPAAE3_on33_DC215B321D04E127FA772E994FDF6B21LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>method<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:8NIOHTTP110HTTPMethodO\">HTTPMethod<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.enum usr=\"s:7Routing13PathComponentO\">PathComponent<\/ref.enum>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:5Vapor6RouterPAAE3_on33_DC215B321D04E127FA772E994FDF6B21LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp\">T<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.function.returntype> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 396,
            "key.name" : "_on(_:at:use:)",
            "key.namelength" : 100,
            "key.nameoffset" : 8980,
            "key.offset" : 8975,
            "key.parsed_declaration" : "private func _on<T>(_ method: HTTPMethod, at path: [PathComponent], use closure: @escaping (Request) throws -> T) -> Route<Responder>\n    where T: ResponseEncodable",
            "key.parsed_scope.end" : 220,
            "key.parsed_scope.start" : 213,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 1,
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 8984,
                "key.offset" : 8984,
                "key.parsed_declaration" : "private func _on<T>(_ method: HTTPMethod, at path: [PathComponent], use closure: @escaping (Request) throws -> T) -> Route<Responder>",
                "key.parsed_scope.end" : 213,
                "key.parsed_scope.start" : 213,
                "key.typename" : "T.Type",
                "key.typeusr" : "$Sqd__mD",
                "key.usr" : "s:5Vapor6RouterPAAE3_on33_DC215B321D04E127FA772E994FDF6B21LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd__AA7RequestCKctAA17ResponseEncodableRd__lF1TL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>let responder: <Type usr=\"s:5Vapor14BasicResponderV\">BasicResponder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>responder<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor14BasicResponderV\">BasicResponder<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 66,
                "key.name" : "responder",
                "key.namelength" : 9,
                "key.nameoffset" : 9154,
                "key.offset" : 9150,
                "key.parsed_declaration" : "let responder = BasicResponder { try closure($0).encode(for: $0) }",
                "key.parsed_scope.end" : 216,
                "key.parsed_scope.start" : 216,
                "key.typename" : "BasicResponder",
                "key.typeusr" : "$S5Vapor14BasicResponderVD",
                "key.usr" : "s:5Vapor6RouterPAAE3_on33_DC215B321D04E127FA772E994FDF6B21LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd__AA7RequestCKctAA17ResponseEncodableRd__lF9responderL_AA05BasicP0Vvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let route: <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Method.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>route<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 88,
                "key.name" : "route",
                "key.namelength" : 5,
                "key.nameoffset" : 9229,
                "key.offset" : 9225,
                "key.parsed_declaration" : "let route = Route<Responder>(path: [.constant(method.string)] + path, output: responder)",
                "key.parsed_scope.end" : 217,
                "key.parsed_scope.start" : 217,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterP5route7requestAA9Responder_pSgAA7RequestC_tF\">route(request:)<\/RelatedName>"
                  }
                ],
                "key.typename" : "Route<Responder>",
                "key.typeusr" : "$S7Routing5RouteCy5Vapor9Responder_pGD",
                "key.usr" : "s:5Vapor6RouterPAAE3_on33_DC215B321D04E127FA772E994FDF6B21LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd__AA7RequestCKctAA17ResponseEncodableRd__lF5routeL_ALvp"
              }
            ],
            "key.typename" : "<Self, T where Self : Router, T : ResponseEncodable> (Self) -> (HTTPMethod, [PathComponent], @escaping (Request) throws -> T) -> Route<Responder>",
            "key.typeusr" : "$S_2at3use7Routing5RouteCy5Vapor9Responder_pG8NIOHTTP110HTTPMethodO_SayAC13PathComponentOGqd__AF7RequestCKctcAF17ResponseEncodableRd__luD",
            "key.usr" : "s:5Vapor6RouterPAAE3_on33_DC215B321D04E127FA772E994FDF6B21LL_2at3use7Routing5RouteCyAA9Responder_pG8NIOHTTP110HTTPMethodO_SayAH13PathComponentOGqd__AA7RequestCKctAA17ResponseEncodableRd__lF"
          }
        ],
        "key.typename" : "Router.Protocol",
        "key.typeusr" : "$S5Vapor6Router_pmD",
        "key.usr" : "s:5Vapor6RouterP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3287,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public protocol Router : AnyObject, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 2413,
        "key.bodyoffset" : 18,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Router : AnyObject, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"2\" column=\"17\"><Name>Router<\/Name><USR>s:5Vapor6RouterP<\/USR><Declaration>public protocol Router : AnyObject, Service<\/Declaration><CommentParts><Abstract><Para>Capable of registering <codeVoice>Responder<\/codeVoice> routes and returning appropriate responders for a given request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Router",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Router<\/decl.name> : AnyObject, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2432,
        "key.name" : "Router",
        "key.namelength" : 6,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 16,
            "key.name" : "MARK: Middleware",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 26
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func grouped(_ middleware: <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>...) -&gt; <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 470
              }
            ],
            "key.bodylength" : 40,
            "key.bodyoffset" : 530,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a new `Router` wrapped in the supplied variadic `Middleware`.\n\n    let group = router.grouped(FooMiddleware(), BarMiddleware())\n    \/\/ all routes added will be wrapped by Foo & Bar middleware\n    group.get(...) { ... }\n\n- parameters:\n    - middleware: Variadic `Middleware` to wrap `Router` in.\n- returns: New `Router` wrapped in `Middleware`.",
            "key.doc.declaration" : "public func grouped(_ middleware: Middleware...) -> Router",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"13\" column=\"17\"><Name>grouped(_:)<\/Name><USR>s:5Vapor6RouterPAAE7groupedyAaB_pAA10Middleware_pd_tF<\/USR><Declaration>public func grouped(_ middleware: Middleware...) -&gt; Router<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>Router<\/codeVoice> wrapped in the supplied variadic <codeVoice>Middleware<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>middleware<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>Middleware<\/codeVoice> to wrap <codeVoice>Router<\/codeVoice> in.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>New <codeVoice>Router<\/codeVoice> wrapped in <codeVoice>Middleware<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let group = router.grouped(FooMiddleware(), BarMiddleware())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ all routes added will be wrapped by Foo & Bar middleware]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[group.get(...) { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 13,
            "key.doc.name" : "grouped(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `Middleware` to wrap `Router` in."
                  }
                ],
                "name" : "middleware"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "New `Router` wrapped in `Middleware`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 418,
            "key.docoffset" : 48,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>grouped<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>middleware<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 94,
            "key.name" : "grouped(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 482,
            "key.offset" : 477,
            "key.parsed_declaration" : "public func grouped(_ middleware: Middleware...) -> Router",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 13,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_p3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKcF\">grouped(_: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF\">grouped&lt;M&gt;(_: M.Type) -&gt; Router where M : Middleware<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pSayAA10Middleware_pGF\">grouped(_: [Middleware]) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_p7Routing27PathComponentsRepresentable_pd_tF\">grouped(_: PathComponentsRepresentable...) -&gt; Router<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> (Middleware...) -> Router",
            "key.typeusr" : "$Sy5Vapor6Router_pAA10Middleware_pd_tcD",
            "key.usr" : "s:5Vapor6RouterPAAE7groupedyAaB_pAA10Middleware_pd_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func group(_ middleware: <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>..., configure: (<Type usr=\"s:5Vapor6RouterP\">Router<\/Type>) -&gt; ())<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1035
              }
            ],
            "key.bodylength" : 60,
            "key.bodyoffset" : 1110,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a new `Router` wrapped in the supplied variadic `Middleware`.\n\n    router.group(FooMiddleware(), BarMiddleware()) { group in\n        \/\/ all routes added will be wrapped by Foo & Bar middleware\n        group.get(...) { ... }\n    }\n\n- parameters:\n    - middleware: Variadic `Middleware` to wrap `Router` in.\n    - configure: Closure to configure the newly created `Router`.",
            "key.doc.declaration" : "public func group(_ middleware: Middleware..., configure: (Router) -> ())",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"27\" column=\"17\"><Name>group(_:configure:)<\/Name><USR>s:5Vapor6RouterPAAE5group_9configureyAA10Middleware_pd_yAaB_pXEtF<\/USR><Declaration>public func group(_ middleware: Middleware..., configure: (Router) -&gt; ())<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>Router<\/codeVoice> wrapped in the supplied variadic <codeVoice>Middleware<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>middleware<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Variadic <codeVoice>Middleware<\/codeVoice> to wrap <codeVoice>Router<\/codeVoice> in.<\/Para><\/Discussion><\/Parameter><Parameter><Name>configure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Closure to configure the newly created <codeVoice>Router<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.group(FooMiddleware(), BarMiddleware()) { group in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ all routes added will be wrapped by Foo & Bar middleware]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    group.get(...) { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 27,
            "key.doc.name" : "group(_:configure:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Variadic `Middleware` to wrap `Router` in."
                  }
                ],
                "name" : "middleware"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Closure to configure the newly created `Router`."
                  }
                ],
                "name" : "configure"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 454,
            "key.docoffset" : 577,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>group<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>middleware<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 129,
            "key.name" : "group(_:configure:)",
            "key.namelength" : 61,
            "key.nameoffset" : 1047,
            "key.offset" : 1042,
            "key.parsed_declaration" : "public func group(_ middleware: Middleware..., configure: (Router) -> ())",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 27,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configurey3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKc_yAaB_pXEtF\">group(_: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;, configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF\">group&lt;M&gt;(_: M.Type, configure: (Router) throws -&gt; ()) rethrows where M : Middleware<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureySayAA10Middleware_pG_yAaB_pXEtF\">group(_: [Middleware], configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configurey7Routing27PathComponentsRepresentable_pd_yAaB_pXEtF\">group(_: PathComponentsRepresentable..., configure: (Router) -&gt; ())<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> (Middleware..., (Router) -> ()) -> ()",
            "key.typeusr" : "$S_9configurey5Vapor10Middleware_pd_yAB6Router_pXEtcD",
            "key.usr" : "s:5Vapor6RouterPAAE5group_9configureyAA10Middleware_pd_yAaB_pXEtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func grouped(_ middleware: [<Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>]) -&gt; <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1603
              }
            ],
            "key.bodylength" : 148,
            "key.bodyoffset" : 1662,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a new `Router` wrapped in the supplied array of `Middleware`.\n\n    let group = router.grouped([FooMiddleware(), BarMiddleware()])\n    \/\/ all routes added will be wrapped by Foo & Bar middleware\n    group.get(...) { ... }\n\n- parameters:\n    - middleware: Array of `[Middleware]` to wrap `Router` in.\n- returns: New `Router` wrapped in `Middleware`.",
            "key.doc.declaration" : "public func grouped(_ middleware: [Middleware]) -> Router",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"40\" column=\"17\"><Name>grouped(_:)<\/Name><USR>s:5Vapor6RouterPAAE7groupedyAaB_pSayAA10Middleware_pGF<\/USR><Declaration>public func grouped(_ middleware: [Middleware]) -&gt; Router<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>Router<\/codeVoice> wrapped in the supplied array of <codeVoice>Middleware<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>middleware<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Array of <codeVoice>[Middleware]<\/codeVoice> to wrap <codeVoice>Router<\/codeVoice> in.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>New <codeVoice>Router<\/codeVoice> wrapped in <codeVoice>Middleware<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let group = router.grouped([FooMiddleware(), BarMiddleware()])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ all routes added will be wrapped by Foo & Bar middleware]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[group.get(...) { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 40,
            "key.doc.name" : "grouped(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Array of `[Middleware]` to wrap `Router` in."
                  }
                ],
                "name" : "middleware"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "New `Router` wrapped in `Middleware`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 422,
            "key.docoffset" : 1177,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>grouped<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>middleware<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 201,
            "key.name" : "grouped(_:)",
            "key.namelength" : 35,
            "key.nameoffset" : 1615,
            "key.offset" : 1610,
            "key.parsed_declaration" : "public func grouped(_ middleware: [Middleware]) -> Router",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 40,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_p3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKcF\">grouped(_: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF\">grouped&lt;M&gt;(_: M.Type) -&gt; Router where M : Middleware<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pAA10Middleware_pd_tF\">grouped(_: Middleware...) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_p7Routing27PathComponentsRepresentable_pd_tF\">grouped(_: PathComponentsRepresentable...) -&gt; Router<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> ([Middleware]) -> Router",
            "key.typeusr" : "$Sy5Vapor6Router_pSayAA10Middleware_pGcD",
            "key.usr" : "s:5Vapor6RouterPAAE7groupedyAaB_pSayAA10Middleware_pGF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func group(_ middleware: [<Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>], configure: (<Type usr=\"s:5Vapor6RouterP\">Router<\/Type>) -&gt; ())<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2279
              }
            ],
            "key.bodylength" : 76,
            "key.bodyoffset" : 2353,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a new `Router` wrapped in the supplied array of `Middleware`.\n\n    router.group([FooMiddleware(), BarMiddleware()]) { group in\n        \/\/ all routes added will be wrapped by Foo & Bar middleware\n        group.get(...) { ... }\n    }\n\n- parameters:\n    - middleware: Array of `[Middleware]` to wrap `Router` in.\n    - configure: Closure to configure the newly created `Router`.",
            "key.doc.declaration" : "public func group(_ middleware: [Middleware], configure: (Router) -> ())",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"57\" column=\"17\"><Name>group(_:configure:)<\/Name><USR>s:5Vapor6RouterPAAE5group_9configureySayAA10Middleware_pG_yAaB_pXEtF<\/USR><Declaration>public func group(_ middleware: [Middleware], configure: (Router) -&gt; ())<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>Router<\/codeVoice> wrapped in the supplied array of <codeVoice>Middleware<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>middleware<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Array of <codeVoice>[Middleware]<\/codeVoice> to wrap <codeVoice>Router<\/codeVoice> in.<\/Para><\/Discussion><\/Parameter><Parameter><Name>configure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Closure to configure the newly created <codeVoice>Router<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.group([FooMiddleware(), BarMiddleware()]) { group in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ all routes added will be wrapped by Foo & Bar middleware]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    group.get(...) { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 57,
            "key.doc.name" : "group(_:configure:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Array of `[Middleware]` to wrap `Router` in."
                  }
                ],
                "name" : "middleware"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Closure to configure the newly created `Router`."
                  }
                ],
                "name" : "configure"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 458,
            "key.docoffset" : 1817,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>group<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>middleware<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 144,
            "key.name" : "group(_:configure:)",
            "key.namelength" : 60,
            "key.nameoffset" : 2291,
            "key.offset" : 2286,
            "key.parsed_declaration" : "public func group(_ middleware: [Middleware], configure: (Router) -> ())",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 57,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configurey3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKc_yAaB_pXEtF\">group(_: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;, configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF\">group&lt;M&gt;(_: M.Type, configure: (Router) throws -&gt; ()) rethrows where M : Middleware<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureyAA10Middleware_pd_yAaB_pXEtF\">group(_: Middleware..., configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configurey7Routing27PathComponentsRepresentable_pd_yAaB_pXEtF\">group(_: PathComponentsRepresentable..., configure: (Router) -&gt; ())<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> ([Middleware], (Router) -> ()) -> ()",
            "key.typeusr" : "$S_9configureySay5Vapor10Middleware_pG_yAB6Router_pXEtcD",
            "key.usr" : "s:5Vapor6RouterPAAE5group_9configureySayAA10Middleware_pG_yAaB_pXEtF"
          }
        ],
        "key.typename" : "Router.Protocol",
        "key.typeusr" : "$S5Vapor6Router_pmD",
        "key.usr" : "s:5Vapor6RouterP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 2437
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private final class MiddlewareGroup : <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 2491
          },
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 2483
          }
        ],
        "key.bodylength" : 757,
        "key.bodyoffset" : 2528,
        "key.doc.column" : 21,
        "key.doc.comment" : "Middleware grouping route.",
        "key.doc.declaration" : "private final class MiddlewareGroup : Router",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"65\" column=\"21\"><Name>MiddlewareGroup<\/Name><USR>s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC<\/USR><Declaration>private final class MiddlewareGroup : Router<\/Declaration><CommentParts><Abstract><Para>Middleware grouping route.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 65,
        "key.doc.name" : "MiddlewareGroup",
        "key.doc.type" : "Class",
        "key.doclength" : 31,
        "key.docoffset" : 2452,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 2520
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>MiddlewareGroup<\/decl.name> : <ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Router"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 789,
        "key.name" : "MiddlewareGroup",
        "key.namelength" : 15,
        "key.nameoffset" : 2503,
        "key.offset" : 2497,
        "key.parsed_declaration" : "private final class MiddlewareGroup: Router",
        "key.parsed_scope.end" : 95,
        "key.parsed_scope.start" : 65,
        "key.runtime_name" : "_TtC4main15MiddlewareGroup",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>var routes: [<Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;] { get }<\/Declaration>",
            "key.bodylength" : 32,
            "key.bodyoffset" : 2587,
            "key.doc.column" : 9,
            "key.doc.comment" : "See `Router`.",
            "key.doc.declaration" : "var routes: [Route<Responder>] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"67\" column=\"9\"><Name>routes<\/Name><USR>s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC6routesSay7Routing5RouteCyAA9Responder_pGGvp<\/USR><Declaration>var routes: [Route&lt;Responder&gt;] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 67,
            "key.doc.name" : "routes",
            "key.doc.type" : "Other",
            "key.doclength" : 18,
            "key.docoffset" : 2533,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>routes<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.name" : "routes",
            "key.namelength" : 6,
            "key.nameoffset" : 2559,
            "key.offset" : 2555,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP6routesSay7Routing5RouteCyAA9Responder_pGGvp"
              }
            ],
            "key.parsed_declaration" : "var routes: [Route<Responder>]",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 67,
            "key.typename" : "[Route<Responder>]",
            "key.typeusr" : "$SSay7Routing5RouteCy5Vapor9Responder_pGGD",
            "key.usr" : "s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC6routesSay7Routing5RouteCyAA9Responder_pGGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let root: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "Router to cascade to.",
            "key.doc.declaration" : "let root: Router",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"72\" column=\"9\"><Name>root<\/Name><USR>s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC4rootAA6Router_pvp<\/USR><Declaration>let root: Router<\/Declaration><CommentParts><Abstract><Para>Router to cascade to.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 72,
            "key.doc.name" : "root",
            "key.doc.type" : "Other",
            "key.doclength" : 26,
            "key.docoffset" : 2626,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>root<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "root",
            "key.namelength" : 4,
            "key.nameoffset" : 2660,
            "key.offset" : 2656,
            "key.parsed_declaration" : "let root: Router",
            "key.parsed_scope.end" : 72,
            "key.parsed_scope.start" : 72,
            "key.typename" : "Router",
            "key.typeusr" : "$S5Vapor6Router_pD",
            "key.usr" : "s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC4rootAA6Router_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let middleware: [<Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>]<\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "Additional middleware.",
            "key.doc.declaration" : "let middleware: [Middleware]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"75\" column=\"9\"><Name>middleware<\/Name><USR>s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC10middlewareSayAA0B0_pGvp<\/USR><Declaration>let middleware: [Middleware]<\/Declaration><CommentParts><Abstract><Para>Additional middleware.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 75,
            "key.doc.name" : "middleware",
            "key.doc.type" : "Other",
            "key.doclength" : 27,
            "key.docoffset" : 2678,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>middleware<\/decl.name>: <decl.var.type>[<ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "middleware",
            "key.namelength" : 10,
            "key.nameoffset" : 2713,
            "key.offset" : 2709,
            "key.parsed_declaration" : "let middleware: [Middleware]",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 75,
            "key.typename" : "[Middleware]",
            "key.typeusr" : "$SSay5Vapor10Middleware_pGD",
            "key.usr" : "s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC10middlewareSayAA0B0_pGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(root router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type>, middleware: [<Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>])<\/Declaration>",
            "key.bodylength" : 69,
            "key.bodyoffset" : 2837,
            "key.doc.column" : 5,
            "key.doc.comment" : "Creates a new `MiddlewareGroup`.",
            "key.doc.declaration" : "init(root router: Router, middleware: [Middleware])",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"78\" column=\"5\"><Name>init(root:middleware:)<\/Name><USR>s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC4root10middlewareAdA6Router_p_SayAA0B0_pGtcfc<\/USR><Declaration>init(root router: Router, middleware: [Middleware])<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>MiddlewareGroup<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 78,
            "key.doc.name" : "init(root:middleware:)",
            "key.doc.type" : "Function",
            "key.doclength" : 37,
            "key.docoffset" : 2743,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>root<\/decl.var.parameter.argument_label> <decl.var.parameter.name>router<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>middleware<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 123,
            "key.name" : "init(root:middleware:)",
            "key.namelength" : 51,
            "key.nameoffset" : 2784,
            "key.offset" : 2784,
            "key.parsed_declaration" : "init(root router: Router, middleware: [Middleware])",
            "key.parsed_scope.end" : 81,
            "key.parsed_scope.start" : 78,
            "key.substructure" : [

            ],
            "key.typename" : "(MiddlewareGroup.Type) -> (Router, [Middleware]) -> MiddlewareGroup",
            "key.typeusr" : "$S4root10middleware5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLCAC6Router_p_SayAC0D0_pGtcD",
            "key.usr" : "s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC4root10middlewareAdA6Router_p_SayAA0B0_pGtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func register(route: <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 186,
            "key.bodyoffset" : 2975,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `Router`.",
            "key.doc.declaration" : "func register(route: Route<Responder>)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"84\" column=\"10\"><Name>register(route:)<\/Name><USR>s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC8register5routey7Routing5RouteCyAA9Responder_pG_tF<\/USR><Declaration>func register(route: Route&lt;Responder&gt;)<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 84,
            "key.doc.name" : "register(route:)",
            "key.doc.type" : "Function",
            "key.doclength" : 18,
            "key.docoffset" : 2913,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>route<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 227,
            "key.name" : "register(route:)",
            "key.namelength" : 33,
            "key.nameoffset" : 2940,
            "key.offset" : 2935,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP8register5routey7Routing5RouteCyAA9Responder_pG_tF"
              }
            ],
            "key.parsed_declaration" : "func register(route: Route<Responder>)",
            "key.parsed_scope.end" : 89,
            "key.parsed_scope.start" : 84,
            "key.substructure" : [

            ],
            "key.typename" : "(MiddlewareGroup) -> (Route<Responder>) -> ()",
            "key.typeusr" : "$S5routey7Routing5RouteCy5Vapor9Responder_pG_tcD",
            "key.usr" : "s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC8register5routey7Routing5RouteCyAA9Responder_pG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func route(request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>?<\/Declaration>",
            "key.bodylength" : 49,
            "key.bodyoffset" : 3234,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `Router`.",
            "key.doc.declaration" : "func route(request: Request) -> Responder?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift\" line=\"92\" column=\"10\"><Name>route(request:)<\/Name><USR>s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC5route7requestAA9Responder_pSgAA7RequestC_tF<\/USR><Declaration>func route(request: Request) -&gt; Responder?<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 92,
            "key.doc.name" : "route(request:)",
            "key.doc.type" : "Function",
            "key.doclength" : 18,
            "key.docoffset" : 3168,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Middleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>route<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 94,
            "key.name" : "route(request:)",
            "key.namelength" : 23,
            "key.nameoffset" : 3195,
            "key.offset" : 3190,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP5route7requestAA9Responder_pSgAA7RequestC_tF"
              }
            ],
            "key.parsed_declaration" : "func route(request: Request) -> Responder?",
            "key.parsed_scope.end" : 94,
            "key.parsed_scope.start" : 92,
            "key.substructure" : [

            ],
            "key.typename" : "(MiddlewareGroup) -> (Request) -> Responder?",
            "key.typeusr" : "$S7request5Vapor9Responder_pSgAB7RequestC_tcD",
            "key.usr" : "s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC5route7requestAA9Responder_pSgAA7RequestC_tF"
          }
        ],
        "key.typename" : "MiddlewareGroup.Type",
        "key.typeusr" : "$S5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLCmD",
        "key.usr" : "s:5Vapor15MiddlewareGroup33_F0AAB6C0E8A8F72591E3877D11CE907BLLC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2190,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public protocol Router : AnyObject, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 1382,
        "key.bodyoffset" : 18,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Router : AnyObject, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"2\" column=\"17\"><Name>Router<\/Name><USR>s:5Vapor6RouterP<\/USR><Declaration>public protocol Router : AnyObject, Service<\/Declaration><CommentParts><Abstract><Para>Capable of registering <codeVoice>Responder<\/codeVoice> routes and returning appropriate responders for a given request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Router",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Router<\/decl.name> : AnyObject, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1401,
        "key.name" : "Router",
        "key.namelength" : 6,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: Path",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 26
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func grouped(_ path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>...) -&gt; <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 531
              }
            ],
            "key.bodylength" : 86,
            "key.bodyoffset" : 602,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a new `Router` that will automatically prepend the supplied path components.\n\n    let users = router.grouped(\"user\")\n    \/\/ Adding \"user\/auth\/\" route to router.\n    users.get(\"auth\") { ... }\n    \/\/ adding \"user\/profile\/\" route to router\n    users.get(\"profile\") { ... }\n\n- parameters:\n    - path: Group path components separated by commas.\n- returns: Newly created `Router` wrapped in the path.",
            "key.doc.declaration" : "public func grouped(_ path: PathComponentsRepresentable...) -> Router",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift\" line=\"15\" column=\"17\"><Name>grouped(_:)<\/Name><USR>s:5Vapor6RouterPAAE7groupedyAaB_p7Routing27PathComponentsRepresentable_pd_tF<\/USR><Declaration>public func grouped(_ path: PathComponentsRepresentable...) -&gt; Router<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>Router<\/codeVoice> that will automatically prepend the supplied path components.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Group path components separated by commas.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Newly created <codeVoice>Router<\/codeVoice> wrapped in the path.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let users = router.grouped(\"user\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Adding \"user\/auth\/\" route to router.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[users.get(\"auth\") { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ adding \"user\/profile\/\" route to router]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[users.get(\"profile\") { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "grouped(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Group path components separated by commas."
                  }
                ],
                "name" : "path"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Newly created `Router` wrapped in the path."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 485,
            "key.docoffset" : 42,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>grouped<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 151,
            "key.name" : "grouped(_:)",
            "key.namelength" : 47,
            "key.nameoffset" : 543,
            "key.offset" : 538,
            "key.parsed_declaration" : "public func grouped(_ path: PathComponentsRepresentable...) -> Router",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 15,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_p3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKcF\">grouped(_: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pqd__mAA10MiddlewareRd__lF\">grouped&lt;M&gt;(_: M.Type) -&gt; Router where M : Middleware<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pAA10Middleware_pd_tF\">grouped(_: Middleware...) -&gt; Router<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE7groupedyAaB_pSayAA10Middleware_pGF\">grouped(_: [Middleware]) -&gt; Router<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> (PathComponentsRepresentable...) -> Router",
            "key.typeusr" : "$Sy5Vapor6Router_p7Routing27PathComponentsRepresentable_pd_tcD",
            "key.usr" : "s:5Vapor6RouterPAAE7groupedyAaB_p7Routing27PathComponentsRepresentable_pd_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func group(_ path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., configure: (<Type usr=\"s:5Vapor6RouterP\">Router<\/Type>) -&gt; ())<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1222
              }
            ],
            "key.bodylength" : 90,
            "key.bodyoffset" : 1308,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a new `Router` that will automatically prepend the supplied path components.\n\n    router.group(\"user\") { users in\n        \/\/ Adding \"user\/auth\/\" route to router.\n        users.get(\"auth\") { ... }\n        \/\/ adding \"user\/profile\/\" route to router\n        users.get(\"profile\") { ... }\n    }\n\n- parameters:\n    - path: Group path components separated by commas.\n    - configure: Closure to configure the newly created `Router`.",
            "key.doc.declaration" : "public func group(_ path: PathComponentsRepresentable..., configure: (Router) -> ())",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift\" line=\"31\" column=\"17\"><Name>group(_:configure:)<\/Name><USR>s:5Vapor6RouterPAAE5group_9configurey7Routing27PathComponentsRepresentable_pd_yAaB_pXEtF<\/USR><Declaration>public func group(_ path: PathComponentsRepresentable..., configure: (Router) -&gt; ())<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>Router<\/codeVoice> that will automatically prepend the supplied path components.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Group path components separated by commas.<\/Para><\/Discussion><\/Parameter><Parameter><Name>configure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Closure to configure the newly created <codeVoice>Router<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.group(\"user\") { users in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ Adding \"user\/auth\/\" route to router.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    users.get(\"auth\") { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ adding \"user\/profile\/\" route to router]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    users.get(\"profile\") { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 31,
            "key.doc.name" : "group(_:configure:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Group path components separated by commas."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Closure to configure the newly created `Router`."
                  }
                ],
                "name" : "configure"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 523,
            "key.docoffset" : 695,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>group<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 170,
            "key.name" : "group(_:configure:)",
            "key.namelength" : 72,
            "key.nameoffset" : 1234,
            "key.offset" : 1229,
            "key.parsed_declaration" : "public func group(_ path: PathComponentsRepresentable..., configure: (Router) -> ())",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 31,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configurey3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKc_yAaB_pXEtF\">group(_: @escaping (Request, Responder) throws -&gt; Future&lt;Response&gt;, configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureyqd__m_yAaB_pKXEtKAA10MiddlewareRd__lF\">group&lt;M&gt;(_: M.Type, configure: (Router) throws -&gt; ()) rethrows where M : Middleware<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureyAA10Middleware_pd_yAaB_pXEtF\">group(_: Middleware..., configure: (Router) -&gt; ())<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE5group_9configureySayAA10Middleware_pG_yAaB_pXEtF\">group(_: [Middleware], configure: (Router) -&gt; ())<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> (PathComponentsRepresentable..., (Router) -> ()) -> ()",
            "key.typeusr" : "$S_9configurey7Routing27PathComponentsRepresentable_pd_y5Vapor6Router_pXEtcD",
            "key.usr" : "s:5Vapor6RouterPAAE5group_9configurey7Routing27PathComponentsRepresentable_pd_yAaB_pXEtF"
          }
        ],
        "key.typename" : "Router.Protocol",
        "key.typeusr" : "$S5Vapor6Router_pmD",
        "key.usr" : "s:5Vapor6RouterP"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1406
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private final class PathGroup : <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 1447
          },
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 1439
          }
        ],
        "key.bodylength" : 710,
        "key.bodyoffset" : 1478,
        "key.doc.column" : 21,
        "key.doc.comment" : "Groups routes",
        "key.doc.declaration" : "private final class PathGroup : Router",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift\" line=\"39\" column=\"21\"><Name>PathGroup<\/Name><USR>s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC<\/USR><Declaration>private final class PathGroup : Router<\/Declaration><CommentParts><Abstract><Para>Groups routes<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 39,
        "key.doc.name" : "PathGroup",
        "key.doc.type" : "Class",
        "key.doclength" : 18,
        "key.docoffset" : 1421,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 1470
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>PathGroup<\/decl.name> : <ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Router"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 736,
        "key.name" : "PathGroup",
        "key.namelength" : 9,
        "key.nameoffset" : 1459,
        "key.offset" : 1453,
        "key.parsed_declaration" : "private final class PathGroup: Router",
        "key.parsed_scope.end" : 68,
        "key.parsed_scope.start" : 39,
        "key.runtime_name" : "_TtC4main9PathGroup",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>var routes: [<Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;] { get }<\/Declaration>",
            "key.bodylength" : 32,
            "key.bodyoffset" : 1537,
            "key.doc.column" : 9,
            "key.doc.comment" : "See `Router`.",
            "key.doc.declaration" : "var routes: [Route<Responder>] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift\" line=\"41\" column=\"9\"><Name>routes<\/Name><USR>s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC6routesSay7Routing5RouteCyAA9Responder_pGGvp<\/USR><Declaration>var routes: [Route&lt;Responder&gt;] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 41,
            "key.doc.name" : "routes",
            "key.doc.type" : "Other",
            "key.doclength" : 18,
            "key.docoffset" : 1483,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>routes<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 65,
            "key.name" : "routes",
            "key.namelength" : 6,
            "key.nameoffset" : 1509,
            "key.offset" : 1505,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP6routesSay7Routing5RouteCyAA9Responder_pGGvp"
              }
            ],
            "key.parsed_declaration" : "var routes: [Route<Responder>]",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 41,
            "key.typename" : "[Route<Responder>]",
            "key.typeusr" : "$SSay7Routing5RouteCy5Vapor9Responder_pGGD",
            "key.usr" : "s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC6routesSay7Routing5RouteCyAA9Responder_pGGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let root: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type><\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "Router to cascade to.",
            "key.doc.declaration" : "let root: Router",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift\" line=\"46\" column=\"9\"><Name>root<\/Name><USR>s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC4rootAA6Router_pvp<\/USR><Declaration>let root: Router<\/Declaration><CommentParts><Abstract><Para>Router to cascade to.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 46,
            "key.doc.name" : "root",
            "key.doc.type" : "Other",
            "key.doclength" : 26,
            "key.docoffset" : 1576,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>root<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "root",
            "key.namelength" : 4,
            "key.nameoffset" : 1610,
            "key.offset" : 1606,
            "key.parsed_declaration" : "let root: Router",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 46,
            "key.typename" : "Router",
            "key.typeusr" : "$S5Vapor6Router_pD",
            "key.usr" : "s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC4rootAA6Router_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let components: [<Type usr=\"s:7Routing13PathComponentO\">PathComponent<\/Type>]<\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "Additional components.",
            "key.doc.declaration" : "let components: [PathComponent]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift\" line=\"49\" column=\"9\"><Name>components<\/Name><USR>s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC10componentsSay7Routing0B9ComponentOGvp<\/USR><Declaration>let components: [PathComponent]<\/Declaration><CommentParts><Abstract><Para>Additional components.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 49,
            "key.doc.name" : "components",
            "key.doc.type" : "Other",
            "key.doclength" : 27,
            "key.docoffset" : 1628,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>components<\/decl.name>: <decl.var.type>[<ref.enum usr=\"s:7Routing13PathComponentO\">PathComponent<\/ref.enum>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.name" : "components",
            "key.namelength" : 10,
            "key.nameoffset" : 1663,
            "key.offset" : 1659,
            "key.parsed_declaration" : "let components: [PathComponent]",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.typename" : "[PathComponent]",
            "key.typeusr" : "$SSay7Routing13PathComponentOGD",
            "key.usr" : "s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC10componentsSay7Routing0B9ComponentOGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(root router: <Type usr=\"s:5Vapor6RouterP\">Router<\/Type>, components: [<Type usr=\"s:7Routing13PathComponentO\">PathComponent<\/Type>])<\/Declaration>",
            "key.bodylength" : 69,
            "key.bodyoffset" : 1791,
            "key.doc.column" : 5,
            "key.doc.comment" : "Creates a new `PathGroup`.",
            "key.doc.declaration" : "init(root router: Router, components: [PathComponent])",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift\" line=\"52\" column=\"5\"><Name>init(root:components:)<\/Name><USR>s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC4root10componentsAdA6Router_p_Say7Routing0B9ComponentOGtcfc<\/USR><Declaration>init(root router: Router, components: [PathComponent])<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>PathGroup<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 52,
            "key.doc.name" : "init(root:components:)",
            "key.doc.type" : "Function",
            "key.doclength" : 31,
            "key.docoffset" : 1700,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>root<\/decl.var.parameter.argument_label> <decl.var.parameter.name>router<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor6RouterP\">Router<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>components<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.enum usr=\"s:7Routing13PathComponentO\">PathComponent<\/ref.enum>]<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 126,
            "key.name" : "init(root:components:)",
            "key.namelength" : 54,
            "key.nameoffset" : 1735,
            "key.offset" : 1735,
            "key.parsed_declaration" : "init(root router: Router, components: [PathComponent])",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 52,
            "key.substructure" : [

            ],
            "key.typename" : "(PathGroup.Type) -> (Router, [PathComponent]) -> PathGroup",
            "key.typeusr" : "$S4root10components5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLCAC6Router_p_Say7Routing0D9ComponentOGtcD",
            "key.usr" : "s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC4root10componentsAdA6Router_p_Say7Routing0B9ComponentOGtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func register(route: <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;)<\/Declaration>",
            "key.bodylength" : 135,
            "key.bodyoffset" : 1929,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `Router`.",
            "key.doc.declaration" : "func register(route: Route<Responder>)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift\" line=\"58\" column=\"10\"><Name>register(route:)<\/Name><USR>s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC8register5routey7Routing5RouteCyAA9Responder_pG_tF<\/USR><Declaration>func register(route: Route&lt;Responder&gt;)<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 58,
            "key.doc.name" : "register(route:)",
            "key.doc.type" : "Function",
            "key.doclength" : 18,
            "key.docoffset" : 1867,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>route<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 176,
            "key.name" : "register(route:)",
            "key.namelength" : 33,
            "key.nameoffset" : 1894,
            "key.offset" : 1889,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP8register5routey7Routing5RouteCyAA9Responder_pG_tF"
              }
            ],
            "key.parsed_declaration" : "func register(route: Route<Responder>)",
            "key.parsed_scope.end" : 62,
            "key.parsed_scope.start" : 58,
            "key.substructure" : [

            ],
            "key.typename" : "(PathGroup) -> (Route<Responder>) -> ()",
            "key.typeusr" : "$S5routey7Routing5RouteCy5Vapor9Responder_pG_tcD",
            "key.usr" : "s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC8register5routey7Routing5RouteCyAA9Responder_pG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func route(request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>?<\/Declaration>",
            "key.bodylength" : 49,
            "key.bodyoffset" : 2137,
            "key.doc.column" : 10,
            "key.doc.comment" : "See `Router`.",
            "key.doc.declaration" : "func route(request: Request) -> Responder?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift\" line=\"65\" column=\"10\"><Name>route(request:)<\/Name><USR>s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC5route7requestAA9Responder_pSgAA7RequestC_tF<\/USR><Declaration>func route(request: Request) -&gt; Responder?<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Router<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 65,
            "key.doc.name" : "route(request:)",
            "key.doc.type" : "Function",
            "key.doclength" : 18,
            "key.docoffset" : 2071,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router+Path.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>route<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 94,
            "key.name" : "route(request:)",
            "key.namelength" : 23,
            "key.nameoffset" : 2098,
            "key.offset" : 2093,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6RouterP5route7requestAA9Responder_pSgAA7RequestC_tF"
              }
            ],
            "key.parsed_declaration" : "func route(request: Request) -> Responder?",
            "key.parsed_scope.end" : 67,
            "key.parsed_scope.start" : 65,
            "key.substructure" : [

            ],
            "key.typename" : "(PathGroup) -> (Request) -> Responder?",
            "key.typeusr" : "$S7request5Vapor9Responder_pSgAB7RequestC_tcD",
            "key.usr" : "s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC5route7requestAA9Responder_pSgAA7RequestC_tF"
          }
        ],
        "key.typename" : "PathGroup.Type",
        "key.typeusr" : "$S5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLCmD",
        "key.usr" : "s:5Vapor9PathGroup33_CE6692E8214EFE1B927BAF8FE4BA7C6FLLC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 711,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Router : AnyObject, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 104
          }
        ],
        "key.bodylength" : 565,
        "key.bodyoffset" : 144,
        "key.doc.column" : 17,
        "key.doc.comment" : "Capable of registering `Responder` routes and returning appropriate responders for a given request.",
        "key.doc.declaration" : "public protocol Router : AnyObject, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"2\" column=\"17\"><Name>Router<\/Name><USR>s:5Vapor6RouterP<\/USR><Declaration>public protocol Router : AnyObject, Service<\/Declaration><CommentParts><Abstract><Para>Capable of registering <codeVoice>Responder<\/codeVoice> routes and returning appropriate responders for a given request.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Router",
        "key.doc.type" : "Class",
        "key.doclength" : 104,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 5,
            "key.offset" : 128
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 135
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Router<\/decl.name> : AnyObject, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "class"
          },
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 599,
        "key.name" : "Router",
        "key.namelength" : 6,
        "key.nameoffset" : 120,
        "key.offset" : 111,
        "key.parsed_declaration" : "public protocol Router: class, Service",
        "key.parsed_scope.end" : 18,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main6Router_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var routes: [<Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;] { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 252,
            "key.doc.column" : 9,
            "key.doc.comment" : "An array of `Route`s that have been registered to this router.",
            "key.doc.declaration" : "var routes: [Route<Responder>] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"4\" column=\"9\"><Name>routes<\/Name><USR>s:5Vapor6RouterP6routesSay7Routing5RouteCyAA9Responder_pGGvp<\/USR><Declaration>var routes: [Route&lt;Responder&gt;] { get }<\/Declaration><CommentParts><Abstract><Para>An array of <codeVoice>Route<\/codeVoice>s that have been registered to this router.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "routes",
            "key.doc.type" : "Other",
            "key.doclength" : 67,
            "key.docoffset" : 149,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>routes<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 38,
            "key.name" : "routes",
            "key.namelength" : 6,
            "key.nameoffset" : 224,
            "key.offset" : 220,
            "key.parsed_declaration" : "var routes: [Route<Responder>]",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "[Route<Responder>]",
            "key.typeusr" : "$SSay7Routing5RouteCy5Vapor9Responder_pGGD",
            "key.usr" : "s:5Vapor6RouterP6routesSay7Routing5RouteCyAA9Responder_pGGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func register(route: <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>&gt;)<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Registers a new `Route` to this router.\n\n- parameters:\n    - route: New `Route` to register.",
            "key.doc.declaration" : "func register(route: Route<Responder>)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"10\" column=\"10\"><Name>register(route:)<\/Name><USR>s:5Vapor6RouterP8register5routey7Routing5RouteCyAA9Responder_pG_tF<\/USR><Declaration>func register(route: Route&lt;Responder&gt;)<\/Declaration><CommentParts><Abstract><Para>Registers a new <codeVoice>Route<\/codeVoice> to this router.<\/Para><\/Abstract><Parameters><Parameter><Name>route<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>New <codeVoice>Route<\/codeVoice> to register.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 10,
            "key.doc.name" : "register(route:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "New `Route` to register."
                  }
                ],
                "name" : "route"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 120,
            "key.docoffset" : 264,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>route<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 38,
            "key.name" : "register(route:)",
            "key.namelength" : 33,
            "key.nameoffset" : 393,
            "key.offset" : 388,
            "key.parsed_declaration" : "func register(route: Route<Responder>)",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor6RouterPAAE8register10collectionyAA15RouteCollection_p_tKF\">register(collection:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> (Route<Responder>) -> ()",
            "key.typeusr" : "$S5routey7Routing5RouteCy5Vapor9Responder_pG_tcD",
            "key.usr" : "s:5Vapor6RouterP8register5routey7Routing5RouteCyAA9Responder_pG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func route(request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>?<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Returns the appropriate `Responder` for a given request, or `nil` if none was found.\n\n- parameters:\n    - request: `Request` to route.\n- returns: Matching `Responder` or `nil` if none was found.",
            "key.doc.declaration" : "func route(request: Request) -> Responder?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift\" line=\"17\" column=\"10\"><Name>route(request:)<\/Name><USR>s:5Vapor6RouterP5route7requestAA9Responder_pSgAA7RequestC_tF<\/USR><Declaration>func route(request: Request) -&gt; Responder?<\/Declaration><CommentParts><Abstract><Para>Returns the appropriate <codeVoice>Responder<\/codeVoice> for a given request, or <codeVoice>nil<\/codeVoice> if none was found.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Request<\/codeVoice> to route.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Matching <codeVoice>Responder<\/codeVoice> or <codeVoice>nil<\/codeVoice> if none was found.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 17,
            "key.doc.name" : "route(request:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Request` to route."
                  }
                ],
                "name" : "request"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Matching `Responder` or `nil` if none was found."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 230,
            "key.docoffset" : 432,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Routing\/Router.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>route<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>request<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 42,
            "key.name" : "route(request:)",
            "key.namelength" : 23,
            "key.nameoffset" : 671,
            "key.offset" : 666,
            "key.parsed_declaration" : "func route(request: Request) -> Responder?",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Router> (Self) -> (Request) -> Responder?",
            "key.typeusr" : "$S7request5Vapor9Responder_pSgAB7RequestC_tcD",
            "key.usr" : "s:5Vapor6RouterP5route7requestAA9Responder_pSgAA7RequestC_tF"
          }
        ],
        "key.typename" : "Router.Protocol",
        "key.typeusr" : "$S5Vapor6Router_pmD",
        "key.usr" : "s:5Vapor6RouterP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 6453,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class NIOServer : <Type usr=\"s:5Vapor6ServerP\">Server<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 90
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 83
          }
        ],
        "key.bodylength" : 4902,
        "key.bodyoffset" : 134,
        "key.doc.column" : 20,
        "key.doc.comment" : "Vapor's default `Server` implementation. Built on SwiftNIO-based `HTTPServer`.",
        "key.doc.declaration" : "public final class NIOServer : Server, ServiceType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift\" line=\"2\" column=\"20\"><Name>NIOServer<\/Name><USR>s:5Vapor9NIOServerC<\/USR><Declaration>public final class NIOServer : Server, ServiceType<\/Declaration><CommentParts><Abstract><Para>Vapor’s default <codeVoice>Server<\/codeVoice> implementation. Built on SwiftNIO-based <codeVoice>HTTPServer<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "NIOServer",
        "key.doc.type" : "Class",
        "key.doclength" : 83,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 6,
            "key.offset" : 113
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 121
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>NIOServer<\/decl.name> : <ref.protocol usr=\"s:5Vapor6ServerP\">Server<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Server"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 4941,
        "key.name" : "NIOServer",
        "key.namelength" : 9,
        "key.nameoffset" : 102,
        "key.offset" : 96,
        "key.parsed_declaration" : "public final class NIOServer: Server, ServiceType",
        "key.parsed_scope.end" : 119,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtC4main9NIOServer",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 166
              }
            ],
            "key.bodylength" : 22,
            "key.bodyoffset" : 213,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static var serviceSupports: [Any.Type] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift\" line=\"4\" column=\"23\"><Name>serviceSupports<\/Name><USR>s:5Vapor9NIOServerC15serviceSupportsSayypXpGvpZ<\/USR><Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "serviceSupports",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 139,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>serviceSupports<\/decl.name>: <decl.var.type>[Any.Type]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 63,
            "key.name" : "serviceSupports",
            "key.namelength" : 15,
            "key.nameoffset" : 184,
            "key.offset" : 173,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP15serviceSupportsSayypXpGvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var serviceSupports: [Any.Type]",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "[Any.Type]",
            "key.typeusr" : "$SSayypXpGD",
            "key.usr" : "s:5Vapor9NIOServerC15serviceSupportsSayypXpGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor9NIOServerC\">NIOServer<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 269
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 347,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for container: Container) throws -> NIOServer",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift\" line=\"7\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor9NIOServerC11makeService3forAC0D09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for container: Container) throws -&gt; NIOServer<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 7,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 242,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor9NIOServerC\">NIOServer<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 154,
            "key.name" : "makeService(for:)",
            "key.namelength" : 37,
            "key.nameoffset" : 288,
            "key.offset" : 276,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for container: Container) throws -> NIOServer",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 7,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOServer.Type) -> (Container) throws -> NIOServer",
            "key.typeusr" : "$S3for5Vapor9NIOServerC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor9NIOServerC11makeService3forAC0D09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let config: <Type usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 482
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Chosen configuration for this server.",
            "key.doc.declaration" : "public let config: NIOServerConfig",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift\" line=\"12\" column=\"16\"><Name>config<\/Name><USR>s:5Vapor9NIOServerC6configAA0B6ConfigVvp<\/USR><Declaration>public let config: NIOServerConfig<\/Declaration><CommentParts><Abstract><Para>Chosen configuration for this server.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 12,
            "key.doc.name" : "config",
            "key.doc.type" : "Other",
            "key.doclength" : 42,
            "key.docoffset" : 436,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>config<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.name" : "config",
            "key.namelength" : 6,
            "key.nameoffset" : 493,
            "key.offset" : 489,
            "key.parsed_declaration" : "public let config: NIOServerConfig",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "NIOServerConfig",
            "key.typeusr" : "$S5Vapor15NIOServerConfigVD",
            "key.usr" : "s:5Vapor9NIOServerC6configAA0B6ConfigVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 568
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Container for setting on event loops.",
            "key.doc.declaration" : "public let container: Container",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift\" line=\"15\" column=\"16\"><Name>container<\/Name><USR>s:5Vapor9NIOServerC9container7Service9Container_pvp<\/USR><Declaration>public let container: Container<\/Declaration><CommentParts><Abstract><Para>Container for setting on event loops.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 15,
            "key.doc.name" : "container",
            "key.doc.type" : "Other",
            "key.doclength" : 42,
            "key.docoffset" : 522,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "container",
            "key.namelength" : 9,
            "key.nameoffset" : 579,
            "key.offset" : 575,
            "key.parsed_declaration" : "public let container: Container",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.typename" : "Container",
            "key.typeusr" : "$S7Service9Container_pD",
            "key.usr" : "s:5Vapor9NIOServerC9container7Service9Container_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private var currentWorker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 655
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Hold the current worker. Used for deinit.",
            "key.doc.declaration" : "private var currentWorker: Worker?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift\" line=\"18\" column=\"17\"><Name>currentWorker<\/Name><USR>s:5Vapor9NIOServerC13currentWorker33_E242385C1D9FE2F70B1076263AFE120CLL3NIO14EventLoopGroup_pSgvp<\/USR><Declaration>private var currentWorker: Worker?<\/Declaration><CommentParts><Abstract><Para>Hold the current worker. Used for deinit.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 18,
            "key.doc.name" : "currentWorker",
            "key.doc.type" : "Other",
            "key.doclength" : 46,
            "key.docoffset" : 605,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>currentWorker<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.name" : "currentWorker",
            "key.namelength" : 13,
            "key.nameoffset" : 667,
            "key.offset" : 663,
            "key.parsed_declaration" : "private var currentWorker: Worker?",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "EventLoopGroup?",
            "key.typeusr" : "$S3NIO14EventLoopGroup_pSgD",
            "key.usr" : "s:5Vapor9NIOServerC13currentWorker33_E242385C1D9FE2F70B1076263AFE120CLL3NIO14EventLoopGroup_pSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(config: <Type usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/Type>, container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 943
              }
            ],
            "key.bodylength" : 69,
            "key.bodyoffset" : 1003,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `NIOServer`.\n\n- parameters:\n    - config: Server preferences such as hostname, port, max body size, etc.\n    - container: Root service-container to use for all event loops the server will create.",
            "key.doc.declaration" : "public init(config: NIOServerConfig, container: Container)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift\" line=\"25\" column=\"12\"><Name>init(config:container:)<\/Name><USR>s:5Vapor9NIOServerC6config9containerAcA0B6ConfigV_7Service9Container_ptcfc<\/USR><Declaration>public init(config: NIOServerConfig, container: Container)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>NIOServer<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>config<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Server preferences such as hostname, port, max body size, etc.<\/Para><\/Discussion><\/Parameter><Parameter><Name>container<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Root service-container to use for all event loops the server will create.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "init(config:container:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Server preferences such as hostname, port, max body size, etc."
                  }
                ],
                "name" : "config"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Root service-container to use for all event loops the server will create."
                  }
                ],
                "name" : "container"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 244,
            "key.docoffset" : 695,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>config<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>container<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 123,
            "key.name" : "init(config:container:)",
            "key.namelength" : 51,
            "key.nameoffset" : 950,
            "key.offset" : 950,
            "key.parsed_declaration" : "public init(config: NIOServerConfig, container: Container)",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 25,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOServer.Type) -> (NIOServerConfig, Container) -> NIOServer",
            "key.typeusr" : "$S6config9container5Vapor9NIOServerCAC0D6ConfigV_7Service9Container_ptcD",
            "key.usr" : "s:5Vapor9NIOServerC6config9containerAcA0B6ConfigV_7Service9Container_ptcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func start(hostname: <Type usr=\"s:SS\">String<\/Type>?, port: <Type usr=\"s:Si\">Int<\/Type>?) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1101
              }
            ],
            "key.bodylength" : 3634,
            "key.bodyoffset" : 1167,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Server`.",
            "key.doc.declaration" : "public func start(hostname: String?, port: Int?) -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift\" line=\"31\" column=\"17\"><Name>start(hostname:port:)<\/Name><USR>s:5Vapor9NIOServerC5start8hostname4port3NIO15EventLoopFutureCyytGSSSg_SiSgtF<\/USR><Declaration>public func start(hostname: String?, port: Int?) -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Server<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 31,
            "key.doc.name" : "start(hostname:port:)",
            "key.doc.type" : "Function",
            "key.doclength" : 18,
            "key.docoffset" : 1079,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>start<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>hostname<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 3694,
            "key.name" : "start(hostname:port:)",
            "key.namelength" : 36,
            "key.nameoffset" : 1113,
            "key.offset" : 1108,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor6ServerP5start8hostname4port3NIO15EventLoopFutureCyytGSSSg_SiSgtF"
              }
            ],
            "key.parsed_declaration" : "public func start(hostname: String?, port: Int?) -> Future<Void>",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 31,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOServer) -> (String?, Int?) -> EventLoopFuture<()>",
            "key.typeusr" : "$S8hostname4port3NIO15EventLoopFutureCyytGSSSg_SiSgtcD",
            "key.usr" : "s:5Vapor9NIOServerC5start8hostname4port3NIO15EventLoopFutureCyytGSSSg_SiSgtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>deinit<\/Declaration>",
            "key.bodylength" : 172,
            "key.bodyoffset" : 4862,
            "key.doc.column" : 5,
            "key.doc.comment" : "Called when the server deinitializes.",
            "key.doc.declaration" : "",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift\" line=\"112\" column=\"5\"><Name>deinit<\/Name><USR>s:5Vapor9NIOServerCfd<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Called when the server deinitializes.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 112,
            "key.doc.name" : "deinit",
            "key.doc.type" : "Function",
            "key.doclength" : 42,
            "key.docoffset" : 4808,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.function.destructor><syntaxtype.keyword>deinit<\/syntaxtype.keyword><\/decl.function.destructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 181,
            "key.name" : "deinit",
            "key.namelength" : 6,
            "key.nameoffset" : 4854,
            "key.offset" : 4854,
            "key.parsed_declaration" : "deinit",
            "key.parsed_scope.end" : 118,
            "key.parsed_scope.start" : 112,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOServer) -> () -> ()",
            "key.typeusr" : "$SyycD",
            "key.usr" : "s:5Vapor9NIOServerCfd"
          }
        ],
        "key.typename" : "NIOServer.Type",
        "key.typeusr" : "$S5Vapor9NIOServerCmD",
        "key.usr" : "s:5Vapor9NIOServerC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Private",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 5042
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private struct NIOServerResponder : <Type usr=\"s:4HTTP19HTTPServerResponderP\">HTTPServerResponder<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 5057
          }
        ],
        "key.bodylength" : 1044,
        "key.bodyoffset" : 5113,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 19,
            "key.offset" : 5092
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>NIOServerResponder<\/decl.name> : <ref.protocol usr=\"s:4HTTP19HTTPServerResponderP\">HTTPServerResponder<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "HTTPServerResponder"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1093,
        "key.name" : "NIOServerResponder",
        "key.namelength" : 18,
        "key.nameoffset" : 5072,
        "key.offset" : 5065,
        "key.parsed_declaration" : "private struct NIOServerResponder: HTTPServerResponder",
        "key.parsed_scope.end" : 144,
        "key.parsed_scope.start" : 123,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let containerCache: <Type usr=\"s:3NIO22ThreadSpecificVariableV\">ThreadSpecificVariable<\/Type>&lt;<Type usr=\"s:5Vapor15ThreadContainer33_E242385C1D9FE2F70B1076263AFE120CLLC\">ThreadContainer<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>containerCache<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO22ThreadSpecificVariableV\">ThreadSpecificVariable<\/ref.struct>&lt;<ref.class usr=\"s:5Vapor15ThreadContainer33_E242385C1D9FE2F70B1076263AFE120CLLC\">ThreadContainer<\/ref.class>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 59,
            "key.name" : "containerCache",
            "key.namelength" : 14,
            "key.nameoffset" : 5122,
            "key.offset" : 5118,
            "key.parsed_declaration" : "let containerCache: ThreadSpecificVariable<ThreadContainer>",
            "key.parsed_scope.end" : 124,
            "key.parsed_scope.start" : 124,
            "key.typename" : "ThreadSpecificVariable<ThreadContainer>",
            "key.typeusr" : "$S3NIO22ThreadSpecificVariableVy5Vapor0B9Container33_E242385C1D9FE2F70B1076263AFE120CLLCGD",
            "key.usr" : "s:5Vapor18NIOServerResponder33_E242385C1D9FE2F70B1076263AFE120CLLV14containerCache3NIO22ThreadSpecificVariableVyAA0N9ContainerACLLCGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>let responderCache: <Type usr=\"s:3NIO22ThreadSpecificVariableV\">ThreadSpecificVariable<\/Type>&lt;<Type usr=\"s:5Vapor15ThreadResponder33_E242385C1D9FE2F70B1076263AFE120CLLC\">ThreadResponder<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>responderCache<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO22ThreadSpecificVariableV\">ThreadSpecificVariable<\/ref.struct>&lt;<ref.class usr=\"s:5Vapor15ThreadResponder33_E242385C1D9FE2F70B1076263AFE120CLLC\">ThreadResponder<\/ref.class>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 59,
            "key.name" : "responderCache",
            "key.namelength" : 14,
            "key.nameoffset" : 5186,
            "key.offset" : 5182,
            "key.parsed_declaration" : "let responderCache: ThreadSpecificVariable<ThreadResponder>",
            "key.parsed_scope.end" : 125,
            "key.parsed_scope.start" : 125,
            "key.typename" : "ThreadSpecificVariable<ThreadResponder>",
            "key.typeusr" : "$S3NIO22ThreadSpecificVariableVy5Vapor0B9Responder33_E242385C1D9FE2F70B1076263AFE120CLLCGD",
            "key.usr" : "s:5Vapor18NIOServerResponder33_E242385C1D9FE2F70B1076263AFE120CLLV14responderCache3NIO22ThreadSpecificVariableVyAA0nC0ACLLCGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>func respond(to http: <Type usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/Type>, on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>) -&gt; <Type usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/Type>&lt;<Type usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/Type>&gt;<\/Declaration>",
            "key.bodylength" : 820,
            "key.bodyoffset" : 5335,
            "key.doc.declaration" : "func respond(to request: HTTP.HTTPRequest, on worker: Worker) -> NIO.EventLoopFuture<HTTP.HTTPResponse>",
            "key.doc.full_as_xml" : "<Function><Name>respond(to:on:)<\/Name><USR>s:4HTTP19HTTPServerResponderP7respond2to2on3NIO15EventLoopFutureCyAA12HTTPResponseVGAA11HTTPRequestV_AG0hI5Group_ptF<\/USR><Declaration>func respond(to request: HTTP.HTTPRequest, on worker: Worker) -&gt; NIO.EventLoopFuture&lt;HTTP.HTTPResponse&gt;<\/Declaration><CommentParts><Abstract><Para>Responds to an incoming <codeVoice>HTTPRequest<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPRequest<\/codeVoice> received by the <codeVoice>HTTPServer<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>worker<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Worker<\/codeVoice> to perform async work on.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Future <codeVoice>HTTPResponse<\/codeVoice> to send back to peer.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.name" : "respond(to:on:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPRequest` received by the `HTTPServer`."
                  }
                ],
                "name" : "request"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`Worker` to perform async work on."
                  }
                ],
                "name" : "worker"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Future `HTTPResponse` to send back to peer."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>http<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO15EventLoopFutureC\">EventLoopFuture<\/ref.class>&lt;<ref.struct usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 909,
            "key.name" : "respond(to:on:)",
            "key.namelength" : 48,
            "key.nameoffset" : 5252,
            "key.offset" : 5247,
            "key.overrides" : [
              {
                "key.usr" : "s:4HTTP19HTTPServerResponderP7respond2to2on3NIO15EventLoopFutureCyAA12HTTPResponseVGAA11HTTPRequestV_AG0hI5Group_ptF"
              }
            ],
            "key.parsed_declaration" : "func respond(to http: HTTPRequest, on worker: Worker) -> EventLoopFuture<HTTPResponse>",
            "key.parsed_scope.end" : 143,
            "key.parsed_scope.start" : 127,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>req<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 47,
                "key.name" : "req",
                "key.namelength" : 3,
                "key.nameoffset" : 5603,
                "key.offset" : 5599,
                "key.parsed_declaration" : "let req = Request(http: http, using: container)",
                "key.parsed_scope.end" : 132,
                "key.parsed_scope.start" : 132,
                "key.typename" : "Request",
                "key.typeusr" : "$S5Vapor7RequestCD",
                "key.usr" : "s:5Vapor18NIOServerResponder33_E242385C1D9FE2F70B1076263AFE120CLLV7respond2to2on3NIO15EventLoopFutureCy4HTTP12HTTPResponseVGAK11HTTPRequestV_AH0oP5Group_ptF3reqL_AA7RequestCvp"
              }
            ],
            "key.typename" : "(NIOServerResponder) -> (HTTPRequest, EventLoopGroup) -> EventLoopFuture<HTTPResponse>",
            "key.typeusr" : "$S2to2on3NIO15EventLoopFutureCy4HTTP12HTTPResponseVGAF11HTTPRequestV_AC0dE5Group_ptcD",
            "key.usr" : "s:4HTTP19HTTPServerResponderP7respond2to2on3NIO15EventLoopFutureCyAA12HTTPResponseVGAA11HTTPRequestV_AG0hI5Group_ptF"
          }
        ],
        "key.typename" : "NIOServerResponder.Type",
        "key.typeusr" : "$S5Vapor18NIOServerResponder33_E242385C1D9FE2F70B1076263AFE120CLLVmD",
        "key.usr" : "s:5Vapor18NIOServerResponder33_E242385C1D9FE2F70B1076263AFE120CLLV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private final class ThreadContainer<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 6168
          },
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 6160
          }
        ],
        "key.bodylength" : 110,
        "key.bodyoffset" : 6197,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ThreadContainer<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 134,
        "key.name" : "ThreadContainer",
        "key.namelength" : 15,
        "key.nameoffset" : 6180,
        "key.offset" : 6174,
        "key.parsed_declaration" : "private final class ThreadContainer",
        "key.parsed_scope.end" : 151,
        "key.parsed_scope.start" : 146,
        "key.runtime_name" : "_TtC4main15ThreadContainer",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>var container: <Type usr=\"s:7Service12SubContainerP\">SubContainer<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>container<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:7Service12SubContainerP\">SubContainer<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.name" : "container",
            "key.namelength" : 9,
            "key.nameoffset" : 6206,
            "key.offset" : 6202,
            "key.parsed_declaration" : "var container: SubContainer",
            "key.parsed_scope.end" : 147,
            "key.parsed_scope.start" : 147,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "SubContainer",
            "key.typeusr" : "$S7Service12SubContainer_pD",
            "key.usr" : "s:5Vapor15ThreadContainer33_E242385C1D9FE2F70B1076263AFE120CLLC9container7Service03SubC0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(container: <Type usr=\"s:7Service12SubContainerP\">SubContainer<\/Type>)<\/Declaration>",
            "key.bodylength" : 40,
            "key.bodyoffset" : 6265,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>container<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service12SubContainerP\">SubContainer<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 72,
            "key.name" : "init(container:)",
            "key.namelength" : 29,
            "key.nameoffset" : 6234,
            "key.offset" : 6234,
            "key.parsed_declaration" : "init(container: SubContainer)",
            "key.parsed_scope.end" : 150,
            "key.parsed_scope.start" : 148,
            "key.substructure" : [

            ],
            "key.typename" : "(ThreadContainer.Type) -> (SubContainer) -> ThreadContainer",
            "key.typeusr" : "$S9container5Vapor15ThreadContainer33_E242385C1D9FE2F70B1076263AFE120CLLC7Service03SubD0_p_tcD",
            "key.usr" : "s:5Vapor15ThreadContainer33_E242385C1D9FE2F70B1076263AFE120CLLC9containerAD7Service03SubC0_p_tcfc"
          }
        ],
        "key.typename" : "ThreadContainer.Type",
        "key.typeusr" : "$S5Vapor15ThreadContainer33_E242385C1D9FE2F70B1076263AFE120CLLCmD",
        "key.usr" : "s:5Vapor15ThreadContainer33_E242385C1D9FE2F70B1076263AFE120CLLC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.annotated_decl" : "<Declaration>private final class ThreadResponder<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 6318
          },
          {
            "key.attribute" : "source.decl.attribute.private",
            "key.length" : 7,
            "key.offset" : 6310
          }
        ],
        "key.bodylength" : 104,
        "key.bodyoffset" : 6347,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ThreadResponder<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 128,
        "key.name" : "ThreadResponder",
        "key.namelength" : 15,
        "key.nameoffset" : 6330,
        "key.offset" : 6324,
        "key.parsed_declaration" : "private final class ThreadResponder",
        "key.parsed_scope.end" : 158,
        "key.parsed_scope.start" : 153,
        "key.runtime_name" : "_TtC4main15ThreadResponder",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>var responder: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>responder<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "responder",
            "key.namelength" : 9,
            "key.nameoffset" : 6356,
            "key.offset" : 6352,
            "key.parsed_declaration" : "var responder: Responder",
            "key.parsed_scope.end" : 154,
            "key.parsed_scope.start" : 154,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "Responder",
            "key.typeusr" : "$S5Vapor9Responder_pD",
            "key.usr" : "s:5Vapor15ThreadResponder33_E242385C1D9FE2F70B1076263AFE120CLLC9responderAA0C0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>init(responder: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>)<\/Declaration>",
            "key.bodylength" : 40,
            "key.bodyoffset" : 6409,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServer.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>responder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 69,
            "key.name" : "init(responder:)",
            "key.namelength" : 26,
            "key.nameoffset" : 6381,
            "key.offset" : 6381,
            "key.parsed_declaration" : "init(responder: Responder)",
            "key.parsed_scope.end" : 157,
            "key.parsed_scope.start" : 155,
            "key.substructure" : [

            ],
            "key.typename" : "(ThreadResponder.Type) -> (Responder) -> ThreadResponder",
            "key.typeusr" : "$S9responder5Vapor15ThreadResponder33_E242385C1D9FE2F70B1076263AFE120CLLCAB0D0_p_tcD",
            "key.usr" : "s:5Vapor15ThreadResponder33_E242385C1D9FE2F70B1076263AFE120CLLC9responderAdA0C0_p_tcfc"
          }
        ],
        "key.typename" : "ThreadResponder.Type",
        "key.typeusr" : "$S5Vapor15ThreadResponder33_E242385C1D9FE2F70B1076263AFE120CLLCmD",
        "key.usr" : "s:5Vapor15ThreadResponder33_E242385C1D9FE2F70B1076263AFE120CLLC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3024,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct NIOServerConfig : <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 144
          }
        ],
        "key.bodylength" : 2834,
        "key.bodyoffset" : 188,
        "key.doc.column" : 15,
        "key.doc.comment" : "Engine server config struct.\n\n    let serverConfig = NIOServerConfig.default(port: 8123)\n    services.register(serverConfig)",
        "key.doc.declaration" : "public struct NIOServerConfig : ServiceType",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"6\" column=\"15\"><Name>NIOServerConfig<\/Name><USR>s:5Vapor15NIOServerConfigV<\/USR><Declaration>public struct NIOServerConfig : ServiceType<\/Declaration><CommentParts><Abstract><Para>Engine server config struct.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let serverConfig = NIOServerConfig.default(port: 8123)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(serverConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 6,
        "key.doc.name" : "NIOServerConfig",
        "key.doc.type" : "Class",
        "key.doclength" : 144,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 175
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>NIOServerConfig<\/decl.name> : <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 2872,
        "key.name" : "NIOServerConfig",
        "key.namelength" : 15,
        "key.nameoffset" : 158,
        "key.offset" : 151,
        "key.parsed_declaration" : "public struct NIOServerConfig: ServiceType",
        "key.parsed_scope.end" : 84,
        "key.parsed_scope.start" : 6,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 220
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 301,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> NIOServerConfig",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"8\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor15NIOServerConfigV11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; NIOServerConfig<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 193,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 106,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 239,
            "key.offset" : 227,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> NIOServerConfig",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOServerConfig.Type) -> (Container) throws -> NIOServerConfig",
            "key.typeusr" : "$S3for5Vapor15NIOServerConfigV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor15NIOServerConfigV11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`(hostname: <Type usr=\"s:SS\">String<\/Type> = default, port: <Type usr=\"s:Si\">Int<\/Type> = default, backlog: <Type usr=\"s:Si\">Int<\/Type> = default, workerCount: <Type usr=\"s:Si\">Int<\/Type> = default, maxBodySize: <Type usr=\"s:Si\">Int<\/Type> = default, reuseAddress: <Type usr=\"s:Sb\">Bool<\/Type> = default, tcpNoDelay: <Type usr=\"s:Sb\">Bool<\/Type> = default) -&gt; <Type usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1225
              }
            ],
            "key.bodylength" : 284,
            "key.bodyoffset" : 1553,
            "key.doc.column" : 24,
            "key.doc.comment" : "Detects `NIOServerConfig` from the environment.\n\n- parameters:\n    - hostname: Socket hostname to bind to. Usually `localhost` or `::1`.\n    - port: Socket port to bind to. Usually `8080` for development and `80` for production.\n    - backlog: OS socket backlog size.\n    - workerCount: Number of `Worker`s to use for responding to incoming requests.\n                   This should be (and is by default) equal to the number of logical cores.\n    - maxBodySize: Requests with bodies larger than this maximum will be rejected.\n                   Streaming bodies, like chunked bodies, ignore this maximum.\n    - reuseAddress: When `true`, can prevent errors re-binding to a socket after successive server restarts.\n    - tcpNoDelay: When `true`, OS will attempt to minimize TCP packet delay.",
            "key.doc.declaration" : "public static func `default`(hostname: String = default, port: Int = default, backlog: Int = default, workerCount: Int = default, maxBodySize: Int = default, reuseAddress: Bool = default, tcpNoDelay: Bool = default) -> NIOServerConfig",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"24\" column=\"24\"><Name>default(hostname:port:backlog:workerCount:maxBodySize:reuseAddress:tcpNoDelay:)<\/Name><USR>s:5Vapor15NIOServerConfigV7default8hostname4port7backlog11workerCount11maxBodySize12reuseAddress10tcpNoDelayACSS_S4iS2btFZ<\/USR><Declaration>public static func `default`(hostname: String = default, port: Int = default, backlog: Int = default, workerCount: Int = default, maxBodySize: Int = default, reuseAddress: Bool = default, tcpNoDelay: Bool = default) -&gt; NIOServerConfig<\/Declaration><CommentParts><Abstract><Para>Detects <codeVoice>NIOServerConfig<\/codeVoice> from the environment.<\/Para><\/Abstract><Parameters><Parameter><Name>hostname<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Socket hostname to bind to. Usually <codeVoice>localhost<\/codeVoice> or <codeVoice>::1<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>port<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Socket port to bind to. Usually <codeVoice>8080<\/codeVoice> for development and <codeVoice>80<\/codeVoice> for production.<\/Para><\/Discussion><\/Parameter><Parameter><Name>backlog<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>OS socket backlog size.<\/Para><\/Discussion><\/Parameter><Parameter><Name>workerCount<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Number of <codeVoice>Worker<\/codeVoice>s to use for responding to incoming requests. This should be (and is by default) equal to the number of logical cores.<\/Para><\/Discussion><\/Parameter><Parameter><Name>maxBodySize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Requests with bodies larger than this maximum will be rejected. Streaming bodies, like chunked bodies, ignore this maximum.<\/Para><\/Discussion><\/Parameter><Parameter><Name>reuseAddress<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>When <codeVoice>true<\/codeVoice>, can prevent errors re-binding to a socket after successive server restarts.<\/Para><\/Discussion><\/Parameter><Parameter><Name>tcpNoDelay<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>When <codeVoice>true<\/codeVoice>, OS will attempt to minimize TCP packet delay.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 24,
            "key.doc.name" : "default(hostname:port:backlog:workerCount:maxBodySize:reuseAddress:tcpNoDelay:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Socket hostname to bind to. Usually `localhost` or `::1`."
                  }
                ],
                "name" : "hostname"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Socket port to bind to. Usually `8080` for development and `80` for production."
                  }
                ],
                "name" : "port"
              },
              {
                "discussion" : [
                  {
                    "Para" : "OS socket backlog size."
                  }
                ],
                "name" : "backlog"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Number of `Worker`s to use for responding to incoming requests. This should be (and is by default) equal to the number of logical cores."
                  }
                ],
                "name" : "workerCount"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Requests with bodies larger than this maximum will be rejected. Streaming bodies, like chunked bodies, ignore this maximum."
                  }
                ],
                "name" : "maxBodySize"
              },
              {
                "discussion" : [
                  {
                    "Para" : "When `true`, can prevent errors re-binding to a socket after successive server restarts."
                  }
                ],
                "name" : "reuseAddress"
              },
              {
                "discussion" : [
                  {
                    "Para" : "When `true`, OS will attempt to minimize TCP packet delay."
                  }
                ],
                "name" : "tcpNoDelay"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 882,
            "key.docoffset" : 339,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>hostname<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>backlog<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workerCount<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxBodySize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reuseAddress<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tcpNoDelay<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor15NIOServerConfigV\">NIOServerConfig<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 606,
            "key.name" : "default(hostname:port:backlog:workerCount:maxBodySize:reuseAddress:tcpNoDelay:)",
            "key.namelength" : 288,
            "key.nameoffset" : 1244,
            "key.offset" : 1232,
            "key.parsed_declaration" : "public static func `default`(\n    hostname: String = \"localhost\",\n    port: Int = 8080,\n    backlog: Int = 256,\n    workerCount: Int = ProcessInfo.processInfo.activeProcessorCount,\n    maxBodySize: Int = 1_000_000,\n    reuseAddress: Bool = true,\n    tcpNoDelay: Bool = true\n) -> NIOServerConfig",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 24,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOServerConfig.Type) -> (String, Int, Int, Int, Int, Bool, Bool) -> NIOServerConfig",
            "key.typeusr" : "$S8hostname4port7backlog11workerCount11maxBodySize12reuseAddress10tcpNoDelay5Vapor15NIOServerConfigVSS_S4iS2btcD",
            "key.usr" : "s:5Vapor15NIOServerConfigV7default8hostname4port7backlog11workerCount11maxBodySize12reuseAddress10tcpNoDelayACSS_S4iS2btFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var hostname: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1887
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Host name the server will bind to.",
            "key.doc.declaration" : "public var hostname: String",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"45\" column=\"16\"><Name>hostname<\/Name><USR>s:5Vapor15NIOServerConfigV8hostnameSSvp<\/USR><Declaration>public var hostname: String<\/Declaration><CommentParts><Abstract><Para>Host name the server will bind to.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 45,
            "key.doc.name" : "hostname",
            "key.doc.type" : "Other",
            "key.doclength" : 39,
            "key.docoffset" : 1844,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>hostname<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "hostname",
            "key.namelength" : 8,
            "key.nameoffset" : 1898,
            "key.offset" : 1894,
            "key.parsed_declaration" : "public var hostname: String",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 45,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor15NIOServerConfigV8hostnameSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var port: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1958
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Port the server will bind to.",
            "key.doc.declaration" : "public var port: Int",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"48\" column=\"16\"><Name>port<\/Name><USR>s:5Vapor15NIOServerConfigV4portSivp<\/USR><Declaration>public var port: Int<\/Declaration><CommentParts><Abstract><Para>Port the server will bind to.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 48,
            "key.doc.name" : "port",
            "key.doc.type" : "Other",
            "key.doclength" : 34,
            "key.docoffset" : 1920,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>port<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 13,
            "key.name" : "port",
            "key.namelength" : 4,
            "key.nameoffset" : 1969,
            "key.offset" : 1965,
            "key.parsed_declaration" : "public var port: Int",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 48,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:5Vapor15NIOServerConfigV4portSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var backlog: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2008
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Listen backlog.",
            "key.doc.declaration" : "public var backlog: Int",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"51\" column=\"16\"><Name>backlog<\/Name><USR>s:5Vapor15NIOServerConfigV7backlogSivp<\/USR><Declaration>public var backlog: Int<\/Declaration><CommentParts><Abstract><Para>Listen backlog.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 51,
            "key.doc.name" : "backlog",
            "key.doc.type" : "Other",
            "key.doclength" : 20,
            "key.docoffset" : 1984,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>backlog<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "backlog",
            "key.namelength" : 7,
            "key.nameoffset" : 2019,
            "key.offset" : 2015,
            "key.parsed_declaration" : "public var backlog: Int",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 51,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:5Vapor15NIOServerConfigV7backlogSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var workerCount: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2137
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Number of client accepting workers.\nShould be equal to the number of logical cores.",
            "key.doc.declaration" : "public var workerCount: Int",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"55\" column=\"16\"><Name>workerCount<\/Name><USR>s:5Vapor15NIOServerConfigV11workerCountSivp<\/USR><Declaration>public var workerCount: Int<\/Declaration><CommentParts><Abstract><Para>Number of client accepting workers. Should be equal to the number of logical cores.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 55,
            "key.doc.name" : "workerCount",
            "key.doc.type" : "Other",
            "key.doclength" : 96,
            "key.docoffset" : 2037,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>workerCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "workerCount",
            "key.namelength" : 11,
            "key.nameoffset" : 2148,
            "key.offset" : 2144,
            "key.parsed_declaration" : "public var workerCount: Int",
            "key.parsed_scope.end" : 55,
            "key.parsed_scope.start" : 55,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:5Vapor15NIOServerConfigV11workerCountSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var maxBodySize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2272
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Requests containing bodies larger than this maximum will be rejected, closing the connection.",
            "key.doc.declaration" : "public var maxBodySize: Int",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"58\" column=\"16\"><Name>maxBodySize<\/Name><USR>s:5Vapor15NIOServerConfigV11maxBodySizeSivp<\/USR><Declaration>public var maxBodySize: Int<\/Declaration><CommentParts><Abstract><Para>Requests containing bodies larger than this maximum will be rejected, closing the connection.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 58,
            "key.doc.name" : "maxBodySize",
            "key.doc.type" : "Other",
            "key.doclength" : 98,
            "key.docoffset" : 2170,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>maxBodySize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "maxBodySize",
            "key.namelength" : 11,
            "key.nameoffset" : 2283,
            "key.offset" : 2279,
            "key.parsed_declaration" : "public var maxBodySize: Int",
            "key.parsed_scope.end" : 58,
            "key.parsed_scope.start" : 58,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Int",
            "key.typeusr" : "$SSiD",
            "key.usr" : "s:5Vapor15NIOServerConfigV11maxBodySizeSivp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var reuseAddress: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2402
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "When `true`, can prevent errors re-binding to a socket after successive server restarts.",
            "key.doc.declaration" : "public var reuseAddress: Bool",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"61\" column=\"16\"><Name>reuseAddress<\/Name><USR>s:5Vapor15NIOServerConfigV12reuseAddressSbvp<\/USR><Declaration>public var reuseAddress: Bool<\/Declaration><CommentParts><Abstract><Para>When <codeVoice>true<\/codeVoice>, can prevent errors re-binding to a socket after successive server restarts.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 61,
            "key.doc.name" : "reuseAddress",
            "key.doc.type" : "Other",
            "key.doclength" : 93,
            "key.docoffset" : 2305,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>reuseAddress<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "reuseAddress",
            "key.namelength" : 12,
            "key.nameoffset" : 2413,
            "key.offset" : 2409,
            "key.parsed_declaration" : "public var reuseAddress: Bool",
            "key.parsed_scope.end" : 61,
            "key.parsed_scope.start" : 61,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:5Vapor15NIOServerConfigV12reuseAddressSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var tcpNoDelay: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2504
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "When `true`, OS will attempt to minimize TCP packet delay.",
            "key.doc.declaration" : "public var tcpNoDelay: Bool",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"64\" column=\"16\"><Name>tcpNoDelay<\/Name><USR>s:5Vapor15NIOServerConfigV10tcpNoDelaySbvp<\/USR><Declaration>public var tcpNoDelay: Bool<\/Declaration><CommentParts><Abstract><Para>When <codeVoice>true<\/codeVoice>, OS will attempt to minimize TCP packet delay.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 64,
            "key.doc.name" : "tcpNoDelay",
            "key.doc.type" : "Other",
            "key.doclength" : 63,
            "key.docoffset" : 2437,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>tcpNoDelay<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "tcpNoDelay",
            "key.namelength" : 10,
            "key.nameoffset" : 2515,
            "key.offset" : 2511,
            "key.parsed_declaration" : "public var tcpNoDelay: Bool",
            "key.parsed_scope.end" : 64,
            "key.parsed_scope.start" : 64,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:5Vapor15NIOServerConfigV10tcpNoDelaySbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(hostname: <Type usr=\"s:SS\">String<\/Type>, port: <Type usr=\"s:Si\">Int<\/Type>, backlog: <Type usr=\"s:Si\">Int<\/Type>, workerCount: <Type usr=\"s:Si\">Int<\/Type>, maxBodySize: <Type usr=\"s:Si\">Int<\/Type>, reuseAddress: <Type usr=\"s:Sb\">Bool<\/Type>, tcpNoDelay: <Type usr=\"s:Sb\">Bool<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2578
              }
            ],
            "key.bodylength" : 250,
            "key.bodyoffset" : 2770,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `NIOServerConfig`.",
            "key.doc.declaration" : "public init(hostname: String, port: Int, backlog: Int, workerCount: Int, maxBodySize: Int, reuseAddress: Bool, tcpNoDelay: Bool)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift\" line=\"67\" column=\"12\"><Name>init(hostname:port:backlog:workerCount:maxBodySize:reuseAddress:tcpNoDelay:)<\/Name><USR>s:5Vapor15NIOServerConfigV8hostname4port7backlog11workerCount11maxBodySize12reuseAddress10tcpNoDelayACSS_S4iS2btcfc<\/USR><Declaration>public init(hostname: String, port: Int, backlog: Int, workerCount: Int, maxBodySize: Int, reuseAddress: Bool, tcpNoDelay: Bool)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>NIOServerConfig<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 67,
            "key.doc.name" : "init(hostname:port:backlog:workerCount:maxBodySize:reuseAddress:tcpNoDelay:)",
            "key.doc.type" : "Function",
            "key.doclength" : 37,
            "key.docoffset" : 2537,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/NIOServerConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>hostname<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>backlog<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workerCount<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxBodySize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>reuseAddress<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tcpNoDelay<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 436,
            "key.name" : "init(hostname:port:backlog:workerCount:maxBodySize:reuseAddress:tcpNoDelay:)",
            "key.namelength" : 183,
            "key.nameoffset" : 2585,
            "key.offset" : 2585,
            "key.parsed_declaration" : "public init(\n    hostname: String,\n    port: Int,\n    backlog: Int,\n    workerCount: Int,\n    maxBodySize: Int,\n    reuseAddress: Bool,\n    tcpNoDelay: Bool\n)",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 67,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOServerConfig.Type) -> (String, Int, Int, Int, Int, Bool, Bool) -> NIOServerConfig",
            "key.typeusr" : "$S8hostname4port7backlog11workerCount11maxBodySize12reuseAddress10tcpNoDelay5Vapor15NIOServerConfigVSS_S4iS2btcD",
            "key.usr" : "s:5Vapor15NIOServerConfigV8hostname4port7backlog11workerCount11maxBodySize12reuseAddress10tcpNoDelayACSS_S4iS2btcfc"
          }
        ],
        "key.typename" : "NIOServerConfig.Type",
        "key.typeusr" : "$S5Vapor15NIOServerConfigVmD",
        "key.usr" : "s:5Vapor15NIOServerConfigV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1559,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public final class Application : <Type usr=\"s:7Service9ContainerP\">Container<\/Type><\/Declaration>",
        "key.bodylength" : 480,
        "key.bodyoffset" : 23,
        "key.doc.column" : 20,
        "key.doc.declaration" : "public final class Application : Container",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Note" : ""
          },
          {
            "Para" : "Call the `run()` method to run this `Application`’s commands. By default, this will boot an `HTTPServer` and begin serving requests. Which command is run depends on the command-line arguments and flags."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `Application` is responsible for calling `Provider` (and `VaporProvider`) boot methods. The `willBoot` and `didBoot` methods will be called on `Application.init(...)` for both provider types. `VaporProvider`’s will have their `willRun` and `didRun` methods called on `Application.run()`"
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift\" line=\"15\" column=\"20\"><Name>Application<\/Name><USR>s:5Vapor11ApplicationC<\/USR><Declaration>public final class Application : Container<\/Declaration><CommentParts><Abstract><Para>Core framework class. You usually create only one of these per application. Acts as your application’s top-level service container.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let router = try app.make(Router.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>When generating responses to requests, you should use the <codeVoice>Request<\/codeVoice> as your service-container.<\/Para><\/Note><Para>Call the <codeVoice>run()<\/codeVoice> method to run this <codeVoice>Application<\/codeVoice>’s commands. By default, this will boot an <codeVoice>HTTPServer<\/codeVoice> and begin serving requests. Which command is run depends on the command-line arguments and flags.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try app.run()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>Application<\/codeVoice> is responsible for calling <codeVoice>Provider<\/codeVoice> (and <codeVoice>VaporProvider<\/codeVoice>) boot methods. The <codeVoice>willBoot<\/codeVoice> and <codeVoice>didBoot<\/codeVoice> methods will be called on <codeVoice>Application.init(...)<\/codeVoice> for both provider types. <codeVoice>VaporProvider<\/codeVoice>’s will have their <codeVoice>willRun<\/codeVoice> and <codeVoice>didRun<\/codeVoice> methods called on <codeVoice>Application.run()<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 15,
        "key.doc.name" : "Application",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Application.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Application<\/decl.name> : <ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 504,
        "key.name" : "Application",
        "key.namelength" : 11,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var runningServer: <Type usr=\"s:5Vapor13RunningServerV\">RunningServer<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 104
              }
            ],
            "key.bodylength" : 355,
            "key.bodyoffset" : 146,
            "key.doc.column" : 16,
            "key.doc.comment" : "Stores a reference to the `Application`'s currently running server.",
            "key.doc.declaration" : "public var runningServer: RunningServer? { get set }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift\" line=\"3\" column=\"16\"><Name>runningServer<\/Name><USR>s:5Vapor11ApplicationC13runningServerAA07RunningD0VSgvp<\/USR><Declaration>public var runningServer: RunningServer? { get set }<\/Declaration><CommentParts><Abstract><Para>Stores a reference to the <codeVoice>Application<\/codeVoice>’s currently running server.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 3,
            "key.doc.name" : "runningServer",
            "key.doc.type" : "Other",
            "key.doclength" : 72,
            "key.docoffset" : 28,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>runningServer<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor13RunningServerV\">RunningServer<\/ref.struct>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 391,
            "key.name" : "runningServer",
            "key.namelength" : 13,
            "key.nameoffset" : 115,
            "key.offset" : 111,
            "key.parsed_declaration" : "public var runningServer: RunningServer?",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 3,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "RunningServer?",
            "key.typeusr" : "$S5Vapor13RunningServerVSgD",
            "key.usr" : "s:5Vapor11ApplicationC13runningServerAA07RunningD0VSgvp"
          }
        ],
        "key.typename" : "Application.Type",
        "key.typeusr" : "$S5Vapor11ApplicationCmD",
        "key.usr" : "s:5Vapor11ApplicationC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct RunningServer<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 915
          }
        ],
        "key.bodylength" : 207,
        "key.bodyoffset" : 944,
        "key.doc.column" : 15,
        "key.doc.comment" : "A context for the currently running `Server` protocol. When a `Server` successfully boots,\nit sets one of these on the `runningServer` property of the `Application`.\n\nThis struct can be used to close the server.\n\n    try app.runningServer?.close().wait()\n\nIt can also be used to wait until something else closes the server.\n\n    try app.runningServer?.onClose().wait()",
        "key.doc.declaration" : "public struct RunningServer",
        "key.doc.discussion" : [
          {
            "Para" : "This struct can be used to close the server."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "It can also be used to wait until something else closes the server."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift\" line=\"30\" column=\"15\"><Name>RunningServer<\/Name><USR>s:5Vapor13RunningServerV<\/USR><Declaration>public struct RunningServer<\/Declaration><CommentParts><Abstract><Para>A context for the currently running <codeVoice>Server<\/codeVoice> protocol. When a <codeVoice>Server<\/codeVoice> successfully boots, it sets one of these on the <codeVoice>runningServer<\/codeVoice> property of the <codeVoice>Application<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>This struct can be used to close the server.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try app.runningServer?.close().wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>It can also be used to wait until something else closes the server.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try app.runningServer?.onClose().wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 30,
        "key.doc.name" : "RunningServer",
        "key.doc.type" : "Class",
        "key.doclength" : 409,
        "key.docoffset" : 506,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>RunningServer<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 230,
        "key.name" : "RunningServer",
        "key.namelength" : 13,
        "key.nameoffset" : 929,
        "key.offset" : 922,
        "key.parsed_declaration" : "public struct RunningServer",
        "key.parsed_scope.end" : 36,
        "key.parsed_scope.start" : 30,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let onClose: <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1013
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "A future that will be completed when the server closes.",
            "key.doc.declaration" : "public let onClose: Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift\" line=\"32\" column=\"16\"><Name>onClose<\/Name><USR>s:5Vapor13RunningServerV7onClose3NIO15EventLoopFutureCyytGvp<\/USR><Declaration>public let onClose: Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>A future that will be completed when the server closes.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 32,
            "key.doc.name" : "onClose",
            "key.doc.type" : "Other",
            "key.doclength" : 60,
            "key.docoffset" : 949,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>onClose<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.name" : "onClose",
            "key.namelength" : 7,
            "key.nameoffset" : 1024,
            "key.offset" : 1020,
            "key.parsed_declaration" : "public let onClose: Future<Void>",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 32,
            "key.typename" : "EventLoopFuture<()>",
            "key.typeusr" : "$S3NIO15EventLoopFutureCyytGD",
            "key.usr" : "s:5Vapor13RunningServerV7onClose3NIO15EventLoopFutureCyytGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let close: () -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1114
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Stops the currently running server, if one is running.",
            "key.doc.declaration" : "public let close: () -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift\" line=\"35\" column=\"16\"><Name>close<\/Name><USR>s:5Vapor13RunningServerV5close3NIO15EventLoopFutureCyytGycvp<\/USR><Declaration>public let close: () -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Stops the currently running server, if one is running.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 35,
            "key.doc.name" : "close",
            "key.doc.type" : "Other",
            "key.doclength" : 59,
            "key.docoffset" : 1051,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>close<\/decl.name>: <decl.var.type>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "close",
            "key.namelength" : 5,
            "key.nameoffset" : 1125,
            "key.offset" : 1121,
            "key.parsed_declaration" : "public let close: () -> Future<Void>",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 35,
            "key.typename" : "() -> EventLoopFuture<()>",
            "key.typeusr" : "$S3NIO15EventLoopFutureCyytGycD",
            "key.usr" : "s:5Vapor13RunningServerV5close3NIO15EventLoopFutureCyytGycvp"
          }
        ],
        "key.typename" : "RunningServer.Type",
        "key.typeusr" : "$S5Vapor13RunningServerVmD",
        "key.usr" : "s:5Vapor13RunningServerV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>internal final class RunningServerCache : <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 1236
          },
          {
            "key.attribute" : "source.decl.attribute.internal",
            "key.length" : 8,
            "key.offset" : 1227
          }
        ],
        "key.bodylength" : 276,
        "key.bodyoffset" : 1281,
        "key.doc.column" : 22,
        "key.doc.comment" : "MARK: Internal\nReference-type wrapper around a `RunningServer`.",
        "key.doc.declaration" : "internal final class RunningServerCache : ServiceType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift\" line=\"41\" column=\"22\"><Name>RunningServerCache<\/Name><USR>s:5Vapor18RunningServerCacheC<\/USR><Declaration>internal final class RunningServerCache : ServiceType<\/Declaration><CommentParts><Abstract><Para>MARK: Internal Reference-type wrapper around a <codeVoice>RunningServer<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 41,
        "key.doc.name" : "RunningServerCache",
        "key.doc.type" : "Class",
        "key.doclength" : 73,
        "key.docoffset" : 1154,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 1268
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>RunningServerCache<\/decl.name> : <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 316,
        "key.name" : "RunningServerCache",
        "key.namelength" : 18,
        "key.nameoffset" : 1248,
        "key.offset" : 1242,
        "key.parsed_declaration" : "internal final class RunningServerCache: ServiceType",
        "key.parsed_scope.end" : 52,
        "key.parsed_scope.start" : 41,
        "key.runtime_name" : "_TtC4main18RunningServerCache",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor18RunningServerCacheC\">RunningServerCache<\/Type><\/Declaration>",
            "key.bodylength" : 28,
            "key.bodyoffset" : 1390,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "static func makeService(for worker: Container) throws -> RunningServerCache",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift\" line=\"43\" column=\"17\"><Name>makeService(for:)<\/Name><USR>s:5Vapor18RunningServerCacheC11makeService3forAC0F09Container_p_tKFZ<\/USR><Declaration>static func makeService(for worker: Container) throws -&gt; RunningServerCache<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 43,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 1286,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor18RunningServerCacheC\">RunningServerCache<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 106,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 1325,
            "key.offset" : 1313,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "static func makeService(for worker: Container) throws -> RunningServerCache",
            "key.parsed_scope.end" : 45,
            "key.parsed_scope.start" : 43,
            "key.substructure" : [

            ],
            "key.typename" : "(RunningServerCache.Type) -> (Container) throws -> RunningServerCache",
            "key.typeusr" : "$S3for5Vapor18RunningServerCacheC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor18RunningServerCacheC11makeService3forAC0F09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var storage: <Type usr=\"s:5Vapor13RunningServerV\">RunningServer<\/Type>?<\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "The stored `RunningServer`.",
            "key.doc.declaration" : "var storage: Vapor.RunningServer?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift\" line=\"48\" column=\"9\"><Name>storage<\/Name><USR>s:5Vapor18RunningServerCacheC7storageAA0bC0VSgvp<\/USR><Declaration>var storage: Vapor.RunningServer?<\/Declaration><CommentParts><Abstract><Para>The stored <codeVoice>RunningServer<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 48,
            "key.doc.name" : "storage",
            "key.doc.type" : "Other",
            "key.doclength" : 32,
            "key.docoffset" : 1425,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor13RunningServerV\">RunningServer<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 1465,
            "key.offset" : 1461,
            "key.parsed_declaration" : "var storage: RunningServer?",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 48,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "RunningServer?",
            "key.typeusr" : "$S5Vapor13RunningServerVSgD",
            "key.usr" : "s:5Vapor18RunningServerCacheC7storageAA0bC0VSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1538
              }
            ],
            "key.bodylength" : 1,
            "key.bodyoffset" : 1554,
            "key.doc.column" : 13,
            "key.doc.comment" : "Creates a new `RunningServerCache`.",
            "key.doc.declaration" : "private init()",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift\" line=\"51\" column=\"13\"><Name>init()<\/Name><USR>s:5Vapor18RunningServerCacheCACyc33_8AD513B42310ED46691063078231B259Llfc<\/USR><Declaration>private init()<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>RunningServerCache<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 51,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 40,
            "key.docoffset" : 1494,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/RunningServer.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 10,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 1546,
            "key.offset" : 1546,
            "key.parsed_declaration" : "private init()",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 51,
            "key.typename" : "(RunningServerCache.Type) -> () -> RunningServerCache",
            "key.typeusr" : "$S5Vapor18RunningServerCacheCycD",
            "key.usr" : "s:5Vapor18RunningServerCacheCACyc33_8AD513B42310ED46691063078231B259Llfc"
          }
        ],
        "key.typename" : "RunningServerCache.Type",
        "key.typeusr" : "$S5Vapor18RunningServerCacheCmD",
        "key.usr" : "s:5Vapor18RunningServerCacheC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/Server.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 760,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Server<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 111
          }
        ],
        "key.bodylength" : 623,
        "key.bodyoffset" : 135,
        "key.doc.column" : 17,
        "key.doc.comment" : "Servers are capable of binding to an address and subsequently responding to requests sent to that address.",
        "key.doc.declaration" : "public protocol Server",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/Server.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/Server.swift\" line=\"2\" column=\"17\"><Name>Server<\/Name><USR>s:5Vapor6ServerP<\/USR><Declaration>public protocol Server<\/Declaration><CommentParts><Abstract><Para>Servers are capable of binding to an address and subsequently responding to requests sent to that address.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Server",
        "key.doc.type" : "Class",
        "key.doclength" : 111,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/Server.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Server<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 641,
        "key.name" : "Server",
        "key.namelength" : 6,
        "key.nameoffset" : 127,
        "key.offset" : 118,
        "key.parsed_declaration" : "public protocol Server",
        "key.parsed_scope.end" : 14,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main6Server_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func start(hostname: <Type usr=\"s:SS\">String<\/Type>?, port: <Type usr=\"s:Si\">Int<\/Type>?) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Starts the `Server`.\n\nUpon starting, the `Server` must set the application's `runningServer` property.\n\n- parameters:\n    - hostname: Optional hostname override.\n                If set, the server should bind to this hostname instead of its configured hostname.\n    - port: Optional port override.\n            If set, the server should bind to this port instead of its configured port.\n- returns: A future notification that will complete when the `Server` has started successfully.",
            "key.doc.declaration" : "func start(hostname: String?, port: Int?) -> Future<Void>",
            "key.doc.discussion" : [
              {
                "Para" : "Upon starting, the `Server` must set the application’s `runningServer` property."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/Server.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/Server.swift\" line=\"13\" column=\"10\"><Name>start(hostname:port:)<\/Name><USR>s:5Vapor6ServerP5start8hostname4port3NIO15EventLoopFutureCyytGSSSg_SiSgtF<\/USR><Declaration>func start(hostname: String?, port: Int?) -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Starts the <codeVoice>Server<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>hostname<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Optional hostname override. If set, the server should bind to this hostname instead of its configured hostname.<\/Para><\/Discussion><\/Parameter><Parameter><Name>port<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Optional port override. If set, the server should bind to this port instead of its configured port.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A future notification that will complete when the <codeVoice>Server<\/codeVoice> has started successfully.<\/Para><\/ResultDiscussion><Discussion><Para>Upon starting, the <codeVoice>Server<\/codeVoice> must set the application’s <codeVoice>runningServer<\/codeVoice> property.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 13,
            "key.doc.name" : "start(hostname:port:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Optional hostname override. If set, the server should bind to this hostname instead of its configured hostname."
                  }
                ],
                "name" : "hostname"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Optional port override. If set, the server should bind to this port instead of its configured port."
                  }
                ],
                "name" : "port"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A future notification that will complete when the `Server` has started successfully."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 556,
            "key.docoffset" : 140,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Server\/Server.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>start<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>hostname<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>port<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 57,
            "key.name" : "start(hostname:port:)",
            "key.namelength" : 36,
            "key.nameoffset" : 705,
            "key.offset" : 700,
            "key.parsed_declaration" : "func start(hostname: String?, port: Int?) -> Future<Void>",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Server> (Self) -> (String?, Int?) -> EventLoopFuture<()>",
            "key.typeusr" : "$S8hostname4port3NIO15EventLoopFutureCyytGSSSg_SiSgtcD",
            "key.usr" : "s:5Vapor6ServerP5start8hostname4port3NIO15EventLoopFutureCyytGSSSg_SiSgtF"
          }
        ],
        "key.typename" : "Server.Protocol",
        "key.typeusr" : "$S5Vapor6Server_pmD",
        "key.usr" : "s:5Vapor6ServerP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Config+Default.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 431,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct Config : <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type><\/Declaration>",
        "key.bodylength" : 411,
        "key.bodyoffset" : 18,
        "key.doc.declaration" : "struct Config : CustomStringConvertible",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Service `Config` can also be used to set concrete service requirements to ensure a specific concrete services are being used. This can be helpful if you want to ensure non-dev dependencies are being used in production."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Config<\/Name><USR>s:7Service6ConfigV<\/USR><Declaration>struct Config : CustomStringConvertible<\/Declaration><CommentParts><Abstract><Para>The service <codeVoice>Config<\/codeVoice> is used to disambigute which concrete service should be used if multiple are available for a given protocol<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[config.prefer(RedisCache.self, for: Cache.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Service <codeVoice>Config<\/codeVoice> can also be used to set concrete service requirements to ensure a specific concrete services are being used. This can be helpful if you want to ensure non-dev dependencies are being used in production.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[config.require(ProductionLogger.self, for: Logger.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Config",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Config<\/decl.name> : <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 430,
        "key.modulename" : "Service",
        "key.name" : "Config",
        "key.namelength" : 6,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`() -&gt; <Type usr=\"s:7Service6ConfigV\">Config<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 201
              }
            ],
            "key.bodylength" : 184,
            "key.bodyoffset" : 243,
            "key.doc.column" : 24,
            "key.doc.comment" : "Vapor's default configuration options.\n\nCurrently this just includes preference for `ConsoleLogger`, but it\nmay include more things in the future.",
            "key.doc.declaration" : "public static func `default`() -> Config",
            "key.doc.discussion" : [
              {
                "Para" : "Currently this just includes preference for `ConsoleLogger`, but it may include more things in the future."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Config+Default.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Config+Default.swift\" line=\"6\" column=\"24\"><Name>default()<\/Name><USR>s:7Service6ConfigV5VaporE7defaultACyFZ<\/USR><Declaration>public static func `default`() -&gt; Config<\/Declaration><CommentParts><Abstract><Para>Vapor’s default configuration options.<\/Para><\/Abstract><Discussion><Para>Currently this just includes preference for <codeVoice>ConsoleLogger<\/codeVoice>, but it may include more things in the future.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 6,
            "key.doc.name" : "default()",
            "key.doc.type" : "Function",
            "key.doclength" : 174,
            "key.docoffset" : 23,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Config+Default.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:7Service6ConfigV\">Config<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 220,
            "key.name" : "default()",
            "key.namelength" : 11,
            "key.nameoffset" : 220,
            "key.offset" : 208,
            "key.parsed_declaration" : "public static func `default`() -> Config",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 6,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var config: <Type usr=\"s:7Service6ConfigV\">Config<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Config+Default.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>config<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Service6ConfigV\">Config<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 21,
                "key.name" : "config",
                "key.namelength" : 6,
                "key.nameoffset" : 256,
                "key.offset" : 252,
                "key.parsed_declaration" : "var config = Config()",
                "key.parsed_scope.end" : 7,
                "key.parsed_scope.start" : 7,
                "key.typename" : "Config",
                "key.typeusr" : "$S7Service6ConfigVD",
                "key.usr" : "s:7Service6ConfigV5VaporE7defaultACyFZ6configL_ACvp"
              }
            ],
            "key.typename" : "(Config.Type) -> () -> Config",
            "key.typeusr" : "$S7Service6ConfigVycD",
            "key.usr" : "s:7Service6ConfigV5VaporE7defaultACyFZ"
          }
        ],
        "key.typename" : "Config.Type",
        "key.typeusr" : "$S7Service6ConfigVmD",
        "key.usr" : "s:7Service6ConfigV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Services+Default.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3261,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct Services : <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type><\/Declaration>",
        "key.bodylength" : 3003,
        "key.bodyoffset" : 35,
        "key.doc.declaration" : "struct Services : CustomStringConvertible",
        "key.doc.discussion" : [
          {
            "Para" : "While the `Services` struct is mutable (before it is used to initialize a `Container`), new services can be registered using a few different methods."
          },
          {
            "Para" : "The most common method for registering services is by using a factory."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "This will ensure a new instance of your service is created for any `SubContainer`s. See the `register(_:factory:)` methods for more information."
          },
          {
            "Note" : ""
          },
          {
            "Para" : "A concise method for registering services is by using the `ServiceType` protocol. Types conforming to this protocol can be registered to `Services` using just the type name."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `ServiceType` for more details."
          },
          {
            "Para" : "You can also register pre-initialized instances of a service."
          },
          {
            "CodeListing" : ""
          },
          {
            "Warning" : ""
          },
          {
            "Para" : "Once you initialize a `Container` from a `Services` struct, the `Services` will become immutable. After this point, you can use the `make(_:)` method on `Container` to start creating services."
          },
          {
            "Note" : ""
          },
          {
            "Para" : "See `Container` for more information."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Services<\/Name><USR>s:7Service8ServicesV<\/USR><Declaration>struct Services : CustomStringConvertible<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>Services<\/codeVoice> struct is used for registering and storing a <codeVoice>Container<\/codeVoice>’s services.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h1>]]><\/rawHTML>Registering Services<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>While the <codeVoice>Services<\/codeVoice> struct is mutable (before it is used to initialize a <codeVoice>Container<\/codeVoice>), new services can be registered using a few different methods.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Factory<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The most common method for registering services is by using a factory.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[services.register(Logger.self) { container in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return PrintLogger()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>This will ensure a new instance of your service is created for any <codeVoice>SubContainer<\/codeVoice>s. See the <codeVoice>register(_:factory:)<\/codeVoice> methods for more information.<\/Para><Note><Para>You may need to disambiguate the closure return by adding <codeVoice>-&gt; T<\/codeVoice>.<\/Para><\/Note><rawHTML><![CDATA[<h2>]]><\/rawHTML>Type<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A concise method for registering services is by using the <codeVoice>ServiceType<\/codeVoice> protocol. Types conforming to this protocol can be registered to <codeVoice>Services<\/codeVoice> using just the type name.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[extension PrintLogger: ServiceType { ... }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(PrintLogger.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>ServiceType<\/codeVoice> for more details.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Instance<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>You can also register pre-initialized instances of a service.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[services.register(PrintLogger())]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Warning><Para>When used with reference types (classes), this method will share the same object with all <codeVoice>SubContainer<\/codeVoice>s. Be careful to avoid race conditions.<\/Para><\/Warning><rawHTML><![CDATA[<h1>]]><\/rawHTML>Making Services<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Once you initialize a <codeVoice>Container<\/codeVoice> from a <codeVoice>Services<\/codeVoice> struct, the <codeVoice>Services<\/codeVoice> will become immutable. After this point, you can use the <codeVoice>make(_:)<\/codeVoice> method on <codeVoice>Container<\/codeVoice> to start creating services.<\/Para><Note><Para>The <codeVoice>Services<\/codeVoice> are immutable on a <codeVoice>Container<\/codeVoice> to optimize caching.<\/Para><\/Note><Para>See <codeVoice>Container<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Services",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Services<\/decl.name> : <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 3024,
        "key.modulename" : "Service",
        "key.name" : "Services",
        "key.namelength" : 8,
        "key.nameoffset" : 25,
        "key.offset" : 15,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`() -&gt; <Type usr=\"s:7Service8ServicesV\">Services<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 229
              }
            ],
            "key.bodylength" : 2763,
            "key.bodyoffset" : 273,
            "key.doc.column" : 24,
            "key.doc.comment" : "Vapor's default services. This includes many services required to successfully\nboot an Application. Only for special use cases should you create an empty `Services` struct.",
            "key.doc.declaration" : "public static func `default`() -> Services",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Services+Default.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Services+Default.swift\" line=\"6\" column=\"24\"><Name>default()<\/Name><USR>s:7Service8ServicesV5VaporE7defaultACyFZ<\/USR><Declaration>public static func `default`() -&gt; Services<\/Declaration><CommentParts><Abstract><Para>Vapor’s default services. This includes many services required to successfully boot an Application. Only for special use cases should you create an empty <codeVoice>Services<\/codeVoice> struct.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 6,
            "key.doc.name" : "default()",
            "key.doc.type" : "Function",
            "key.doclength" : 185,
            "key.docoffset" : 40,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Services+Default.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:7Service8ServicesV\">Services<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 2801,
            "key.name" : "default()",
            "key.namelength" : 11,
            "key.nameoffset" : 248,
            "key.offset" : 236,
            "key.parsed_declaration" : "public static func `default`() -> Services",
            "key.parsed_scope.end" : 94,
            "key.parsed_scope.start" : 6,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var services: <Type usr=\"s:7Service8ServicesV\">Services<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Services+Default.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>services<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7Service8ServicesV\">Services<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 25,
                "key.name" : "services",
                "key.namelength" : 8,
                "key.nameoffset" : 286,
                "key.offset" : 282,
                "key.parsed_declaration" : "var services = Services()",
                "key.parsed_scope.end" : 7,
                "key.parsed_scope.start" : 7,
                "key.typename" : "Services",
                "key.typeusr" : "$S7Service8ServicesVD",
                "key.usr" : "s:7Service8ServicesV5VaporE7defaultACyFZ8servicesL_ACvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let sharedThreadPool: <Type usr=\"s:3NIO20BlockingIOThreadPoolC\">BlockingIOThreadPool<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/Services+Default.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sharedThreadPool<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO20BlockingIOThreadPoolC\">BlockingIOThreadPool<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 63,
                "key.name" : "sharedThreadPool",
                "key.namelength" : 16,
                "key.nameoffset" : 2730,
                "key.offset" : 2726,
                "key.parsed_declaration" : "let sharedThreadPool = BlockingIOThreadPool(numberOfThreads: 2)",
                "key.parsed_scope.end" : 83,
                "key.parsed_scope.start" : 83,
                "key.typename" : "BlockingIOThreadPool",
                "key.typeusr" : "$S3NIO20BlockingIOThreadPoolCD",
                "key.usr" : "s:7Service8ServicesV5VaporE7defaultACyFZ16sharedThreadPoolL_3NIO016BlockingIOThreadG0Cvp"
              }
            ],
            "key.typename" : "(Services.Type) -> () -> Services",
            "key.typeusr" : "$S7Service8ServicesVycD",
            "key.usr" : "s:7Service8ServicesV5VaporE7defaultACyFZ"
          }
        ],
        "key.typename" : "Services.Type",
        "key.typeusr" : "$S7Service8ServicesVmD",
        "key.usr" : "s:7Service8ServicesV"
      },
      {
        "key.annotated_decl" : "<Declaration>final class PlaintextRenderer : <Type usr=\"s:11TemplateKit0A8RendererP\">TemplateRenderer<\/Type>, <Type usr=\"s:11TemplateKit0A6ParserP\">TemplateParser<\/Type><\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 3079,
        "key.doc.declaration" : "final class PlaintextRenderer : TemplateRenderer, TemplateParser",
        "key.doc.full_as_xml" : "<Class><Name>PlaintextRenderer<\/Name><USR>s:11TemplateKit17PlaintextRendererC<\/USR><Declaration>final class PlaintextRenderer : TemplateRenderer, TemplateParser<\/Declaration><CommentParts><Abstract><Para>Renders templates as plaintext.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "PlaintextRenderer",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3070
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>PlaintextRenderer<\/decl.name> : <ref.protocol usr=\"s:11TemplateKit0A8RendererP\">TemplateRenderer<\/ref.protocol>, <ref.protocol usr=\"s:11TemplateKit0A6ParserP\">TemplateParser<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 40,
        "key.modulename" : "TemplateKit",
        "key.name" : "PlaintextRenderer",
        "key.namelength" : 17,
        "key.nameoffset" : 3051,
        "key.offset" : 3041,
        "key.typename" : "PlaintextRenderer.Type",
        "key.typeusr" : "$S11TemplateKit17PlaintextRendererCmD",
        "key.usr" : "s:11TemplateKit17PlaintextRendererC"
      },
      {
        "key.annotated_decl" : "<Declaration>final class Terminal : <Type usr=\"s:7ConsoleAAP\">Console<\/Type><\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 3111,
        "key.doc.declaration" : "final class Terminal : Console",
        "key.doc.full_as_xml" : "<Class><Name>Terminal<\/Name><USR>s:7Console8TerminalC<\/USR><Declaration>final class Terminal : Console<\/Declaration><CommentParts><Abstract><Para>Generic console that uses a mixture of Swift standard library and Foundation code to fulfill protocol requirements.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "Terminal",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3102
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Terminal<\/decl.name> : <ref.protocol usr=\"s:7ConsoleAAP\">Console<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 31,
        "key.modulename" : "Console",
        "key.name" : "Terminal",
        "key.namelength" : 8,
        "key.nameoffset" : 3092,
        "key.offset" : 3082,
        "key.typename" : "Terminal.Type",
        "key.typeusr" : "$S7Console8TerminalCmD",
        "key.usr" : "s:7Console8TerminalC"
      },
      {
        "key.annotated_decl" : "<Declaration>struct DirectoryConfig<\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 3150,
        "key.doc.declaration" : "struct DirectoryConfig",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>DirectoryConfig<\/Name><USR>s:4Core15DirectoryConfigV<\/USR><Declaration>struct DirectoryConfig<\/Declaration><CommentParts><Abstract><Para><codeVoice>DirectoryConfig<\/codeVoice> represents a configured working directory. It can also be used to derive a working directory automatically.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let dirConfig = DirectoryConfig.detect()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(dirConfig.workDir) \/\/ \"\/path\/to\/workdir\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "DirectoryConfig",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3141
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>DirectoryConfig<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 38,
        "key.modulename" : "Core",
        "key.name" : "DirectoryConfig",
        "key.namelength" : 15,
        "key.nameoffset" : 3124,
        "key.offset" : 3114,
        "key.typename" : "DirectoryConfig.Type",
        "key.typeusr" : "$S4Core15DirectoryConfigVmD",
        "key.usr" : "s:4Core15DirectoryConfigV"
      },
      {
        "key.annotated_decl" : "<Declaration>final class ConsoleLogger : <Type usr=\"s:7Logging6LoggerP\">Logger<\/Type><\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 3187,
        "key.doc.declaration" : "final class ConsoleLogger : Logger",
        "key.doc.full_as_xml" : "<Class><Name>ConsoleLogger<\/Name><USR>s:7Console0A6LoggerC<\/USR><Declaration>final class ConsoleLogger : Logger<\/Declaration><CommentParts><Abstract><Para>Outputs logs to a <codeVoice>Console<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "ConsoleLogger",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3178
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ConsoleLogger<\/decl.name> : <ref.protocol usr=\"s:7Logging6LoggerP\">Logger<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 36,
        "key.modulename" : "Console",
        "key.name" : "ConsoleLogger",
        "key.namelength" : 13,
        "key.nameoffset" : 3163,
        "key.offset" : 3153,
        "key.typename" : "ConsoleLogger.Type",
        "key.typeusr" : "$S7Console0A6LoggerCmD",
        "key.usr" : "s:7Console0A6LoggerC"
      },
      {
        "key.annotated_decl" : "<Declaration>final class PrintLogger : <Type usr=\"s:7Logging6LoggerP\">Logger<\/Type><\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 3222,
        "key.doc.declaration" : "final class PrintLogger : Logger",
        "key.doc.full_as_xml" : "<Class><Name>PrintLogger<\/Name><USR>s:7Logging11PrintLoggerC<\/USR><Declaration>final class PrintLogger : Logger<\/Declaration><CommentParts><Abstract><Para>Simply prints the supplied logs to <codeVoice>Swift.print<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "PrintLogger",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3213
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>PrintLogger<\/decl.name> : <ref.protocol usr=\"s:7Logging6LoggerP\">Logger<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 34,
        "key.modulename" : "Logging",
        "key.name" : "PrintLogger",
        "key.namelength" : 11,
        "key.nameoffset" : 3200,
        "key.offset" : 3190,
        "key.typename" : "PrintLogger.Type",
        "key.typeusr" : "$S7Logging11PrintLoggerCmD",
        "key.usr" : "s:7Logging11PrintLoggerC"
      },
      {
        "key.annotated_decl" : "<Declaration>final class BCryptDigest<\/Declaration>",
        "key.bodylength" : 1,
        "key.bodyoffset" : 3258,
        "key.doc.declaration" : "final class BCryptDigest",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `BCrypt` for more information."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>BCryptDigest<\/Name><USR>s:6Crypto12BCryptDigestC<\/USR><Declaration>final class BCryptDigest<\/Declaration><CommentParts><Abstract><Para>Creates and verifies BCrypt hashes. Normally you will not need to initialize one of these classes and you will use the global <codeVoice>BCrypt<\/codeVoice> convenience instead.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try BCrypt.hash(\"vapor\", cost: 4)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>BCrypt<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "BCryptDigest",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 3249
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>BCryptDigest<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 35,
        "key.modulename" : "Crypto",
        "key.name" : "BCryptDigest",
        "key.namelength" : 12,
        "key.nameoffset" : 3235,
        "key.offset" : 3225,
        "key.typename" : "BCryptDigest.Type",
        "key.typeusr" : "$S6Crypto12BCryptDigestCmD",
        "key.usr" : "s:6Crypto12BCryptDigestC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 662,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol VaporProvider : <Type usr=\"s:7Service8ProviderP\">Provider<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 105
          }
        ],
        "key.bodylength" : 304,
        "key.bodyoffset" : 146,
        "key.doc.column" : 17,
        "key.doc.comment" : "A normal service `Provider` extended with additional life-cycle hooks for Vapor-specific containers.",
        "key.doc.declaration" : "public protocol VaporProvider : Provider",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift\" line=\"2\" column=\"17\"><Name>VaporProvider<\/Name><USR>s:5Vapor0A8ProviderP<\/USR><Declaration>public protocol VaporProvider : Provider<\/Declaration><CommentParts><Abstract><Para>A normal service <codeVoice>Provider<\/codeVoice> extended with additional life-cycle hooks for Vapor-specific containers.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "VaporProvider",
        "key.doc.type" : "Class",
        "key.doclength" : 105,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 136
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>VaporProvider<\/decl.name> : <ref.protocol usr=\"s:7Service8ProviderP\">Provider<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Provider"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 339,
        "key.name" : "VaporProvider",
        "key.namelength" : 13,
        "key.nameoffset" : 121,
        "key.offset" : 112,
        "key.parsed_declaration" : "public protocol VaporProvider: Provider",
        "key.parsed_scope.end" : 9,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main13VaporProvider_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func willRun(_ worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called before the application runs commands.",
            "key.doc.declaration" : "func willRun(_ worker: Container) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift\" line=\"4\" column=\"10\"><Name>willRun(_:)<\/Name><USR>s:5Vapor0A8ProviderP7willRuny3NIO15EventLoopFutureCyytG7Service9Container_pKF<\/USR><Declaration>func willRun(_ worker: Container) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called before the application runs commands.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 4,
            "key.doc.name" : "willRun(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 49,
            "key.docoffset" : 151,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>willRun<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 56,
            "key.name" : "willRun(_:)",
            "key.namelength" : 28,
            "key.nameoffset" : 209,
            "key.offset" : 204,
            "key.parsed_declaration" : "func willRun(_ worker: Container) throws -> Future<Void>",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : VaporProvider> (Self) -> (Container) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCyytG7Service9Container_pKcD",
            "key.usr" : "s:5Vapor0A8ProviderP7willRuny3NIO15EventLoopFutureCyytG7Service9Container_pKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func didRun(_ worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Called after the application has finished running.\n- note: This may never happen if the server runs infinitely.",
            "key.doc.declaration" : "func didRun(_ worker: Container) throws -> Future<Void>",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift\" line=\"8\" column=\"10\"><Name>didRun(_:)<\/Name><USR>s:5Vapor0A8ProviderP6didRuny3NIO15EventLoopFutureCyytG7Service9Container_pKF<\/USR><Declaration>func didRun(_ worker: Container) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Called after the application has finished running.<\/Para><\/Abstract><Discussion><Note><Para>This may never happen if the server runs infinitely.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "didRun(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 124,
            "key.docoffset" : 266,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>didRun<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 55,
            "key.name" : "didRun(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 399,
            "key.offset" : 394,
            "key.parsed_declaration" : "func didRun(_ worker: Container) throws -> Future<Void>",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : VaporProvider> (Self) -> (Container) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCyytG7Service9Container_pKcD",
            "key.usr" : "s:5Vapor0A8ProviderP6didRuny3NIO15EventLoopFutureCyytG7Service9Container_pKF"
          }
        ],
        "key.typename" : "VaporProvider.Protocol",
        "key.typeusr" : "$S5Vapor0A8Provider_pmD",
        "key.usr" : "s:5Vapor0A8ProviderP"
      },
      {
        "key.annotated_decl" : "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/Type><\/Declaration>",
        "key.bodylength" : 164,
        "key.bodyoffset" : 496,
        "key.doc.declaration" : "struct Array<Element>",
        "key.doc.discussion" : [
          {
            "Para" : "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the `Array` type to hold elements of a single type, the array’s `Element` type. An array can store any kind of elements—from integers to strings to classes."
          },
          {
            "Para" : "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s `Element` type. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to perform an operation on all of an array’s elements, use a `for`-`in` loop to iterate through the array’s contents."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use the `first` and `last` properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are `nil`."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can replace an existing element with a new value by assigning the new value to the subscript."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."
          },
          {
            "Para" : "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."
          },
          {
            "Para" : "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."
          },
          {
            "Para" : "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."
          },
          {
            "Para" : "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."
          },
          {
            "Para" : "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."
          },
          {
            "Para" : "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array’s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array’s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."
          },
          {
            "Para" : "When the destination array’s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."
          },
          {
            "Para" : "When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>Array<\/Name><USR>s:Sa<\/USR><Declaration>struct Array&lt;Element&gt;<\/Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.<\/Para><\/Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app’s data. Specifically, you use the <codeVoice>Array<\/codeVoice> type to hold elements of a single type, the array’s <codeVoice>Element<\/codeVoice> type. An array can store any kind of elements—from integers to strings to classes.<\/Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array’s <codeVoice>Element<\/codeVoice> type. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An array of 'Int' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ An array of 'String' elements]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element<\/codeVoice> type of your array in the declaration. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Shortened forms are preferred]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The full type name is also allowed]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing Array Values<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to perform an operation on all of an array’s elements, use a <codeVoice>for<\/codeVoice>-<codeVoice>in<\/codeVoice> loop to iterate through the array’s contents.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Albemarle.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Brandywine.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I don't live on Chesapeake.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>isEmpty<\/codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count<\/codeVoice> property to find the number of elements in the array.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"I know 8 odd numbers.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use the <codeVoice>first<\/codeVoice> and <codeVoice>last<\/codeVoice> properties for safe access to the value of the array’s first and last elements. If the array is empty, these properties are <codeVoice>nil<\/codeVoice>.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 15\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"nil, nil\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count<\/codeVoice> triggers a runtime error. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1, 7\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Triggers runtime error: Index out of range]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Adding and Removing Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you’re teaching. During the registration period, you need to add and remove names as students add and drop the class.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)<\/codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)<\/codeVoice> method.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)<\/codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)<\/codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)<\/codeVoice>, <codeVoice>removeSubrange(_:)<\/codeVoice>, and <codeVoice>removeLast()<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ Ben's family is moving to another state]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ William is signing up for a different class]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Growing the Size of an Array<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage’s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.<\/Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)<\/codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity<\/codeVoice> and <codeVoice>count<\/codeVoice> properties to determine how many more elements the array can store without allocating larger storage.<\/Para><Para>For arrays of most <codeVoice>Element<\/codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element<\/codeVoice> type that is a class or <codeVoice>@objc<\/codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray<\/codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray<\/codeVoice> can become an <codeVoice>Array<\/codeVoice>, there are no guarantees about representation or efficiency in this case.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[100, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[1, 2, 3, 4, 5]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object’s properties from both arrays. For example:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ An integer type with reference semantics]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Modifications to an instance are visible from either array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Replacements, additions, and removals are still visible]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ only in the modified array]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"100\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.<\/Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.<\/Para><Para>In the example below, a <codeVoice>numbers<\/codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers<\/codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers<\/codeVoice> are made in place, while the two copies continue to share the original storage.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ The storage for 'numbers' is copied here]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'numbers' is [100, 200, 300, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray<\/codeVoice> instance instead of <codeVoice>Array<\/codeVoice>, use the type-cast operator (<codeVoice>as<\/codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element<\/codeVoice> type of your array must be a class, an <codeVoice>@objc<\/codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc<\/codeVoice> attribute), or a type that bridges to a Foundation type.<\/Para><Para>The following example shows how you can bridge an <codeVoice>Array<\/codeVoice> instance to <codeVoice>NSArray<\/codeVoice> to use the <codeVoice>write(to:atomically:)<\/codeVoice> method. In this example, the <codeVoice>colors<\/codeVoice> array can be bridged to <codeVoice>NSArray<\/codeVoice> because the <codeVoice>colors<\/codeVoice> array’s <codeVoice>String<\/codeVoice> elements bridge to <codeVoice>NSString<\/codeVoice>. The compiler prevents bridging the <codeVoice>moreColors<\/codeVoice> array, on the other hand, because its <codeVoice>Element<\/codeVoice> type is <codeVoice>Optional&lt;String&gt;<\/codeVoice>, which does <emphasis>not<\/emphasis> bridge to a Foundation type.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ error: cannot convert value of type '[String?]' to type 'NSArray']]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Bridging from <codeVoice>Array<\/codeVoice> to <codeVoice>NSArray<\/codeVoice> takes O(1) time and O(1) space if the array’s elements are already instances of a class or an <codeVoice>@objc<\/codeVoice> protocol; otherwise, it takes O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When the destination array’s element type is a class or an <codeVoice>@objc<\/codeVoice> protocol, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> first calls the <codeVoice>copy(with:)<\/codeVoice> (<codeVoice>- copyWithZone:<\/codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray<\/codeVoice> that are already immutable, <codeVoice>copy(with:)<\/codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)<\/codeVoice> returns the same array, the instances of <codeVoice>NSArray<\/codeVoice> and <codeVoice>Array<\/codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array<\/codeVoice> share storage.<\/Para><Para>When the destination array’s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array<\/codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n<\/emphasis>) time. For example, bridging from <codeVoice>NSArray<\/codeVoice> to <codeVoice>Array&lt;Int&gt;<\/codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array<\/codeVoice> instance.<\/Para><Note><Para>The <codeVoice>ContiguousArray<\/codeVoice> and <codeVoice>ArraySlice<\/codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "Array",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Array<\/decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer<\/ref.protocol><\/decl.struct>",
        "key.groupname" : "Collection\/Array",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 208,
        "key.modulename" : "Swift",
        "key.name" : "Array",
        "key.namelength" : 5,
        "key.nameoffset" : 463,
        "key.offset" : 453,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal var onlyVapor: [<Type usr=\"s:5Vapor0A8ProviderP\">VaporProvider<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 561
              }
            ],
            "key.bodylength" : 56,
            "key.bodyoffset" : 602,
            "key.doc.column" : 18,
            "key.doc.comment" : "Returns only the `VaporProvider` service providers.",
            "key.doc.declaration" : "internal var onlyVapor: [VaporProvider] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift\" line=\"13\" column=\"18\"><Name>onlyVapor<\/Name><USR>s:Sa5Vapor7Service8Provider_pRszlE04onlyA0SayAA0aC0_pGvp<\/USR><Declaration>internal var onlyVapor: [VaporProvider] { get }<\/Declaration><CommentParts><Abstract><Para>Returns only the <codeVoice>VaporProvider<\/codeVoice> service providers.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 13,
            "key.doc.name" : "onlyVapor",
            "key.doc.type" : "Other",
            "key.doclength" : 56,
            "key.docoffset" : 501,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Services\/VaporProvider.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>onlyVapor<\/decl.name>: <decl.var.type>[<ref.protocol usr=\"s:5Vapor0A8ProviderP\">VaporProvider<\/ref.protocol>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "Collection\/Array",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 89,
            "key.name" : "onlyVapor",
            "key.namelength" : 9,
            "key.nameoffset" : 574,
            "key.offset" : 570,
            "key.parsed_declaration" : "internal var onlyVapor: [VaporProvider]",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 13,
            "key.typename" : "[VaporProvider]",
            "key.typeusr" : "$SSay5Vapor0A8Provider_pGD",
            "key.usr" : "s:Sa5Vapor7Service8Provider_pRszlE04onlyA0SayAA0aC0_pGvp"
          }
        ],
        "key.typename" : "Array<Element>.Type",
        "key.typeusr" : "$SSayxGmD",
        "key.usr" : "s:Sa"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1728,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class KeyedCacheSessions : <Type usr=\"s:5Vapor8SessionsP\">Sessions<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 77
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 70
          }
        ],
        "key.bodylength" : 1594,
        "key.bodyoffset" : 132,
        "key.doc.column" : 20,
        "key.doc.comment" : "`Sessions` protocol implemented by a `KeyedCache`.",
        "key.doc.declaration" : "public final class KeyedCacheSessions : Sessions, ServiceType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift\" line=\"4\" column=\"20\"><Name>KeyedCacheSessions<\/Name><USR>s:5Vapor18KeyedCacheSessionsC<\/USR><Declaration>public final class KeyedCacheSessions : Sessions, ServiceType<\/Declaration><CommentParts><Abstract><Para><codeVoice>Sessions<\/codeVoice> protocol implemented by a <codeVoice>KeyedCache<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 4,
        "key.doc.name" : "KeyedCacheSessions",
        "key.doc.type" : "Class",
        "key.doclength" : 55,
        "key.docoffset" : 15,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 109
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 119
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>KeyedCacheSessions<\/decl.name> : <ref.protocol usr=\"s:5Vapor8SessionsP\">Sessions<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Sessions"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1644,
        "key.name" : "KeyedCacheSessions",
        "key.namelength" : 18,
        "key.nameoffset" : 89,
        "key.offset" : 83,
        "key.parsed_declaration" : "public final class KeyedCacheSessions: Sessions, ServiceType",
        "key.parsed_scope.end" : 48,
        "key.parsed_scope.start" : 4,
        "key.runtime_name" : "_TtC4main18KeyedCacheSessions",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 164
              }
            ],
            "key.bodylength" : 24,
            "key.bodyoffset" : 211,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static var serviceSupports: [Any.Type] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift\" line=\"6\" column=\"23\"><Name>serviceSupports<\/Name><USR>s:5Vapor18KeyedCacheSessionsC15serviceSupportsSayypXpGvpZ<\/USR><Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 6,
            "key.doc.name" : "serviceSupports",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 137,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>serviceSupports<\/decl.name>: <decl.var.type>[Any.Type]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 65,
            "key.name" : "serviceSupports",
            "key.namelength" : 15,
            "key.nameoffset" : 182,
            "key.offset" : 171,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP15serviceSupportsSayypXpGvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var serviceSupports: [Any.Type]",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 6,
            "key.typename" : "[Any.Type]",
            "key.typeusr" : "$SSayypXpGD",
            "key.usr" : "s:5Vapor18KeyedCacheSessionsC15serviceSupportsSayypXpGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor18KeyedCacheSessionsC\">KeyedCacheSessions<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 269
              }
            ],
            "key.bodylength" : 57,
            "key.bodyoffset" : 353,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> KeyedCacheSessions",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift\" line=\"9\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor18KeyedCacheSessionsC11makeService3forAC0F09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; KeyedCacheSessions<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 9,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 242,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor18KeyedCacheSessionsC\">KeyedCacheSessions<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 135,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 288,
            "key.offset" : 276,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> KeyedCacheSessions",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 9,
            "key.substructure" : [

            ],
            "key.typename" : "(KeyedCacheSessions.Type) -> (Container) throws -> KeyedCacheSessions",
            "key.typeusr" : "$S3for5Vapor18KeyedCacheSessionsC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor18KeyedCacheSessionsC11makeService3forAC0F09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let keyedCache: <Type usr=\"s:11DatabaseKit10KeyedCacheP\">KeyedCache<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 507
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "The underlying `KeyedCache` this class uses to implement the `Sessions` protocol.",
            "key.doc.declaration" : "public let keyedCache: KeyedCache",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift\" line=\"14\" column=\"16\"><Name>keyedCache<\/Name><USR>s:5Vapor18KeyedCacheSessionsC05keyedC011DatabaseKit0bC0_pvp<\/USR><Declaration>public let keyedCache: KeyedCache<\/Declaration><CommentParts><Abstract><Para>The underlying <codeVoice>KeyedCache<\/codeVoice> this class uses to implement the <codeVoice>Sessions<\/codeVoice> protocol.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 14,
            "key.doc.name" : "keyedCache",
            "key.doc.type" : "Other",
            "key.doclength" : 86,
            "key.docoffset" : 417,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>keyedCache<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11DatabaseKit10KeyedCacheP\">KeyedCache<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.name" : "keyedCache",
            "key.namelength" : 10,
            "key.nameoffset" : 518,
            "key.offset" : 514,
            "key.parsed_declaration" : "public let keyedCache: KeyedCache",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.typename" : "KeyedCache",
            "key.typeusr" : "$S11DatabaseKit10KeyedCache_pD",
            "key.usr" : "s:5Vapor18KeyedCacheSessionsC05keyedC011DatabaseKit0bC0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(keyedCache: <Type usr=\"s:11DatabaseKit10KeyedCacheP\">KeyedCache<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 589
              }
            ],
            "key.bodylength" : 42,
            "key.bodyoffset" : 626,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `KeyedCacheSessions`",
            "key.doc.declaration" : "public init(keyedCache: KeyedCache)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift\" line=\"17\" column=\"12\"><Name>init(keyedCache:)<\/Name><USR>s:5Vapor18KeyedCacheSessionsC05keyedC0AC11DatabaseKit0bC0_p_tcfc<\/USR><Declaration>public init(keyedCache: KeyedCache)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>KeyedCacheSessions<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 17,
            "key.doc.name" : "init(keyedCache:)",
            "key.doc.type" : "Function",
            "key.doclength" : 39,
            "key.docoffset" : 546,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>keyedCache<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:11DatabaseKit10KeyedCacheP\">KeyedCache<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 73,
            "key.name" : "init(keyedCache:)",
            "key.namelength" : 28,
            "key.nameoffset" : 596,
            "key.offset" : 596,
            "key.parsed_declaration" : "public init(keyedCache: KeyedCache)",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 17,
            "key.substructure" : [

            ],
            "key.typename" : "(KeyedCacheSessions.Type) -> (KeyedCache) -> KeyedCacheSessions",
            "key.typeusr" : "$S10keyedCache5Vapor05KeyedB8SessionsC11DatabaseKit0dB0_p_tcD",
            "key.usr" : "s:5Vapor18KeyedCacheSessionsC05keyedC0AC11DatabaseKit0bC0_p_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func createSession(_ session: <Type usr=\"s:5Vapor7SessionC\">Session<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 699
              }
            ],
            "key.bodylength" : 184,
            "key.bodyoffset" : 769,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Sessions`.",
            "key.doc.declaration" : "public func createSession(_ session: Session) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift\" line=\"22\" column=\"17\"><Name>createSession(_:)<\/Name><USR>s:5Vapor18KeyedCacheSessionsC13createSessiony3NIO15EventLoopFutureCyytGAA0F0CKF<\/USR><Declaration>public func createSession(_ session: Session) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Sessions<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 22,
            "key.doc.name" : "createSession(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 20,
            "key.docoffset" : 675,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>createSession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>session<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 248,
            "key.name" : "createSession(_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 711,
            "key.offset" : 706,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor8SessionsP13createSessiony3NIO15EventLoopFutureCyytGAA0D0CKF"
              }
            ],
            "key.parsed_declaration" : "public func createSession(_ session: Session) throws -> Future<Void>",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 22,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let sessionID: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sessionID<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 80,
                "key.name" : "sessionID",
                "key.namelength" : 9,
                "key.nameoffset" : 782,
                "key.offset" : 778,
                "key.parsed_declaration" : "let sessionID = try CryptoRandom().generateData(count: 16).base64EncodedString()",
                "key.parsed_scope.end" : 23,
                "key.parsed_scope.start" : 23,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:5Vapor18KeyedCacheSessionsC13createSessiony3NIO15EventLoopFutureCyytGAA0F0CKF9sessionIDL_SSvp"
              }
            ],
            "key.typename" : "(KeyedCacheSessions) -> (Session) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCyytG5Vapor7SessionCKcD",
            "key.usr" : "s:5Vapor18KeyedCacheSessionsC13createSessiony3NIO15EventLoopFutureCyytGAA0F0CKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func readSession(sessionID: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7SessionC\">Session<\/Type>?&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 984
              }
            ],
            "key.bodylength" : 161,
            "key.bodyoffset" : 1055,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Sessions`.",
            "key.doc.declaration" : "public func readSession(sessionID: String) throws -> Future<Session?>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift\" line=\"29\" column=\"17\"><Name>readSession(sessionID:)<\/Name><USR>s:5Vapor18KeyedCacheSessionsC11readSession9sessionID3NIO15EventLoopFutureCyAA0F0CSgGSS_tKF<\/USR><Declaration>public func readSession(sessionID: String) throws -&gt; Future&lt;Session?&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Sessions<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 29,
            "key.doc.name" : "readSession(sessionID:)",
            "key.doc.type" : "Function",
            "key.doclength" : 20,
            "key.docoffset" : 960,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>readSession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>sessionID<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class>?&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 226,
            "key.name" : "readSession(sessionID:)",
            "key.namelength" : 30,
            "key.nameoffset" : 996,
            "key.offset" : 991,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor8SessionsP11readSession9sessionID3NIO15EventLoopFutureCyAA0D0CSgGSS_tKF"
              }
            ],
            "key.parsed_declaration" : "public func readSession(sessionID: String) throws -> Future<Session?>",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 29,
            "key.substructure" : [

            ],
            "key.typename" : "(KeyedCacheSessions) -> (String) throws -> EventLoopFuture<Session?>",
            "key.typeusr" : "$S9sessionID3NIO15EventLoopFutureCy5Vapor7SessionCSgGSS_tKcD",
            "key.usr" : "s:5Vapor18KeyedCacheSessionsC11readSession9sessionID3NIO15EventLoopFutureCyAA0F0CSgGSS_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func updateSession(_ session: <Type usr=\"s:5Vapor7SessionC\">Session<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1247
              }
            ],
            "key.bodylength" : 257,
            "key.bodyoffset" : 1317,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Sessions`.",
            "key.doc.declaration" : "public func updateSession(_ session: Session) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift\" line=\"36\" column=\"17\"><Name>updateSession(_:)<\/Name><USR>s:5Vapor18KeyedCacheSessionsC13updateSessiony3NIO15EventLoopFutureCyytGAA0F0CKF<\/USR><Declaration>public func updateSession(_ session: Session) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Sessions<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 36,
            "key.doc.name" : "updateSession(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 20,
            "key.docoffset" : 1223,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateSession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>session<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 321,
            "key.name" : "updateSession(_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 1259,
            "key.offset" : 1254,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor8SessionsP13updateSessiony3NIO15EventLoopFutureCyytGAA0D0CKF"
              }
            ],
            "key.parsed_declaration" : "public func updateSession(_ session: Session) throws -> Future<Void>",
            "key.parsed_scope.end" : 42,
            "key.parsed_scope.start" : 36,
            "key.substructure" : [

            ],
            "key.typename" : "(KeyedCacheSessions) -> (Session) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCyytG5Vapor7SessionCKcD",
            "key.usr" : "s:5Vapor18KeyedCacheSessionsC13updateSessiony3NIO15EventLoopFutureCyytGAA0F0CKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func destroySession(sessionID: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1605
              }
            ],
            "key.bodylength" : 49,
            "key.bodyoffset" : 1675,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Sessions`.",
            "key.doc.declaration" : "public func destroySession(sessionID: String) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift\" line=\"45\" column=\"17\"><Name>destroySession(sessionID:)<\/Name><USR>s:5Vapor18KeyedCacheSessionsC14destroySession9sessionID3NIO15EventLoopFutureCyytGSS_tKF<\/USR><Declaration>public func destroySession(sessionID: String) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Sessions<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 45,
            "key.doc.name" : "destroySession(sessionID:)",
            "key.doc.type" : "Function",
            "key.doclength" : 20,
            "key.docoffset" : 1581,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/KeyedCacheSessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>destroySession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>sessionID<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 113,
            "key.name" : "destroySession(sessionID:)",
            "key.namelength" : 33,
            "key.nameoffset" : 1617,
            "key.offset" : 1612,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor8SessionsP14destroySession9sessionID3NIO15EventLoopFutureCyytGSS_tKF"
              }
            ],
            "key.parsed_declaration" : "public func destroySession(sessionID: String) throws -> Future<Void>",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 45,
            "key.substructure" : [

            ],
            "key.typename" : "(KeyedCacheSessions) -> (String) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$S9sessionID3NIO15EventLoopFutureCyytGSS_tKcD",
            "key.usr" : "s:5Vapor18KeyedCacheSessionsC14destroySession9sessionID3NIO15EventLoopFutureCyytGSS_tKF"
          }
        ],
        "key.typename" : "KeyedCacheSessions.Type",
        "key.typeusr" : "$S5Vapor18KeyedCacheSessionsCmD",
        "key.usr" : "s:5Vapor18KeyedCacheSessionsC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1067,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class MemorySessions : <Type usr=\"s:5Vapor8SessionsP\">Sessions<\/Type>, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 53
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 46
          }
        ],
        "key.bodylength" : 965,
        "key.bodyoffset" : 100,
        "key.doc.column" : 20,
        "key.doc.comment" : "Simple in-memory sessions implementation.",
        "key.doc.declaration" : "public final class MemorySessions : Sessions, Service",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift\" line=\"2\" column=\"20\"><Name>MemorySessions<\/Name><USR>s:5Vapor14MemorySessionsC<\/USR><Declaration>public final class MemorySessions : Sessions, Service<\/Declaration><CommentParts><Abstract><Para>Simple in-memory sessions implementation.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "MemorySessions",
        "key.doc.type" : "Class",
        "key.doclength" : 46,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 8,
            "key.offset" : 81
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 91
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>MemorySessions<\/decl.name> : <ref.protocol usr=\"s:5Vapor8SessionsP\">Sessions<\/ref.protocol>, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Sessions"
          },
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1007,
        "key.name" : "MemorySessions",
        "key.namelength" : 14,
        "key.nameoffset" : 65,
        "key.offset" : 59,
        "key.parsed_declaration" : "public final class MemorySessions: Sessions, Service",
        "key.parsed_scope.end" : 30,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtC4main14MemorySessions",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let keyedCacheSessions: <Type usr=\"s:5Vapor18KeyedCacheSessionsC\">KeyedCacheSessions<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 136
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Actual implementation.",
            "key.doc.declaration" : "private let keyedCacheSessions: KeyedCacheSessions",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift\" line=\"4\" column=\"17\"><Name>keyedCacheSessions<\/Name><USR>s:5Vapor14MemorySessionsC010keyedCacheC033_DC1D0BB89230003075E4E0C91C317623LLAA05KeyedeC0Cvp<\/USR><Declaration>private let keyedCacheSessions: KeyedCacheSessions<\/Declaration><CommentParts><Abstract><Para>Actual implementation.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "keyedCacheSessions",
            "key.doc.type" : "Other",
            "key.doclength" : 27,
            "key.docoffset" : 105,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>keyedCacheSessions<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor18KeyedCacheSessionsC\">KeyedCacheSessions<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 42,
            "key.name" : "keyedCacheSessions",
            "key.namelength" : 18,
            "key.nameoffset" : 148,
            "key.offset" : 144,
            "key.parsed_declaration" : "private let keyedCacheSessions: KeyedCacheSessions",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "KeyedCacheSessions",
            "key.typeusr" : "$S5Vapor18KeyedCacheSessionsCD",
            "key.usr" : "s:5Vapor14MemorySessionsC010keyedCacheC033_DC1D0BB89230003075E4E0C91C317623LLAA05KeyedeC0Cvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 264
              }
            ],
            "key.bodylength" : 90,
            "key.bodyoffset" : 279,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `MemorySessions` with the supplied cookie factory.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift\" line=\"7\" column=\"12\"><Name>init()<\/Name><USR>s:5Vapor14MemorySessionsCACycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>MemorySessions<\/codeVoice> with the supplied cookie factory.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 7,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 68,
            "key.docoffset" : 192,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 99,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 271,
            "key.offset" : 271,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 7,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor14MemorySessionsC2onAC3NIO14EventLoopGroup_p_tcfc\">init(on:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(MemorySessions.Type) -> () -> MemorySessions",
            "key.typeusr" : "$S5Vapor14MemorySessionsCycD",
            "key.usr" : "s:5Vapor14MemorySessionsCACycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func createSession(_ session: <Type usr=\"s:5Vapor7SessionC\">Session<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 400
              }
            ],
            "key.bodylength" : 66,
            "key.bodyoffset" : 470,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Sessions`.",
            "key.doc.declaration" : "public func createSession(_ session: Session) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift\" line=\"12\" column=\"17\"><Name>createSession(_:)<\/Name><USR>s:5Vapor14MemorySessionsC13createSessiony3NIO15EventLoopFutureCyytGAA0E0CKF<\/USR><Declaration>public func createSession(_ session: Session) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Sessions<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 12,
            "key.doc.name" : "createSession(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 20,
            "key.docoffset" : 376,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>createSession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>session<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 130,
            "key.name" : "createSession(_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 412,
            "key.offset" : 407,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor8SessionsP13createSessiony3NIO15EventLoopFutureCyytGAA0D0CKF"
              }
            ],
            "key.parsed_declaration" : "public func createSession(_ session: Session) throws -> Future<Void>",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 12,
            "key.substructure" : [

            ],
            "key.typename" : "(MemorySessions) -> (Session) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCyytG5Vapor7SessionCKcD",
            "key.usr" : "s:5Vapor14MemorySessionsC13createSessiony3NIO15EventLoopFutureCyytGAA0E0CKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func readSession(sessionID: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7SessionC\">Session<\/Type>?&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 567
              }
            ],
            "key.bodylength" : 77,
            "key.bodyoffset" : 638,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Sessions`.",
            "key.doc.declaration" : "public func readSession(sessionID: String) throws -> Future<Session?>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift\" line=\"17\" column=\"17\"><Name>readSession(sessionID:)<\/Name><USR>s:5Vapor14MemorySessionsC11readSession9sessionID3NIO15EventLoopFutureCyAA0E0CSgGSS_tKF<\/USR><Declaration>public func readSession(sessionID: String) throws -&gt; Future&lt;Session?&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Sessions<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 17,
            "key.doc.name" : "readSession(sessionID:)",
            "key.doc.type" : "Function",
            "key.doclength" : 20,
            "key.docoffset" : 543,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>readSession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>sessionID<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class>?&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 142,
            "key.name" : "readSession(sessionID:)",
            "key.namelength" : 30,
            "key.nameoffset" : 579,
            "key.offset" : 574,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor8SessionsP11readSession9sessionID3NIO15EventLoopFutureCyAA0D0CSgGSS_tKF"
              }
            ],
            "key.parsed_declaration" : "public func readSession(sessionID: String) throws -> Future<Session?>",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 17,
            "key.substructure" : [

            ],
            "key.typename" : "(MemorySessions) -> (String) throws -> EventLoopFuture<Session?>",
            "key.typeusr" : "$S9sessionID3NIO15EventLoopFutureCy5Vapor7SessionCSgGSS_tKcD",
            "key.usr" : "s:5Vapor14MemorySessionsC11readSession9sessionID3NIO15EventLoopFutureCyAA0E0CSgGSS_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func updateSession(_ session: <Type usr=\"s:5Vapor7SessionC\">Session<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 746
              }
            ],
            "key.bodylength" : 66,
            "key.bodyoffset" : 816,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Sessions`.",
            "key.doc.declaration" : "public func updateSession(_ session: Session) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift\" line=\"22\" column=\"17\"><Name>updateSession(_:)<\/Name><USR>s:5Vapor14MemorySessionsC13updateSessiony3NIO15EventLoopFutureCyytGAA0E0CKF<\/USR><Declaration>public func updateSession(_ session: Session) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Sessions<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 22,
            "key.doc.name" : "updateSession(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 20,
            "key.docoffset" : 722,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateSession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>session<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 130,
            "key.name" : "updateSession(_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 758,
            "key.offset" : 753,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor8SessionsP13updateSessiony3NIO15EventLoopFutureCyytGAA0D0CKF"
              }
            ],
            "key.parsed_declaration" : "public func updateSession(_ session: Session) throws -> Future<Void>",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 22,
            "key.substructure" : [

            ],
            "key.typename" : "(MemorySessions) -> (Session) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCyytG5Vapor7SessionCKcD",
            "key.usr" : "s:5Vapor14MemorySessionsC13updateSessiony3NIO15EventLoopFutureCyytGAA0E0CKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func destroySession(sessionID: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 913
              }
            ],
            "key.bodylength" : 80,
            "key.bodyoffset" : 983,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Sessions`.",
            "key.doc.declaration" : "public func destroySession(sessionID: String) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift\" line=\"27\" column=\"17\"><Name>destroySession(sessionID:)<\/Name><USR>s:5Vapor14MemorySessionsC14destroySession9sessionID3NIO15EventLoopFutureCyytGSS_tKF<\/USR><Declaration>public func destroySession(sessionID: String) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Sessions<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 27,
            "key.doc.name" : "destroySession(sessionID:)",
            "key.doc.type" : "Function",
            "key.doclength" : 20,
            "key.docoffset" : 889,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/MemorySessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>destroySession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>sessionID<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 144,
            "key.name" : "destroySession(sessionID:)",
            "key.namelength" : 33,
            "key.nameoffset" : 925,
            "key.offset" : 920,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor8SessionsP14destroySession9sessionID3NIO15EventLoopFutureCyytGSS_tKF"
              }
            ],
            "key.parsed_declaration" : "public func destroySession(sessionID: String) throws -> Future<Void>",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 27,
            "key.substructure" : [

            ],
            "key.typename" : "(MemorySessions) -> (String) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$S9sessionID3NIO15EventLoopFutureCyytGSS_tKcD",
            "key.usr" : "s:5Vapor14MemorySessionsC14destroySession9sessionID3NIO15EventLoopFutureCyytGSS_tKF"
          }
        ],
        "key.typename" : "MemorySessions.Type",
        "key.typeusr" : "$S5Vapor14MemorySessionsCmD",
        "key.usr" : "s:5Vapor14MemorySessionsC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Request+Session.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1326,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public final class Request : <Type usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/Type>, <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>, <Type usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/Type>, <Type usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type>, <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type><\/Declaration>",
        "key.bodylength" : 1305,
        "key.bodyoffset" : 19,
        "key.doc.column" : 20,
        "key.doc.declaration" : "public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible",
        "key.doc.discussion" : [
          {
            "Para" : "Use `Request` to access information about the `HTTPRequest` (`req.http`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also use `Request` to create services you may need while generating a response (`req.make()`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` also carries a `ParametersContainer` for routing. Use `parameters` to fetch parameterized values."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` is `DatabaseConnectable`, meaning you can use it in-place of an actual `DatabaseConnection`. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPRequest`, `Container`, `ParameterContainer`, and `DatabaseConnectable` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"27\" column=\"20\"><Name>Request<\/Name><USR>s:5Vapor7RequestC<\/USR><Declaration>public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible<\/Declaration><CommentParts><Abstract><Para><codeVoice>Request<\/codeVoice> is a service-container wrapper around an <codeVoice>HTTPRequest<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Use <codeVoice>Request<\/codeVoice> to access information about the <codeVoice>HTTPRequest<\/codeVoice> (<codeVoice>req.http<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(req.http.url.path) \/\/ \"\/hello\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also use <codeVoice>Request<\/codeVoice> to create services you may need while generating a response (<codeVoice>req.make()<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let client = try req.make(Client.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(client) \/\/ Client]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[client.get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> also carries a <codeVoice>ParametersContainer<\/codeVoice> for routing. Use <codeVoice>parameters<\/codeVoice> to fetch parameterized values.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"hello\", String.parameter) { req -> String in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let name = try req.parameters.next(String.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> is <codeVoice>DatabaseConnectable<\/codeVoice>, meaning you can use it in-place of an actual <codeVoice>DatabaseConnection<\/codeVoice>. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let users = User.query(on: req).all()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPRequest<\/codeVoice>, <codeVoice>Container<\/codeVoice>, <codeVoice>ParameterContainer<\/codeVoice>, and <codeVoice>DatabaseConnectable<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 27,
        "key.doc.name" : "Request",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Request<\/decl.name> : <ref.protocol usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/ref.protocol>, <ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/ref.protocol>, <ref.typealias usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/ref.typealias>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1325,
        "key.name" : "Request",
        "key.namelength" : 7,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func session() throws -&gt; <Type usr=\"s:5Vapor7SessionC\">Session<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 401
              }
            ],
            "key.bodylength" : 685,
            "key.bodyoffset" : 442,
            "key.doc.column" : 17,
            "key.doc.comment" : "Returns the current `Session` or creates one.\n\n    router.get(\"session\") { req -> String in\n        let session = try req.session()\n        session[\"name\"] = \"Vapor\"\n        return \"Session set\"\n    }\n\n- note: `SessionsMiddleware` must be added and enabled.\n- returns: `Session` for this `Request`.",
            "key.doc.declaration" : "public func session() throws -> Session",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Request+Session.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Request+Session.swift\" line=\"12\" column=\"17\"><Name>session()<\/Name><USR>s:5Vapor7RequestC7sessionAA7SessionCyKF<\/USR><Declaration>public func session() throws -&gt; Session<\/Declaration><CommentParts><Abstract><Para>Returns the current <codeVoice>Session<\/codeVoice> or creates one.<\/Para><\/Abstract><ResultDiscussion><Para><codeVoice>Session<\/codeVoice> for this <codeVoice>Request<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"session\") { req -> String in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let session = try req.session()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    session[\"name\"] = \"Vapor\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Session set\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para><codeVoice>SessionsMiddleware<\/codeVoice> must be added and enabled.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 12,
            "key.doc.name" : "session()",
            "key.doc.result_discussion" : [
              {
                "Para" : "`Session` for this `Request`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 373,
            "key.docoffset" : 24,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Request+Session.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>session<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 720,
            "key.name" : "session()",
            "key.namelength" : 9,
            "key.nameoffset" : 413,
            "key.offset" : 408,
            "key.parsed_declaration" : "public func session() throws -> Session",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 12,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let cache: <Type usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Request+Session.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>cache<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 56,
                "key.name" : "cache",
                "key.namelength" : 5,
                "key.nameoffset" : 455,
                "key.offset" : 451,
                "key.parsed_declaration" : "let cache = try privateContainer.make(SessionCache.self)",
                "key.parsed_scope.end" : 13,
                "key.parsed_scope.start" : 13,
                "key.typename" : "SessionCache",
                "key.typeusr" : "$S5Vapor12SessionCacheCD",
                "key.usr" : "s:5Vapor7RequestC7sessionAA7SessionCyKF5cacheL_AA0D5CacheCvp"
              }
            ],
            "key.typename" : "(Request) -> () throws -> Session",
            "key.typeusr" : "$S5Vapor7SessionCyKcD",
            "key.usr" : "s:5Vapor7RequestC7sessionAA7SessionCyKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func destroySession() throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1187
              }
            ],
            "key.bodylength" : 98,
            "key.bodyoffset" : 1224,
            "key.doc.column" : 17,
            "key.doc.comment" : "Destroys the current session, if one exists.",
            "key.doc.declaration" : "public func destroySession() throws",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Request+Session.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Request+Session.swift\" line=\"34\" column=\"17\"><Name>destroySession()<\/Name><USR>s:5Vapor7RequestC14destroySessionyyKF<\/USR><Declaration>public func destroySession() throws<\/Declaration><CommentParts><Abstract><Para>Destroys the current session, if one exists.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 34,
            "key.doc.name" : "destroySession()",
            "key.doc.type" : "Function",
            "key.doclength" : 49,
            "key.docoffset" : 1134,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Request+Session.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>destroySession<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 129,
            "key.name" : "destroySession()",
            "key.namelength" : 16,
            "key.nameoffset" : 1199,
            "key.offset" : 1194,
            "key.parsed_declaration" : "public func destroySession() throws",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 34,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let cache: <Type usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Request+Session.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>cache<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 56,
                "key.name" : "cache",
                "key.namelength" : 5,
                "key.nameoffset" : 1237,
                "key.offset" : 1233,
                "key.parsed_declaration" : "let cache = try privateContainer.make(SessionCache.self)",
                "key.parsed_scope.end" : 35,
                "key.parsed_scope.start" : 35,
                "key.typename" : "SessionCache",
                "key.typeusr" : "$S5Vapor12SessionCacheCD",
                "key.usr" : "s:5Vapor7RequestC14destroySessionyyKF5cacheL_AA0D5CacheCvp"
              }
            ],
            "key.typename" : "(Request) -> () throws -> ()",
            "key.typeusr" : "$SyyKcD",
            "key.usr" : "s:5Vapor7RequestC14destroySessionyyKF"
          }
        ],
        "key.typename" : "Request.Type",
        "key.typeusr" : "$S5Vapor7RequestCmD",
        "key.usr" : "s:5Vapor7RequestC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 905,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class Session<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 313
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 306
          }
        ],
        "key.bodylength" : 569,
        "key.bodyoffset" : 334,
        "key.doc.column" : 20,
        "key.doc.comment" : "Sessions are a method for associating data with a client accessing your app.\n\nEach session has a unique identifier that is used to look it up with each request\nto your app. This is usually done via HTTP cookies.\n\nSee `Request.session()` and `SessionsMiddleware` for more information.",
        "key.doc.declaration" : "public final class Session",
        "key.doc.discussion" : [
          {
            "Para" : "Each session has a unique identifier that is used to look it up with each request to your app. This is usually done via HTTP cookies."
          },
          {
            "Para" : "See `Request.session()` and `SessionsMiddleware` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift\" line=\"7\" column=\"20\"><Name>Session<\/Name><USR>s:5Vapor7SessionC<\/USR><Declaration>public final class Session<\/Declaration><CommentParts><Abstract><Para>Sessions are a method for associating data with a client accessing your app.<\/Para><\/Abstract><Discussion><Para>Each session has a unique identifier that is used to look it up with each request to your app. This is usually done via HTTP cookies.<\/Para><Para>See <codeVoice>Request.session()<\/codeVoice> and <codeVoice>SessionsMiddleware<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 7,
        "key.doc.name" : "Session",
        "key.doc.type" : "Class",
        "key.doclength" : 306,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Session<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 585,
        "key.name" : "Session",
        "key.namelength" : 7,
        "key.nameoffset" : 325,
        "key.offset" : 319,
        "key.parsed_declaration" : "public final class Session",
        "key.parsed_scope.end" : 27,
        "key.parsed_scope.start" : 7,
        "key.runtime_name" : "_TtC4main7Session",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var id: <Type usr=\"s:SS\">String<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 405
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "This session's unique identifier. Usually a cookie value.",
            "key.doc.declaration" : "public var id: String?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift\" line=\"9\" column=\"16\"><Name>id<\/Name><USR>s:5Vapor7SessionC2idSSSgvp<\/USR><Declaration>public var id: String?<\/Declaration><CommentParts><Abstract><Para>This session’s unique identifier. Usually a cookie value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 9,
            "key.doc.name" : "id",
            "key.doc.type" : "Other",
            "key.doclength" : 62,
            "key.docoffset" : 339,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>id<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 15,
            "key.name" : "id",
            "key.namelength" : 2,
            "key.nameoffset" : 416,
            "key.offset" : 412,
            "key.parsed_declaration" : "public var id: String?",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String?",
            "key.typeusr" : "$SSSSgD",
            "key.usr" : "s:5Vapor7SessionC2idSSSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var data: <Type usr=\"s:5Vapor11SessionDataV\">SessionData<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 462
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "This session's data.",
            "key.doc.declaration" : "public var data: SessionData",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift\" line=\"12\" column=\"16\"><Name>data<\/Name><USR>s:5Vapor7SessionC4dataAA0B4DataVvp<\/USR><Declaration>public var data: SessionData<\/Declaration><CommentParts><Abstract><Para>This session’s data.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 12,
            "key.doc.name" : "data",
            "key.doc.type" : "Other",
            "key.doclength" : 25,
            "key.docoffset" : 433,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor11SessionDataV\">SessionData<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "data",
            "key.namelength" : 4,
            "key.nameoffset" : 473,
            "key.offset" : 469,
            "key.parsed_declaration" : "public var data: SessionData",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "SessionData",
            "key.typeusr" : "$S5Vapor11SessionDataVD",
            "key.usr" : "s:5Vapor7SessionC4dataAA0B4DataVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(id: <Type usr=\"s:SS\">String<\/Type>? = default, data: <Type usr=\"s:5Vapor11SessionDataV\">SessionData<\/Type> = default)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 598
              }
            ],
            "key.bodylength" : 51,
            "key.bodyoffset" : 659,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `Session`.\n\nNormally you will use `Request.session()` to do this.",
            "key.doc.declaration" : "public init(id: String? = default, data: SessionData = default)",
            "key.doc.discussion" : [
              {
                "Para" : "Normally you will use `Request.session()` to do this."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift\" line=\"17\" column=\"12\"><Name>init(id:data:)<\/Name><USR>s:5Vapor7SessionC2id4dataACSSSg_AA0B4DataVtcfc<\/USR><Declaration>public init(id: String? = default, data: SessionData = default)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>Session<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Normally you will use <codeVoice>Request.session()<\/codeVoice> to do this.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 17,
            "key.doc.name" : "init(id:data:)",
            "key.doc.type" : "Function",
            "key.doclength" : 98,
            "key.docoffset" : 496,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>id<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:5Vapor11SessionDataV\">SessionData<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 106,
            "key.name" : "init(id:data:)",
            "key.namelength" : 52,
            "key.nameoffset" : 605,
            "key.offset" : 605,
            "key.parsed_declaration" : "public init(id: String? = nil, data: SessionData = .init())",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 17,
            "key.substructure" : [

            ],
            "key.typename" : "(Session.Type) -> (String?, SessionData) -> Session",
            "key.typeusr" : "$S2id4data5Vapor7SessionCSSSg_AC0D4DataVtcD",
            "key.usr" : "s:5Vapor7SessionC2id4dataACSSSg_AA0B4DataVtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public subscript(key: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:SS\">String<\/Type>? { get set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 766
              }
            ],
            "key.bodylength" : 91,
            "key.bodyoffset" : 810,
            "key.doc.column" : 12,
            "key.doc.comment" : "Convenience `[String: String]` accessor.",
            "key.doc.declaration" : "public subscript(key: String) -> String? { get set }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift\" line=\"23\" column=\"12\"><Name>subscript(_:)<\/Name><USR>s:5Vapor7SessionCySSSgSScip<\/USR><Declaration>public subscript(key: String) -&gt; String? { get set }<\/Declaration><CommentParts><Abstract><Para>Convenience <codeVoice>[String: String]<\/codeVoice> accessor.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 23,
            "key.doc.name" : "subscript(_:)",
            "key.doc.type" : "Other",
            "key.doclength" : 45,
            "key.docoffset" : 717,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Session.swift",
            "key.fully_annotated_decl" : "<decl.function.subscript><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>subscript<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>key<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct>?<\/decl.function.returntype> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.function.subscript>",
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.length" : 129,
            "key.name" : "subscript(_:)",
            "key.namelength" : 24,
            "key.nameoffset" : 773,
            "key.offset" : 773,
            "key.parsed_declaration" : "public subscript(_ key: String) -> String?",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 23,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.substructure" : [

            ],
            "key.typename" : "(String) -> String?",
            "key.typeusr" : "$SySSSgSScD",
            "key.usr" : "s:5Vapor7SessionCySSSgSScip"
          }
        ],
        "key.typename" : "Session.Type",
        "key.typeusr" : "$S5Vapor7SessionCmD",
        "key.usr" : "s:5Vapor7SessionC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 557,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>internal final class SessionCache : <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 95
          },
          {
            "key.attribute" : "source.decl.attribute.internal",
            "key.length" : 8,
            "key.offset" : 86
          }
        ],
        "key.bodylength" : 421,
        "key.bodyoffset" : 134,
        "key.doc.column" : 22,
        "key.doc.comment" : "Singleton service cache for a `Session`. Used with a message's private container.",
        "key.doc.declaration" : "internal final class SessionCache : ServiceType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift\" line=\"2\" column=\"22\"><Name>SessionCache<\/Name><USR>s:5Vapor12SessionCacheC<\/USR><Declaration>internal final class SessionCache : ServiceType<\/Declaration><CommentParts><Abstract><Para>Singleton service cache for a <codeVoice>Session<\/codeVoice>. Used with a message’s private container.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "SessionCache",
        "key.doc.type" : "Class",
        "key.doclength" : 86,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 121
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>SessionCache<\/decl.name> : <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 455,
        "key.name" : "SessionCache",
        "key.namelength" : 12,
        "key.nameoffset" : 107,
        "key.offset" : 101,
        "key.parsed_declaration" : "internal final class SessionCache: ServiceType",
        "key.parsed_scope.end" : 19,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtC4main12SessionCache",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/Type><\/Declaration>",
            "key.bodylength" : 28,
            "key.bodyoffset" : 237,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "static func makeService(for worker: Container) throws -> SessionCache",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift\" line=\"4\" column=\"17\"><Name>makeService(for:)<\/Name><USR>s:5Vapor12SessionCacheC11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>static func makeService(for worker: Container) throws -&gt; SessionCache<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 4,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 139,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 100,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 178,
            "key.offset" : 166,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "static func makeService(for worker: Container) throws -> SessionCache",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 4,
            "key.substructure" : [

            ],
            "key.typename" : "(SessionCache.Type) -> (Container) throws -> SessionCache",
            "key.typeusr" : "$S3for5Vapor12SessionCacheC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor12SessionCacheC11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var middlewareFlag: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "Set to `true` when passing through middleware.",
            "key.doc.declaration" : "var middlewareFlag: Bool",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift\" line=\"9\" column=\"9\"><Name>middlewareFlag<\/Name><USR>s:5Vapor12SessionCacheC14middlewareFlagSbvp<\/USR><Declaration>var middlewareFlag: Bool<\/Declaration><CommentParts><Abstract><Para>Set to <codeVoice>true<\/codeVoice> when passing through middleware.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 9,
            "key.doc.name" : "middlewareFlag",
            "key.doc.type" : "Other",
            "key.doclength" : 51,
            "key.docoffset" : 272,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>middlewareFlag<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "middlewareFlag",
            "key.namelength" : 14,
            "key.nameoffset" : 331,
            "key.offset" : 327,
            "key.parsed_declaration" : "var middlewareFlag: Bool",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Bool",
            "key.typeusr" : "$SSbD",
            "key.usr" : "s:5Vapor12SessionCacheC14middlewareFlagSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var session: <Type usr=\"s:5Vapor7SessionC\">Session<\/Type>?<\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "The cached session.",
            "key.doc.declaration" : "var session: Vapor.Session?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift\" line=\"12\" column=\"9\"><Name>session<\/Name><USR>s:5Vapor12SessionCacheC7sessionAA0B0CSgvp<\/USR><Declaration>var session: Vapor.Session?<\/Declaration><CommentParts><Abstract><Para>The cached session.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 12,
            "key.doc.name" : "session",
            "key.doc.type" : "Other",
            "key.doclength" : 24,
            "key.docoffset" : 357,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>session<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class>?<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "session",
            "key.namelength" : 7,
            "key.nameoffset" : 389,
            "key.offset" : 385,
            "key.parsed_declaration" : "var session: Session?",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Session?",
            "key.typeusr" : "$S5Vapor7SessionCSgD",
            "key.usr" : "s:5Vapor12SessionCacheC7sessionAA0B0CSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(session: <Type usr=\"s:5Vapor7SessionC\">Session<\/Type>? = default)<\/Declaration>",
            "key.bodylength" : 72,
            "key.bodyoffset" : 481,
            "key.doc.column" : 5,
            "key.doc.comment" : "Creates a new `SessionCache`.",
            "key.doc.declaration" : "init(session: Session? = default)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift\" line=\"15\" column=\"5\"><Name>init(session:)<\/Name><USR>s:5Vapor12SessionCacheC7sessionAcA0B0CSg_tcfc<\/USR><Declaration>init(session: Session? = default)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>SessionCache<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "init(session:)",
            "key.doc.type" : "Function",
            "key.doclength" : 34,
            "key.docoffset" : 412,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionCache.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class>?<\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 104,
            "key.name" : "init(session:)",
            "key.namelength" : 29,
            "key.nameoffset" : 450,
            "key.offset" : 450,
            "key.parsed_declaration" : "init(session: Session? = nil)",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [

            ],
            "key.typename" : "(SessionCache.Type) -> (Session?) -> SessionCache",
            "key.typeusr" : "$S7session5Vapor12SessionCacheCAB0C0CSg_tcD",
            "key.usr" : "s:5Vapor12SessionCacheC7sessionAcA0B0CSg_tcfc"
          }
        ],
        "key.typename" : "SessionCache.Type",
        "key.typeusr" : "$S5Vapor12SessionCacheCmD",
        "key.usr" : "s:5Vapor12SessionCacheC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 487,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct SessionData : <Type usr=\"s:s7Codablea\">Codable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 26
          }
        ],
        "key.bodylength" : 423,
        "key.bodyoffset" : 62,
        "key.doc.column" : 15,
        "key.doc.comment" : "Codable session data.",
        "key.doc.declaration" : "public struct SessionData : Codable",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift\" line=\"2\" column=\"15\"><Name>SessionData<\/Name><USR>s:5Vapor11SessionDataV<\/USR><Declaration>public struct SessionData : Codable<\/Declaration><CommentParts><Abstract><Para>Codable session data.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "SessionData",
        "key.doc.type" : "Class",
        "key.doclength" : 26,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 53
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SessionData<\/decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Codable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 453,
        "key.name" : "SessionData",
        "key.namelength" : 11,
        "key.nameoffset" : 40,
        "key.offset" : 33,
        "key.parsed_declaration" : "public struct SessionData: Codable",
        "key.parsed_scope.end" : 20,
        "key.parsed_scope.start" : 2,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal var storage: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 107
              }
            ],
            "key.doc.column" : 18,
            "key.doc.comment" : "Session codable object storage.",
            "key.doc.declaration" : "internal var storage: [String : String]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift\" line=\"4\" column=\"18\"><Name>storage<\/Name><USR>s:5Vapor11SessionDataV7storageSDyS2SGvp<\/USR><Declaration>internal var storage: [String : String]<\/Declaration><CommentParts><Abstract><Para>Session codable object storage.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "storage",
            "key.doc.type" : "Other",
            "key.doclength" : 36,
            "key.docoffset" : 67,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>storage<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "storage",
            "key.namelength" : 7,
            "key.nameoffset" : 120,
            "key.offset" : 116,
            "key.parsed_declaration" : "internal var storage: [String: String]",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "[String : String]",
            "key.typeusr" : "$SSDyS2SGD",
            "key.usr" : "s:5Vapor11SessionDataV7storageSDyS2SGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 193
              }
            ],
            "key.bodylength" : 27,
            "key.bodyoffset" : 208,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new, empty session data.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift\" line=\"7\" column=\"12\"><Name>init()<\/Name><USR>s:5Vapor11SessionDataVACycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Create a new, empty session data.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 7,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 38,
            "key.docoffset" : 151,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 36,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 200,
            "key.offset" : 200,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 7,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor11SessionDataV4fromACs7Decoder_p_tKcfc\">init(from:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(SessionData.Type) -> () -> SessionData",
            "key.typeusr" : "$S5Vapor11SessionDataVycD",
            "key.usr" : "s:5Vapor11SessionDataVACycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(from decoder: <Type usr=\"s:s7DecoderP\">Decoder<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 267
              }
            ],
            "key.bodylength" : 48,
            "key.bodyoffset" : 310,
            "key.doc.column" : 12,
            "key.doc.comment" : "See `Decodable`.",
            "key.doc.declaration" : "public init(from decoder: Decoder) throws",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift\" line=\"12\" column=\"12\"><Name>init(from:)<\/Name><USR>s:5Vapor11SessionDataV4fromACs7Decoder_p_tKcfc<\/USR><Declaration>public init(from decoder: Decoder) throws<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Decodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 12,
            "key.doc.name" : "init(from:)",
            "key.doc.type" : "Function",
            "key.doclength" : 21,
            "key.docoffset" : 242,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>decoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7DecoderP\">Decoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 85,
            "key.name" : "init(from:)",
            "key.namelength" : 27,
            "key.nameoffset" : 274,
            "key.offset" : 274,
            "key.overrides" : [
              {
                "key.usr" : "s:Se4fromxs7Decoder_p_tKcfc"
              }
            ],
            "key.parsed_declaration" : "public init(from decoder: Decoder) throws",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 12,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor11SessionDataVACycfc\">init()<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(SessionData.Type) -> (Decoder) throws -> SessionData",
            "key.typeusr" : "$S4from5Vapor11SessionDataVs7Decoder_p_tKcD",
            "key.usr" : "s:5Vapor11SessionDataV4fromACs7Decoder_p_tKcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(to encoder: <Type usr=\"s:s7EncoderP\">Encoder<\/Type>) throws<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 390
              }
            ],
            "key.bodylength" : 45,
            "key.bodyoffset" : 438,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Encodable`.",
            "key.doc.declaration" : "public func encode(to encoder: Encoder) throws",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift\" line=\"17\" column=\"17\"><Name>encode(to:)<\/Name><USR>s:5Vapor11SessionDataV6encode2toys7Encoder_p_tKF<\/USR><Declaration>public func encode(to encoder: Encoder) throws<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Encodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 17,
            "key.doc.name" : "encode(to:)",
            "key.doc.type" : "Function",
            "key.doclength" : 21,
            "key.docoffset" : 365,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionData.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encoder<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:s7EncoderP\">Encoder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 87,
            "key.name" : "encode(to:)",
            "key.namelength" : 27,
            "key.nameoffset" : 402,
            "key.offset" : 397,
            "key.overrides" : [
              {
                "key.usr" : "s:SE6encode2toys7Encoder_p_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(to encoder: Encoder) throws",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 17,
            "key.substructure" : [

            ],
            "key.typename" : "(SessionData) -> (Encoder) throws -> ()",
            "key.typeusr" : "$S2toys7Encoder_p_tKcD",
            "key.usr" : "s:5Vapor11SessionDataV6encode2toys7Encoder_p_tKF"
          }
        ],
        "key.typename" : "SessionData.Type",
        "key.typeusr" : "$S5Vapor11SessionDataVmD",
        "key.usr" : "s:5Vapor11SessionDataV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1300,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol Sessions<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 56
          }
        ],
        "key.bodylength" : 1216,
        "key.bodyoffset" : 82,
        "key.doc.column" : 17,
        "key.doc.comment" : "Capable of managing CRUD operations for `Session`s.",
        "key.doc.declaration" : "public protocol Sessions",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift\" line=\"2\" column=\"17\"><Name>Sessions<\/Name><USR>s:5Vapor8SessionsP<\/USR><Declaration>public protocol Sessions<\/Declaration><CommentParts><Abstract><Para>Capable of managing CRUD operations for <codeVoice>Session<\/codeVoice>s.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "Sessions",
        "key.doc.type" : "Class",
        "key.doclength" : 56,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Sessions<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 1236,
        "key.name" : "Sessions",
        "key.namelength" : 8,
        "key.nameoffset" : 72,
        "key.offset" : 63,
        "key.parsed_declaration" : "public protocol Sessions",
        "key.parsed_scope.end" : 30,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtP4main8Sessions_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func createSession(_ session: <Type usr=\"s:5Vapor7SessionC\">Session<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Stores a newly created `Session`.\n\n- parameters:\n    - session: New `Session` to create.\n- returns: A `Future` that will be completed when the operation has finished.",
            "key.doc.declaration" : "func createSession(_ session: Session) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift\" line=\"8\" column=\"10\"><Name>createSession(_:)<\/Name><USR>s:5Vapor8SessionsP13createSessiony3NIO15EventLoopFutureCyytGAA0D0CKF<\/USR><Declaration>func createSession(_ session: Session) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Stores a newly created <codeVoice>Session<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>session<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>New <codeVoice>Session<\/codeVoice> to create.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> that will be completed when the operation has finished.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "createSession(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "New `Session` to create."
                  }
                ],
                "name" : "session"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` that will be completed when the operation has finished."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 202,
            "key.docoffset" : 87,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>createSession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>session<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 61,
            "key.name" : "createSession(_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 298,
            "key.offset" : 293,
            "key.parsed_declaration" : "func createSession(_ session: Session) throws -> Future<Void>",
            "key.parsed_scope.end" : 8,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Sessions> (Self) -> (Session) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCyytG5Vapor7SessionCKcD",
            "key.usr" : "s:5Vapor8SessionsP13createSessiony3NIO15EventLoopFutureCyytGAA0D0CKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func readSession(sessionID: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor7SessionC\">Session<\/Type>?&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Fetches a session for the supplied cookie value.\n\n- parameters:\n    - sessionID: `String` identifier of the `Session` to fetch.\n- returns: `Session` if found, `nil` if none exists.",
            "key.doc.declaration" : "func readSession(sessionID: String) throws -> Future<Session?>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift\" line=\"15\" column=\"10\"><Name>readSession(sessionID:)<\/Name><USR>s:5Vapor8SessionsP11readSession9sessionID3NIO15EventLoopFutureCyAA0D0CSgGSS_tKF<\/USR><Declaration>func readSession(sessionID: String) throws -&gt; Future&lt;Session?&gt;<\/Declaration><CommentParts><Abstract><Para>Fetches a session for the supplied cookie value.<\/Para><\/Abstract><Parameters><Parameter><Name>sessionID<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>String<\/codeVoice> identifier of the <codeVoice>Session<\/codeVoice> to fetch.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>Session<\/codeVoice> if found, <codeVoice>nil<\/codeVoice> if none exists.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "readSession(sessionID:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`String` identifier of the `Session` to fetch."
                  }
                ],
                "name" : "sessionID"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`Session` if found, `nil` if none exists."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 216,
            "key.docoffset" : 360,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>readSession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>sessionID<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class>?&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 62,
            "key.name" : "readSession(sessionID:)",
            "key.namelength" : 30,
            "key.nameoffset" : 585,
            "key.offset" : 580,
            "key.parsed_declaration" : "func readSession(sessionID: String) throws -> Future<Session?>",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Sessions> (Self) -> (String) throws -> EventLoopFuture<Session?>",
            "key.typeusr" : "$S9sessionID3NIO15EventLoopFutureCy5Vapor7SessionCSgGSS_tKcD",
            "key.usr" : "s:5Vapor8SessionsP11readSession9sessionID3NIO15EventLoopFutureCyAA0D0CSgGSS_tKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func updateSession(_ session: <Type usr=\"s:5Vapor7SessionC\">Session<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Updates the session. Call before the response with the session cookie is returned.\n\n- parameters:\n    - session: Existing `Session` to update.\n- returns: A `Future` that will be completed when the operation has finished.",
            "key.doc.declaration" : "func updateSession(_ session: Session) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift\" line=\"22\" column=\"10\"><Name>updateSession(_:)<\/Name><USR>s:5Vapor8SessionsP13updateSessiony3NIO15EventLoopFutureCyytGAA0D0CKF<\/USR><Declaration>func updateSession(_ session: Session) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Updates the session. Call before the response with the session cookie is returned.<\/Para><\/Abstract><Parameters><Parameter><Name>session<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Existing <codeVoice>Session<\/codeVoice> to update.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> that will be completed when the operation has finished.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 22,
            "key.doc.name" : "updateSession(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Existing `Session` to update."
                  }
                ],
                "name" : "session"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` that will be completed when the operation has finished."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 256,
            "key.docoffset" : 648,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updateSession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>session<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7SessionC\">Session<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 61,
            "key.name" : "updateSession(_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 913,
            "key.offset" : 908,
            "key.parsed_declaration" : "func updateSession(_ session: Session) throws -> Future<Void>",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Sessions> (Self) -> (Session) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCyytG5Vapor7SessionCKcD",
            "key.usr" : "s:5Vapor8SessionsP13updateSessiony3NIO15EventLoopFutureCyytGAA0D0CKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func destroySession(sessionID: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Destroys the session. Call if the response is no longer valid.\n\n- parameters:\n    - sessionID: `String` identifier of the `Session` to destroy.\n- returns: A `Future` that will be completed when the operation has finished.",
            "key.doc.declaration" : "func destroySession(sessionID: String) throws -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift\" line=\"29\" column=\"10\"><Name>destroySession(sessionID:)<\/Name><USR>s:5Vapor8SessionsP14destroySession9sessionID3NIO15EventLoopFutureCyytGSS_tKF<\/USR><Declaration>func destroySession(sessionID: String) throws -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Destroys the session. Call if the response is no longer valid.<\/Para><\/Abstract><Parameters><Parameter><Name>sessionID<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>String<\/codeVoice> identifier of the <codeVoice>Session<\/codeVoice> to destroy.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> that will be completed when the operation has finished.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 29,
            "key.doc.name" : "destroySession(sessionID:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`String` identifier of the `Session` to destroy."
                  }
                ],
                "name" : "sessionID"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` that will be completed when the operation has finished."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 257,
            "key.docoffset" : 975,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/Sessions.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>destroySession<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>sessionID<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 61,
            "key.name" : "destroySession(sessionID:)",
            "key.namelength" : 33,
            "key.nameoffset" : 1241,
            "key.offset" : 1236,
            "key.parsed_declaration" : "func destroySession(sessionID: String) throws -> Future<Void>",
            "key.parsed_scope.end" : 29,
            "key.parsed_scope.start" : 29,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Sessions> (Self) -> (String) throws -> EventLoopFuture<()>",
            "key.typeusr" : "$S9sessionID3NIO15EventLoopFutureCyytGSS_tKcD",
            "key.usr" : "s:5Vapor8SessionsP14destroySession9sessionID3NIO15EventLoopFutureCyytGSS_tKF"
          }
        ],
        "key.typename" : "Sessions.Protocol",
        "key.typeusr" : "$S5Vapor8Sessions_pmD",
        "key.usr" : "s:5Vapor8SessionsP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1669,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct SessionsConfig : <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 40
          }
        ],
        "key.bodylength" : 1584,
        "key.bodyoffset" : 83,
        "key.doc.column" : 15,
        "key.doc.comment" : "Configuration options for sessions.",
        "key.doc.declaration" : "public struct SessionsConfig : ServiceType",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift\" line=\"2\" column=\"15\"><Name>SessionsConfig<\/Name><USR>s:5Vapor14SessionsConfigV<\/USR><Declaration>public struct SessionsConfig : ServiceType<\/Declaration><CommentParts><Abstract><Para>Configuration options for sessions.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "SessionsConfig",
        "key.doc.type" : "Class",
        "key.doclength" : 40,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 70
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>SessionsConfig<\/decl.name> : <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1621,
        "key.name" : "SessionsConfig",
        "key.namelength" : 14,
        "key.nameoffset" : 54,
        "key.offset" : 47,
        "key.parsed_declaration" : "public struct SessionsConfig: ServiceType",
        "key.parsed_scope.end" : 45,
        "key.parsed_scope.start" : 2,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor14SessionsConfigV\">SessionsConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 114
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 194,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> SessionsConfig",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift\" line=\"4\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor14SessionsConfigV11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; SessionsConfig<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 4,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 22,
            "key.docoffset" : 88,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor14SessionsConfigV\">SessionsConfig<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 105,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 133,
            "key.offset" : 121,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> SessionsConfig",
            "key.parsed_scope.end" : 6,
            "key.parsed_scope.start" : 4,
            "key.substructure" : [

            ],
            "key.typename" : "(SessionsConfig.Type) -> (Container) throws -> SessionsConfig",
            "key.typeusr" : "$S3for5Vapor14SessionsConfigV7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor14SessionsConfigV11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let cookieFactory: (<Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:4HTTP15HTTPCookieValueV\">HTTPCookieValue<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 305
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Creates a new `HTTPCookieValue` for the supplied value `String`.",
            "key.doc.declaration" : "public let cookieFactory: (String) -> HTTPCookieValue",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift\" line=\"9\" column=\"16\"><Name>cookieFactory<\/Name><USR>s:5Vapor14SessionsConfigV13cookieFactoryy4HTTP15HTTPCookieValueVSScvp<\/USR><Declaration>public let cookieFactory: (String) -&gt; HTTPCookieValue<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>HTTPCookieValue<\/codeVoice> for the supplied value <codeVoice>String<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 9,
            "key.doc.name" : "cookieFactory",
            "key.doc.type" : "Other",
            "key.doclength" : 69,
            "key.docoffset" : 232,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>cookieFactory<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4HTTP15HTTPCookieValueV\">HTTPCookieValue<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 46,
            "key.name" : "cookieFactory",
            "key.namelength" : 13,
            "key.nameoffset" : 316,
            "key.offset" : 312,
            "key.parsed_declaration" : "public let cookieFactory: (String) -> HTTPCookieValue",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 9,
            "key.typename" : "(String) -> HTTPCookieValue",
            "key.typeusr" : "$Sy4HTTP15HTTPCookieValueVSScD",
            "key.usr" : "s:5Vapor14SessionsConfigV13cookieFactoryy4HTTP15HTTPCookieValueVSScvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let cookieName: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 429
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Name of HTTP cookie, used as a key for the cookie value.",
            "key.doc.declaration" : "public let cookieName: String",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift\" line=\"12\" column=\"16\"><Name>cookieName<\/Name><USR>s:5Vapor14SessionsConfigV10cookieNameSSvp<\/USR><Declaration>public let cookieName: String<\/Declaration><CommentParts><Abstract><Para>Name of HTTP cookie, used as a key for the cookie value.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 12,
            "key.doc.name" : "cookieName",
            "key.doc.type" : "Other",
            "key.doclength" : 61,
            "key.docoffset" : 364,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>cookieName<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "cookieName",
            "key.namelength" : 10,
            "key.nameoffset" : 440,
            "key.offset" : 436,
            "key.parsed_declaration" : "public let cookieName: String",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "String",
            "key.typeusr" : "$SSSD",
            "key.usr" : "s:5Vapor14SessionsConfigV10cookieNameSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(cookieName: <Type usr=\"s:SS\">String<\/Type>, cookieFactory: @escaping (<Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:4HTTP15HTTPCookieValueV\">HTTPCookieValue<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 923
              }
            ],
            "key.bodylength" : 85,
            "key.bodyoffset" : 1010,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new `SessionsConfig` with the supplied cookie factory.\n\n    let sessionsConfig = SessionsConfig(cookieName: \"vapor-session\") { value in\n        return HTTPCookieValue(string: value, isSecure: true)\n    }\n\n- parameters:\n    - cookieName: Name of HTTP cookie, used as a key for the cookie value.\n    - cookieFactory: Creates a new `HTTPCookieValue` for the supplied value `String`.",
            "key.doc.declaration" : "public init(cookieName: String, cookieFactory: @escaping (String) -> HTTPCookieValue)",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift\" line=\"23\" column=\"12\"><Name>init(cookieName:cookieFactory:)<\/Name><USR>s:5Vapor14SessionsConfigV10cookieName0D7FactoryACSS_4HTTP15HTTPCookieValueVSSctcfc<\/USR><Declaration>public init(cookieName: String, cookieFactory: @escaping (String) -&gt; HTTPCookieValue)<\/Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>SessionsConfig<\/codeVoice> with the supplied cookie factory.<\/Para><\/Abstract><Parameters><Parameter><Name>cookieName<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Name of HTTP cookie, used as a key for the cookie value.<\/Para><\/Discussion><\/Parameter><Parameter><Name>cookieFactory<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Creates a new <codeVoice>HTTPCookieValue<\/codeVoice> for the supplied value <codeVoice>String<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let sessionsConfig = SessionsConfig(cookieName: \"vapor-session\") { value in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return HTTPCookieValue(string: value, isSecure: true)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 23,
            "key.doc.name" : "init(cookieName:cookieFactory:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Name of HTTP cookie, used as a key for the cookie value."
                  }
                ],
                "name" : "cookieName"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Creates a new `HTTPCookieValue` for the supplied value `String`."
                  }
                ],
                "name" : "cookieFactory"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 455,
            "key.docoffset" : 464,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>cookieName<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cookieFactory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4HTTP15HTTPCookieValueV\">HTTPCookieValue<\/ref.struct><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 166,
            "key.name" : "init(cookieName:cookieFactory:)",
            "key.namelength" : 78,
            "key.nameoffset" : 930,
            "key.offset" : 930,
            "key.parsed_declaration" : "public init(cookieName: String, cookieFactory: @escaping (String) -> HTTPCookieValue)",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 23,
            "key.substructure" : [

            ],
            "key.typename" : "(SessionsConfig.Type) -> (String, @escaping (String) -> HTTPCookieValue) -> SessionsConfig",
            "key.typeusr" : "$S10cookieName0A7Factory5Vapor14SessionsConfigVSS_4HTTP15HTTPCookieValueVSSctcD",
            "key.usr" : "s:5Vapor14SessionsConfigV10cookieName0D7FactoryACSS_4HTTP15HTTPCookieValueVSSctcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`() -&gt; <Type usr=\"s:5Vapor14SessionsConfigV\">SessionsConfig<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1154
              }
            ],
            "key.bodylength" : 461,
            "key.bodyoffset" : 1204,
            "key.doc.column" : 24,
            "key.doc.comment" : "`SessionsConfig` with basic cookie factory.",
            "key.doc.declaration" : "public static func `default`() -> SessionsConfig",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift\" line=\"29\" column=\"24\"><Name>default()<\/Name><USR>s:5Vapor14SessionsConfigV7defaultACyFZ<\/USR><Declaration>public static func `default`() -&gt; SessionsConfig<\/Declaration><CommentParts><Abstract><Para><codeVoice>SessionsConfig<\/codeVoice> with basic cookie factory.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 29,
            "key.doc.name" : "default()",
            "key.doc.type" : "Function",
            "key.doclength" : 48,
            "key.docoffset" : 1102,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsConfig.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor14SessionsConfigV\">SessionsConfig<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 505,
            "key.name" : "default()",
            "key.namelength" : 11,
            "key.nameoffset" : 1173,
            "key.offset" : 1161,
            "key.parsed_declaration" : "public static func `default`() -> SessionsConfig",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 29,
            "key.substructure" : [

            ],
            "key.typename" : "(SessionsConfig.Type) -> () -> SessionsConfig",
            "key.typeusr" : "$S5Vapor14SessionsConfigVycD",
            "key.usr" : "s:5Vapor14SessionsConfigV7defaultACyFZ"
          }
        ],
        "key.typename" : "SessionsConfig.Type",
        "key.typeusr" : "$S5Vapor14SessionsConfigVmD",
        "key.usr" : "s:5Vapor14SessionsConfigV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4248,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class SessionsMiddleware : <Type usr=\"s:5Vapor10MiddlewareP\">Middleware<\/Type>, <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 701
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 694
          }
        ],
        "key.bodylength" : 3488,
        "key.bodyoffset" : 758,
        "key.doc.column" : 20,
        "key.doc.comment" : "Uses HTTP cookies to save and restore sessions for connecting clients.\n\nIf a cookie matching the configured cookie name is found on an incoming request,\nthe value will be used as an identifier to find the associated `Session`.\n\nIf a session is used during a request (`Request.session()`), a cookie will be set\non the outgoing response with the session's unique identifier. This cookie must be\nreturned on the next request to restore the session.\n\n    var middlewareConfig = MiddlewareConfig()\n    middlewareConfig.use(SessionsMiddleware.self)\n    services.register(middlewareConfig)\n\nSee `SessionsConfig` and `Sessions` for more information.",
        "key.doc.declaration" : "public final class SessionsMiddleware : Middleware, ServiceType",
        "key.doc.discussion" : [
          {
            "Para" : "If a cookie matching the configured cookie name is found on an incoming request, the value will be used as an identifier to find the associated `Session`."
          },
          {
            "Para" : "If a session is used during a request (`Request.session()`), a cookie will be set on the outgoing response with the session’s unique identifier. This cookie must be returned on the next request to restore the session."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `SessionsConfig` and `Sessions` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift\" line=\"15\" column=\"20\"><Name>SessionsMiddleware<\/Name><USR>s:5Vapor18SessionsMiddlewareC<\/USR><Declaration>public final class SessionsMiddleware : Middleware, ServiceType<\/Declaration><CommentParts><Abstract><Para>Uses HTTP cookies to save and restore sessions for connecting clients.<\/Para><\/Abstract><Discussion><Para>If a cookie matching the configured cookie name is found on an incoming request, the value will be used as an identifier to find the associated <codeVoice>Session<\/codeVoice>.<\/Para><Para>If a session is used during a request (<codeVoice>Request.session()<\/codeVoice>), a cookie will be set on the outgoing response with the session’s unique identifier. This cookie must be returned on the next request to restore the session.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var middlewareConfig = MiddlewareConfig()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[middlewareConfig.use(SessionsMiddleware.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[services.register(middlewareConfig)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>SessionsConfig<\/codeVoice> and <codeVoice>Sessions<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 15,
        "key.doc.name" : "SessionsMiddleware",
        "key.doc.type" : "Class",
        "key.doclength" : 694,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 733
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 745
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>SessionsMiddleware<\/decl.name> : <ref.protocol usr=\"s:5Vapor10MiddlewareP\">Middleware<\/ref.protocol>, <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Middleware"
          },
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 3540,
        "key.name" : "SessionsMiddleware",
        "key.namelength" : 18,
        "key.nameoffset" : 713,
        "key.offset" : 707,
        "key.parsed_declaration" : "public final class SessionsMiddleware: Middleware, ServiceType",
        "key.parsed_scope.end" : 97,
        "key.parsed_scope.start" : 15,
        "key.runtime_name" : "_TtC4main18SessionsMiddleware",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor18SessionsMiddlewareC\">SessionsMiddleware<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 790
              }
            ],
            "key.bodylength" : 84,
            "key.bodyoffset" : 877,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for container: Container) throws -> SessionsMiddleware",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift\" line=\"17\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor18SessionsMiddlewareC11makeService3forAC0E09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for container: Container) throws -&gt; SessionsMiddleware<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 17,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 763,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor18SessionsMiddlewareC\">SessionsMiddleware<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 165,
            "key.name" : "makeService(for:)",
            "key.namelength" : 37,
            "key.nameoffset" : 809,
            "key.offset" : 797,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for container: Container) throws -> SessionsMiddleware",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 17,
            "key.substructure" : [

            ],
            "key.typename" : "(SessionsMiddleware.Type) -> (Container) throws -> SessionsMiddleware",
            "key.typeusr" : "$S3for5Vapor18SessionsMiddlewareC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor18SessionsMiddlewareC11makeService3forAC0E09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let config: <Type usr=\"s:5Vapor14SessionsConfigV\">SessionsConfig<\/Type><\/Declaration>",
            "key.doc.column" : 9,
            "key.doc.comment" : "The cookie to work with",
            "key.doc.declaration" : "let config: SessionsConfig",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift\" line=\"22\" column=\"9\"><Name>config<\/Name><USR>s:5Vapor18SessionsMiddlewareC6configAA0B6ConfigVvp<\/USR><Declaration>let config: SessionsConfig<\/Declaration><CommentParts><Abstract><Para>The cookie to work with<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 22,
            "key.doc.name" : "config",
            "key.doc.type" : "Other",
            "key.doclength" : 28,
            "key.docoffset" : 968,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>config<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor14SessionsConfigV\">SessionsConfig<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.name" : "config",
            "key.namelength" : 6,
            "key.nameoffset" : 1004,
            "key.offset" : 1000,
            "key.parsed_declaration" : "let config: SessionsConfig",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.typename" : "SessionsConfig",
            "key.typeusr" : "$S5Vapor14SessionsConfigVD",
            "key.usr" : "s:5Vapor18SessionsMiddlewareC6configAA0B6ConfigVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let sessions: <Type usr=\"s:5Vapor8SessionsP\">Sessions<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1055
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "Session store.",
            "key.doc.declaration" : "public let sessions: Sessions",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift\" line=\"25\" column=\"16\"><Name>sessions<\/Name><USR>s:5Vapor18SessionsMiddlewareC8sessionsAA0B0_pvp<\/USR><Declaration>public let sessions: Sessions<\/Declaration><CommentParts><Abstract><Para>Session store.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 25,
            "key.doc.name" : "sessions",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 1032,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>sessions<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor8SessionsP\">Sessions<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "sessions",
            "key.namelength" : 8,
            "key.nameoffset" : 1066,
            "key.offset" : 1062,
            "key.parsed_declaration" : "public let sessions: Sessions",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 25,
            "key.typename" : "Sessions",
            "key.typeusr" : "$S5Vapor8Sessions_pD",
            "key.usr" : "s:5Vapor18SessionsMiddlewareC8sessionsAA0B0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(sessions: <Type usr=\"s:5Vapor8SessionsP\">Sessions<\/Type>, config: <Type usr=\"s:5Vapor14SessionsConfigV\">SessionsConfig<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1341
              }
            ],
            "key.bodylength" : 67,
            "key.bodyoffset" : 1398,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `SessionsMiddleware`.\n\n- parameters:\n    - sessions: `Sessions` implementation to use for fetching and storing sessions.\n    - config: `SessionsConfig` to use for naming and creating cookie values.",
            "key.doc.declaration" : "public init(sessions: Sessions, config: SessionsConfig)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift\" line=\"32\" column=\"12\"><Name>init(sessions:config:)<\/Name><USR>s:5Vapor18SessionsMiddlewareC8sessions6configAcA0B0_p_AA0B6ConfigVtcfc<\/USR><Declaration>public init(sessions: Sessions, config: SessionsConfig)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>SessionsMiddleware<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>sessions<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>Sessions<\/codeVoice> implementation to use for fetching and storing sessions.<\/Para><\/Discussion><\/Parameter><Parameter><Name>config<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>SessionsConfig<\/codeVoice> to use for naming and creating cookie values.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 32,
            "key.doc.name" : "init(sessions:config:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "`Sessions` implementation to use for fetching and storing sessions."
                  }
                ],
                "name" : "sessions"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`SessionsConfig` to use for naming and creating cookie values."
                  }
                ],
                "name" : "config"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 247,
            "key.docoffset" : 1090,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sessions<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor8SessionsP\">Sessions<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>config<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:5Vapor14SessionsConfigV\">SessionsConfig<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 118,
            "key.name" : "init(sessions:config:)",
            "key.namelength" : 48,
            "key.nameoffset" : 1348,
            "key.offset" : 1348,
            "key.parsed_declaration" : "public init(sessions: Sessions, config: SessionsConfig)",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 32,
            "key.substructure" : [

            ],
            "key.typename" : "(SessionsMiddleware.Type) -> (Sessions, SessionsConfig) -> SessionsMiddleware",
            "key.typeusr" : "$S8sessions6config5Vapor18SessionsMiddlewareCAC0D0_p_AC0D6ConfigVtcD",
            "key.usr" : "s:5Vapor18SessionsMiddlewareC8sessions6configAcA0B0_p_AA0B6ConfigVtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func respond(to req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, chainingTo next: <Type usr=\"s:5Vapor9ResponderP\">Responder<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1505
              }
            ],
            "key.bodylength" : 863,
            "key.bodyoffset" : 1598,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `Middleware.respond`",
            "key.doc.declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift\" line=\"38\" column=\"17\"><Name>respond(to:chainingTo:)<\/Name><USR>s:5Vapor18SessionsMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF<\/USR><Declaration>public func respond(to req: Request, chainingTo next: Responder) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Middleware.respond<\/codeVoice><\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 38,
            "key.doc.name" : "respond(to:chainingTo:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 1472,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>respond<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chainingTo<\/decl.var.parameter.argument_label> <decl.var.parameter.name>next<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor9ResponderP\">Responder<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 950,
            "key.name" : "respond(to:chainingTo:)",
            "key.namelength" : 52,
            "key.nameoffset" : 1517,
            "key.offset" : 1512,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor10MiddlewareP7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
              }
            ],
            "key.parsed_declaration" : "public func respond(to req: Request, chainingTo next: Responder) throws -> Future<Response>",
            "key.parsed_scope.end" : 58,
            "key.parsed_scope.start" : 38,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let cache: <Type usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>cache<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 60,
                "key.name" : "cache",
                "key.namelength" : 5,
                "key.nameoffset" : 1645,
                "key.offset" : 1641,
                "key.parsed_declaration" : "let cache = try req.privateContainer.make(SessionCache.self)",
                "key.parsed_scope.end" : 40,
                "key.parsed_scope.start" : 40,
                "key.typename" : "SessionCache",
                "key.typeusr" : "$S5Vapor12SessionCacheCD",
                "key.usr" : "s:5Vapor18SessionsMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF5cacheL_AA12SessionCacheCvp"
              }
            ],
            "key.typename" : "(SessionsMiddleware) -> (Request, Responder) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to10chainingTo3NIO15EventLoopFutureCy5Vapor8ResponseCGAF7RequestC_AF9Responder_ptKcD",
            "key.usr" : "s:5Vapor18SessionsMiddlewareC7respond2to10chainingTo3NIO15EventLoopFutureCyAA8ResponseCGAA7RequestC_AA9Responder_ptKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func addCookies(to res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>, for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>, cache: <Type usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2542
              }
            ],
            "key.bodylength" : 1593,
            "key.bodyoffset" : 2651,
            "key.doc.column" : 18,
            "key.doc.comment" : "Adds session cookie to response or clears if session was deleted.",
            "key.doc.declaration" : "private func addCookies(to res: Response, for req: Request, cache: SessionCache) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift\" line=\"61\" column=\"18\"><Name>addCookies(to:for:cache:)<\/Name><USR>s:5Vapor18SessionsMiddlewareC10addCookies33_2C90E9EFE08E35143AC730A5D64C24C2LL2to3for5cache3NIO15EventLoopFutureCyAA8ResponseCGAM_AA7RequestCAA12SessionCacheCtKF<\/USR><Declaration>private func addCookies(to res: Response, for req: Request, cache: SessionCache) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>Adds session cookie to response or clears if session was deleted.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 61,
            "key.doc.name" : "addCookies(to:for:cache:)",
            "key.doc.type" : "Function",
            "key.doclength" : 70,
            "key.docoffset" : 2468,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Sessions\/SessionsMiddleware.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>addCookies<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>res<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cache<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor12SessionCacheC\">SessionCache<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1695,
            "key.name" : "addCookies(to:for:cache:)",
            "key.namelength" : 67,
            "key.nameoffset" : 2555,
            "key.offset" : 2550,
            "key.parsed_declaration" : "private func addCookies(to res: Response, for req: Request, cache: SessionCache) throws -> Future<Response>",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 61,
            "key.substructure" : [

            ],
            "key.typename" : "(SessionsMiddleware) -> (Response, Request, SessionCache) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2to3for5cache3NIO15EventLoopFutureCy5Vapor8ResponseCGAI_AG7RequestCAG12SessionCacheCtKcD",
            "key.usr" : "s:5Vapor18SessionsMiddlewareC10addCookies33_2C90E9EFE08E35143AC730A5D64C24C2LL2to3for5cache3NIO15EventLoopFutureCyAA8ResponseCGAM_AA7RequestCAA12SessionCacheCtKF"
          }
        ],
        "key.typename" : "SessionsMiddleware.Type",
        "key.typeusr" : "$S5Vapor18SessionsMiddlewareCmD",
        "key.usr" : "s:5Vapor18SessionsMiddlewareC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1476,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct AnyResponse : <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 965
          }
        ],
        "key.bodylength" : 463,
        "key.bodyoffset" : 1011,
        "key.doc.column" : 15,
        "key.doc.comment" : "A type erased response useful for routes that can return more than one type.\n\n    router.get(\"foo\") { req -> AnyResponse in\n        if \/* something *\/ {\n            return AnyResponse(42)\n        } else {\n            return AnyResponse(\"string\")\n        }\n    }\n\nThis can also be done using a `ResponseEncodable` enum.\n\n    enum IntOrString: ResponseEncodable {\n        case int(Int)\n        case string(String)\n\n        func encode(for req: Request) throws -> EventLoopFuture<Response> {\n            switch self {\n            case .int(let i): return try i.encode(for: req)\n            case .string(let s): return try s.encode(for: req)\n            }\n        }\n    }\n\n    router.get(\"foo\") { req -> IntOrString in\n        if \/* something *\/ {\n            return .int(42)\n        } else {\n            return .string(\"string\")\n        }\n    }",
        "key.doc.declaration" : "public struct AnyResponse : ResponseEncodable",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          },
          {
            "Para" : "This can also be done using a `ResponseEncodable` enum."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift\" line=\"33\" column=\"15\"><Name>AnyResponse<\/Name><USR>s:5Vapor11AnyResponseV<\/USR><Declaration>public struct AnyResponse : ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>A type erased response useful for routes that can return more than one type.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"foo\") { req -> AnyResponse in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if \/* something *\/ {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return AnyResponse(42)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return AnyResponse(\"string\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>This can also be done using a <codeVoice>ResponseEncodable<\/codeVoice> enum.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum IntOrString: ResponseEncodable {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case int(Int)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case string(String)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func encode(for req: Request) throws -> EventLoopFuture<Response> {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        switch self {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .int(let i): return try i.encode(for: req)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case .string(let s): return try s.encode(for: req)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[router.get(\"foo\") { req -> IntOrString in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    if \/* something *\/ {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return .int(42)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    } else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return .string(\"string\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 33,
        "key.doc.name" : "AnyResponse",
        "key.doc.type" : "Class",
        "key.doclength" : 965,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 17,
            "key.offset" : 992
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>AnyResponse<\/decl.name> : <ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ResponseEncodable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 503,
        "key.name" : "AnyResponse",
        "key.namelength" : 11,
        "key.nameoffset" : 979,
        "key.offset" : 972,
        "key.parsed_declaration" : "public struct AnyResponse: ResponseEncodable",
        "key.parsed_scope.end" : 49,
        "key.parsed_scope.start" : 33,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let encodable: <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1062
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The wrapped `ResponseEncodable` type.",
            "key.doc.declaration" : "private let encodable: ResponseEncodable",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift\" line=\"35\" column=\"17\"><Name>encodable<\/Name><USR>s:5Vapor11AnyResponseV9encodable33_4FFB3CD71E6D3ECC835F93F9965553A2LLAA0C9Encodable_pvp<\/USR><Declaration>private let encodable: ResponseEncodable<\/Declaration><CommentParts><Abstract><Para>The wrapped <codeVoice>ResponseEncodable<\/codeVoice> type.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 35,
            "key.doc.name" : "encodable",
            "key.doc.type" : "Other",
            "key.doclength" : 42,
            "key.docoffset" : 1016,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>encodable<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "encodable",
            "key.namelength" : 9,
            "key.nameoffset" : 1074,
            "key.offset" : 1070,
            "key.parsed_declaration" : "private let encodable: ResponseEncodable",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 35,
            "key.typename" : "ResponseEncodable",
            "key.typeusr" : "$S5Vapor17ResponseEncodable_pD",
            "key.usr" : "s:5Vapor11AnyResponseV9encodable33_4FFB3CD71E6D3ECC835F93F9965553A2LLAA0C9Encodable_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(_ encodable: <Type usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1231
              }
            ],
            "key.bodylength" : 40,
            "key.bodyoffset" : 1276,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `AnyResponse`.\n\n- parameters:\n    - encodable: Something `ResponseEncodable`.",
            "key.doc.declaration" : "public init(_ encodable: ResponseEncodable)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift\" line=\"41\" column=\"12\"><Name>init(_:)<\/Name><USR>s:5Vapor11AnyResponseVyAcA0C9Encodable_pcfc<\/USR><Declaration>public init(_ encodable: ResponseEncodable)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>AnyResponse<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>encodable<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Something <codeVoice>ResponseEncodable<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 41,
            "key.doc.name" : "init(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Something `ResponseEncodable`."
                  }
                ],
                "name" : "encodable"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 119,
            "key.docoffset" : 1108,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>encodable<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:5Vapor17ResponseEncodableP\">ResponseEncodable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 79,
            "key.name" : "init(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 1238,
            "key.offset" : 1238,
            "key.parsed_declaration" : "public init(_ encodable: ResponseEncodable)",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 41,
            "key.substructure" : [

            ],
            "key.typename" : "(AnyResponse.Type) -> (ResponseEncodable) -> AnyResponse",
            "key.typeusr" : "$Sy5Vapor11AnyResponseVAA0C9Encodable_pcD",
            "key.usr" : "s:5Vapor11AnyResponseVyAcA0C9Encodable_pcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func encode(for req: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1356
              }
            ],
            "key.bodylength" : 51,
            "key.bodyoffset" : 1421,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `ResponseEncodable`.",
            "key.doc.declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift\" line=\"46\" column=\"17\"><Name>encode(for:)<\/Name><USR>s:5Vapor11AnyResponseV6encode3for3NIO15EventLoopFutureCyAA0C0CGAA7RequestC_tKF<\/USR><Declaration>public func encode(for req: Request) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ResponseEncodable<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 46,
            "key.doc.name" : "encode(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 29,
            "key.docoffset" : 1323,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/AnyResponse.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>encode<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 110,
            "key.name" : "encode(for:)",
            "key.namelength" : 24,
            "key.nameoffset" : 1368,
            "key.offset" : 1363,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor17ResponseEncodableP6encode3for3NIO15EventLoopFutureCyAA0B0CGAA7RequestC_tKF"
              }
            ],
            "key.parsed_declaration" : "public func encode(for req: Request) throws -> Future<Response>",
            "key.parsed_scope.end" : 48,
            "key.parsed_scope.start" : 46,
            "key.substructure" : [

            ],
            "key.typename" : "(AnyResponse) -> (Request) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S3for3NIO15EventLoopFutureCy5Vapor8ResponseCGAE7RequestC_tKcD",
            "key.usr" : "s:5Vapor11AnyResponseV6encode3for3NIO15EventLoopFutureCyAA0C0CGAA7RequestC_tKF"
          }
        ],
        "key.typename" : "AnyResponse.Type",
        "key.typeusr" : "$S5Vapor11AnyResponseVmD",
        "key.usr" : "s:5Vapor11AnyResponseV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/Exports.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 542,
    "key.offset" : 0,
    "key.substructure" : [

    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 9547,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public final class Request : <Type usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/Type>, <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>, <Type usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/Type>, <Type usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type>, <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type><\/Declaration>",
        "key.bodylength" : 1719,
        "key.bodyoffset" : 19,
        "key.doc.column" : 20,
        "key.doc.declaration" : "public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible",
        "key.doc.discussion" : [
          {
            "Para" : "Use `Request` to access information about the `HTTPRequest` (`req.http`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also use `Request` to create services you may need while generating a response (`req.make()`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` also carries a `ParametersContainer` for routing. Use `parameters` to fetch parameterized values."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` is `DatabaseConnectable`, meaning you can use it in-place of an actual `DatabaseConnection`. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPRequest`, `Container`, `ParameterContainer`, and `DatabaseConnectable` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"27\" column=\"20\"><Name>Request<\/Name><USR>s:5Vapor7RequestC<\/USR><Declaration>public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible<\/Declaration><CommentParts><Abstract><Para><codeVoice>Request<\/codeVoice> is a service-container wrapper around an <codeVoice>HTTPRequest<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Use <codeVoice>Request<\/codeVoice> to access information about the <codeVoice>HTTPRequest<\/codeVoice> (<codeVoice>req.http<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(req.http.url.path) \/\/ \"\/hello\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also use <codeVoice>Request<\/codeVoice> to create services you may need while generating a response (<codeVoice>req.make()<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let client = try req.make(Client.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(client) \/\/ Client]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[client.get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> also carries a <codeVoice>ParametersContainer<\/codeVoice> for routing. Use <codeVoice>parameters<\/codeVoice> to fetch parameterized values.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"hello\", String.parameter) { req -> String in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let name = try req.parameters.next(String.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> is <codeVoice>DatabaseConnectable<\/codeVoice>, meaning you can use it in-place of an actual <codeVoice>DatabaseConnection<\/codeVoice>. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let users = User.query(on: req).all()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPRequest<\/codeVoice>, <codeVoice>Container<\/codeVoice>, <codeVoice>ParameterContainer<\/codeVoice>, and <codeVoice>DatabaseConnectable<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 27,
        "key.doc.name" : "Request",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Request<\/decl.name> : <ref.protocol usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/ref.protocol>, <ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/ref.protocol>, <ref.typealias usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/ref.typealias>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1739,
        "key.name" : "Request",
        "key.namelength" : 7,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func fileio() throws -&gt; <Type usr=\"s:5Vapor6FileIOV\">FileIO<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 242
              }
            ],
            "key.bodylength" : 370,
            "key.bodyoffset" : 281,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `FileIO` for this `Request`.\n\n    let data = try req.fileio().read(file: \"\/path\/to\/file.txt\")\n    print(data) \/\/ Future<Data>\n\nSee `FileIO` for more information.",
            "key.doc.declaration" : "public func fileio() throws -> FileIO",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "See `FileIO` for more information."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"8\" column=\"17\"><Name>fileio()<\/Name><USR>s:5Vapor7RequestC6fileioAA6FileIOVyKF<\/USR><Declaration>public func fileio() throws -&gt; FileIO<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>FileIO<\/codeVoice> for this <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let data = try req.fileio().read(file: \"\/path\/to\/file.txt\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(data) \/\/ Future<Data>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>FileIO<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 8,
            "key.doc.name" : "fileio()",
            "key.doc.type" : "Function",
            "key.doclength" : 214,
            "key.docoffset" : 24,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>fileio<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:5Vapor6FileIOV\">FileIO<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 403,
            "key.name" : "fileio()",
            "key.namelength" : 8,
            "key.nameoffset" : 254,
            "key.offset" : 249,
            "key.parsed_declaration" : "public func fileio() throws -> FileIO",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 8,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let allocator: <Type usr=\"s:3NIO19ByteBufferAllocatorV\">ByteBufferAllocator<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>allocator<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO19ByteBufferAllocatorV\">ByteBufferAllocator<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 34,
                "key.name" : "allocator",
                "key.namelength" : 9,
                "key.nameoffset" : 294,
                "key.offset" : 290,
                "key.parsed_declaration" : "let allocator: ByteBufferAllocator",
                "key.parsed_scope.end" : 9,
                "key.parsed_scope.start" : 9,
                "key.typename" : "ByteBufferAllocator",
                "key.typeusr" : "$S3NIO19ByteBufferAllocatorVD",
                "key.usr" : "s:5Vapor7RequestC6fileioAA6FileIOVyKF9allocatorL_3NIO19ByteBufferAllocatorVvp"
              }
            ],
            "key.typename" : "(Request) -> () throws -> FileIO",
            "key.typeusr" : "$S5Vapor6FileIOVyKcD",
            "key.usr" : "s:5Vapor7RequestC6fileioAA6FileIOVyKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func streamFile(at path: <Type usr=\"s:SS\">String<\/Type>) throws -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:5Vapor8ResponseC\">Response<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1502
              }
            ],
            "key.bodylength" : 166,
            "key.bodyoffset" : 1570,
            "key.doc.column" : 17,
            "key.doc.comment" : "If you are simply looking to serve files from your public directory,\nit may be useful to look at 'FileMiddleware' instead.\n\nUse this to initialize a file response for the exact file path.\nIf using from a public folder for example, the file name should be appended\nto the public directory, ie: `drop.publicDir + \"myFile.cool\"`\n\nIf none match represents an ETag that will be used to check if the file has\nchanged since the last load by the client. This allows clients like browsers\nto cache their files and avoid downloading resources unnecessarily.\nMost often calculated w\/\nhttps:\/\/tools.ietf.org\/html\/rfc7232#section-3.2\n\nFor an example of how this is used, look at 'FileMiddleware'.\n\nSee `FileIO` for more information.",
            "key.doc.declaration" : "public func streamFile(at path: String) throws -> Future<Response>",
            "key.doc.discussion" : [
              {
                "Para" : "Use this to initialize a file response for the exact file path. If using from a public folder for example, the file name should be appended to the public directory, ie: `drop.publicDir + \"myFile.cool\"`"
              },
              {
                "Para" : "If none match represents an ETag that will be used to check if the file has changed since the last load by the client. This allows clients like browsers to cache their files and avoid downloading resources unnecessarily. Most often calculated w\/ https:\/\/tools.ietf.org\/html\/rfc7232#section-3.2"
              },
              {
                "Para" : "For an example of how this is used, look at ‘FileMiddleware’."
              },
              {
                "Para" : "See `FileIO` for more information."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"35\" column=\"17\"><Name>streamFile(at:)<\/Name><USR>s:5Vapor7RequestC10streamFile2at3NIO15EventLoopFutureCyAA8ResponseCGSS_tKF<\/USR><Declaration>public func streamFile(at path: String) throws -&gt; Future&lt;Response&gt;<\/Declaration><CommentParts><Abstract><Para>If you are simply looking to serve files from your public directory, it may be useful to look at ‘FileMiddleware’ instead.<\/Para><\/Abstract><Discussion><Para>Use this to initialize a file response for the exact file path. If using from a public folder for example, the file name should be appended to the public directory, ie: <codeVoice>drop.publicDir + &quot;myFile.cool&quot;<\/codeVoice><\/Para><Para>If none match represents an ETag that will be used to check if the file has changed since the last load by the client. This allows clients like browsers to cache their files and avoid downloading resources unnecessarily. Most often calculated w\/ https:\/\/tools.ietf.org\/html\/rfc7232#section-3.2<\/Para><Para>For an example of how this is used, look at ‘FileMiddleware’.<\/Para><Para>See <codeVoice>FileIO<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 35,
            "key.doc.name" : "streamFile(at:)",
            "key.doc.type" : "Function",
            "key.doclength" : 840,
            "key.docoffset" : 658,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>streamFile<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 228,
            "key.name" : "streamFile(at:)",
            "key.namelength" : 27,
            "key.nameoffset" : 1514,
            "key.offset" : 1509,
            "key.parsed_declaration" : "public func streamFile(at path: String) throws -> Future<Response>",
            "key.parsed_scope.end" : 39,
            "key.parsed_scope.start" : 35,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let res: <Type usr=\"s:5Vapor8ResponseC\">Response<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>res<\/decl.name>: <decl.var.type><ref.class usr=\"s:5Vapor8ResponseC\">Response<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.name" : "res",
                "key.namelength" : 3,
                "key.nameoffset" : 1583,
                "key.offset" : 1579,
                "key.parsed_declaration" : "let res = makeResponse()",
                "key.parsed_scope.end" : 36,
                "key.parsed_scope.start" : 36,
                "key.typename" : "Response",
                "key.typeusr" : "$S5Vapor8ResponseCD",
                "key.usr" : "s:5Vapor7RequestC10streamFile2at3NIO15EventLoopFutureCyAA8ResponseCGSS_tKF3resL_AJvp"
              }
            ],
            "key.typename" : "(Request) -> (String) throws -> EventLoopFuture<Response>",
            "key.typeusr" : "$S2at3NIO15EventLoopFutureCy5Vapor8ResponseCGSS_tKcD",
            "key.usr" : "s:5Vapor7RequestC10streamFile2at3NIO15EventLoopFutureCyAA8ResponseCGSS_tKF"
          }
        ],
        "key.typename" : "Request.Type",
        "key.typeusr" : "$S5Vapor7RequestCmD",
        "key.usr" : "s:5Vapor7RequestC"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 12,
        "key.name" : "MARK: FileIO",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1744
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct FileIO<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2410
          }
        ],
        "key.bodylength" : 6584,
        "key.bodyoffset" : 2432,
        "key.doc.column" : 15,
        "key.doc.comment" : "`FileIO` is a convenience wrapper around SwiftNIO's `NonBlockingFileIO`.\n\nIt can read files, both in their entirety and chunked.\n\n    let data = try req.fileio().read(file: \"\/path\/to\/file.txt\").wait()\n    print(data) \/\/ file data\n\nIt can also create HTTP chunked streams for use as HTTP bodies.\n\n    router.get(\"file-stream\") { req -> HTTPResponse in\n        let stream = try req.fileio().chunkedStream(file: \"\/path\/to\/file.txt\")\n        var res = HTTPResponse(status: .ok, body: stream)\n        res.contentType = .plainText\n        return res\n    }\n\nUse `Request.fileio()` to create one.",
        "key.doc.declaration" : "public struct FileIO",
        "key.doc.discussion" : [
          {
            "Para" : "It can read files, both in their entirety and chunked."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "It can also create HTTP chunked streams for use as HTTP bodies."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use `Request.fileio()` to create one."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"61\" column=\"15\"><Name>FileIO<\/Name><USR>s:5Vapor6FileIOV<\/USR><Declaration>public struct FileIO<\/Declaration><CommentParts><Abstract><Para><codeVoice>FileIO<\/codeVoice> is a convenience wrapper around SwiftNIO’s <codeVoice>NonBlockingFileIO<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>It can read files, both in their entirety and chunked.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let data = try req.fileio().read(file: \"\/path\/to\/file.txt\").wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(data) \/\/ file data]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>It can also create HTTP chunked streams for use as HTTP bodies.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"file-stream\") { req -> HTTPResponse in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let stream = try req.fileio().chunkedStream(file: \"\/path\/to\/file.txt\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var res = HTTPResponse(status: .ok, body: stream)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    res.contentType = .plainText]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return res]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Use <codeVoice>Request.fileio()<\/codeVoice> to create one.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 61,
        "key.doc.name" : "FileIO",
        "key.doc.type" : "Class",
        "key.doclength" : 652,
        "key.docoffset" : 1758,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>FileIO<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 6600,
        "key.name" : "FileIO",
        "key.namelength" : 6,
        "key.nameoffset" : 2424,
        "key.offset" : 2417,
        "key.parsed_declaration" : "public struct FileIO",
        "key.parsed_scope.end" : 210,
        "key.parsed_scope.start" : 61,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let io: <Type usr=\"s:3NIO17NonBlockingFileIOV\">NonBlockingFileIO<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2488
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Wrapped non-blocking file io from SwiftNIO",
            "key.doc.declaration" : "private let io: NonBlockingFileIO",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"63\" column=\"17\"><Name>io<\/Name><USR>s:5Vapor6FileIOV2io33_39F4D7CAC418C4DB8EEEF88C5D53EC65LL3NIO011NonBlockingbC0Vvp<\/USR><Declaration>private let io: NonBlockingFileIO<\/Declaration><CommentParts><Abstract><Para>Wrapped non-blocking file io from SwiftNIO<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 63,
            "key.doc.name" : "io",
            "key.doc.type" : "Other",
            "key.doclength" : 47,
            "key.docoffset" : 2437,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>io<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO17NonBlockingFileIOV\">NonBlockingFileIO<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 25,
            "key.name" : "io",
            "key.namelength" : 2,
            "key.nameoffset" : 2500,
            "key.offset" : 2496,
            "key.parsed_declaration" : "private let io: NonBlockingFileIO",
            "key.parsed_scope.end" : 63,
            "key.parsed_scope.start" : 63,
            "key.typename" : "NonBlockingFileIO",
            "key.typeusr" : "$S3NIO17NonBlockingFileIOVD",
            "key.usr" : "s:5Vapor6FileIOV2io33_39F4D7CAC418C4DB8EEEF88C5D53EC65LL3NIO011NonBlockingbC0Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let allocator: <Type usr=\"s:3NIO19ByteBufferAllocatorV\">ByteBufferAllocator<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2586
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "ByteBufferAllocator to use for generating buffers.",
            "key.doc.declaration" : "private let allocator: ByteBufferAllocator",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"66\" column=\"17\"><Name>allocator<\/Name><USR>s:5Vapor6FileIOV9allocator33_39F4D7CAC418C4DB8EEEF88C5D53EC65LL3NIO19ByteBufferAllocatorVvp<\/USR><Declaration>private let allocator: ByteBufferAllocator<\/Declaration><CommentParts><Abstract><Para>ByteBufferAllocator to use for generating buffers.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 66,
            "key.doc.name" : "allocator",
            "key.doc.type" : "Other",
            "key.doclength" : 55,
            "key.docoffset" : 2527,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>allocator<\/decl.name>: <decl.var.type><ref.struct usr=\"s:3NIO19ByteBufferAllocatorV\">ByteBufferAllocator<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 34,
            "key.name" : "allocator",
            "key.namelength" : 9,
            "key.nameoffset" : 2598,
            "key.offset" : 2594,
            "key.parsed_declaration" : "private let allocator: ByteBufferAllocator",
            "key.parsed_scope.end" : 66,
            "key.parsed_scope.start" : 66,
            "key.typename" : "ByteBufferAllocator",
            "key.typeusr" : "$S3NIO19ByteBufferAllocatorVD",
            "key.usr" : "s:5Vapor6FileIOV9allocator33_39F4D7CAC418C4DB8EEEF88C5D53EC65LL3NIO19ByteBufferAllocatorVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let eventLoop: <Type usr=\"s:3NIO9EventLoopP\">EventLoop<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 2669
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "Event loop for async work.",
            "key.doc.declaration" : "private let eventLoop: EventLoop",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"69\" column=\"17\"><Name>eventLoop<\/Name><USR>s:5Vapor6FileIOV9eventLoop33_39F4D7CAC418C4DB8EEEF88C5D53EC65LL3NIO05EventE0_pvp<\/USR><Declaration>private let eventLoop: EventLoop<\/Declaration><CommentParts><Abstract><Para>Event loop for async work.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 69,
            "key.doc.name" : "eventLoop",
            "key.doc.type" : "Other",
            "key.doclength" : 31,
            "key.docoffset" : 2634,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>eventLoop<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:3NIO9EventLoopP\">EventLoop<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 24,
            "key.name" : "eventLoop",
            "key.namelength" : 9,
            "key.nameoffset" : 2681,
            "key.offset" : 2677,
            "key.parsed_declaration" : "private let eventLoop: EventLoop",
            "key.parsed_scope.end" : 69,
            "key.parsed_scope.start" : 69,
            "key.typename" : "EventLoop",
            "key.typeusr" : "$S3NIO9EventLoop_pD",
            "key.usr" : "s:5Vapor6FileIOV9eventLoop33_39F4D7CAC418C4DB8EEEF88C5D53EC65LL3NIO05EventE0_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal init(io: <Type usr=\"s:3NIO17NonBlockingFileIOV\">NonBlockingFileIO<\/Type>, allocator: <Type usr=\"s:3NIO19ByteBufferAllocatorV\">ByteBufferAllocator<\/Type>, on worker: <Type usr=\"s:5Async6Workera\">Worker<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 2793
              }
            ],
            "key.bodylength" : 103,
            "key.bodyoffset" : 2882,
            "key.doc.column" : 14,
            "key.doc.comment" : "Creates a new `FileIO`.\n\nSee `Request.fileio()` to create one.",
            "key.doc.declaration" : "internal init(io: NonBlockingFileIO, allocator: ByteBufferAllocator, on worker: Worker)",
            "key.doc.discussion" : [
              {
                "Para" : "See `Request.fileio()` to create one."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"74\" column=\"14\"><Name>init(io:allocator:on:)<\/Name><USR>s:5Vapor6FileIOV2io9allocator2onAC3NIO011NonBlockingbC0V_AG19ByteBufferAllocatorVAG14EventLoopGroup_ptcfc<\/USR><Declaration>internal init(io: NonBlockingFileIO, allocator: ByteBufferAllocator, on worker: Worker)<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>FileIO<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>See <codeVoice>Request.fileio()<\/codeVoice> to create one.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 74,
            "key.doc.name" : "init(io:allocator:on:)",
            "key.doc.type" : "Function",
            "key.doclength" : 82,
            "key.docoffset" : 2707,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>io<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO17NonBlockingFileIOV\">NonBlockingFileIO<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>allocator<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:3NIO19ByteBufferAllocatorV\">ByteBufferAllocator<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:5Async6Workera\">Worker<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 184,
            "key.name" : "init(io:allocator:on:)",
            "key.namelength" : 78,
            "key.nameoffset" : 2802,
            "key.offset" : 2802,
            "key.parsed_declaration" : "internal init(io: NonBlockingFileIO, allocator: ByteBufferAllocator, on worker: Worker)",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 74,
            "key.substructure" : [

            ],
            "key.typename" : "(FileIO.Type) -> (NonBlockingFileIO, ByteBufferAllocator, EventLoopGroup) -> FileIO",
            "key.typeusr" : "$S2io9allocator2on5Vapor6FileIOV3NIO011NonBlockingeF0V_AG19ByteBufferAllocatorVAG14EventLoopGroup_ptcD",
            "key.usr" : "s:5Vapor6FileIOV2io9allocator2onAC3NIO011NonBlockingbC0V_AG19ByteBufferAllocatorVAG14EventLoopGroup_ptcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func read(file: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:10Foundation4DataV\">Data<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3305
              }
            ],
            "key.bodylength" : 105,
            "key.bodyoffset" : 3353,
            "key.doc.column" : 17,
            "key.doc.comment" : "Reads the contents of a file at the supplied path.\n\n    let data = try req.fileio().read(file: \"\/path\/to\/file.txt\").wait()\n    print(data) \/\/ file data\n\n- parameters:\n    - file: Path to file on the disk.\n- returns: `Future` containing the file data.",
            "key.doc.declaration" : "public func read(file: String) -> Future<Data>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"88\" column=\"17\"><Name>read(file:)<\/Name><USR>s:5Vapor6FileIOV4read4file3NIO15EventLoopFutureCy10Foundation4DataVGSS_tF<\/USR><Declaration>public func read(file: String) -&gt; Future&lt;Data&gt;<\/Declaration><CommentParts><Abstract><Para>Reads the contents of a file at the supplied path.<\/Para><\/Abstract><Parameters><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Path to file on the disk.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>Future<\/codeVoice> containing the file data.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let data = try req.fileio().read(file: \"\/path\/to\/file.txt\").wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(data) \/\/ file data]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 88,
            "key.doc.name" : "read(file:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Path to file on the disk."
                  }
                ],
                "name" : "file"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`Future` containing the file data."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 309,
            "key.docoffset" : 2992,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 147,
            "key.name" : "read(file:)",
            "key.namelength" : 18,
            "key.nameoffset" : 3317,
            "key.offset" : 3312,
            "key.parsed_declaration" : "public func read(file: String) -> Future<Data>",
            "key.parsed_scope.end" : 91,
            "key.parsed_scope.start" : 88,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 24,
                "key.name" : "data",
                "key.namelength" : 4,
                "key.nameoffset" : 3366,
                "key.offset" : 3362,
                "key.parsed_declaration" : "var data: Data = .init()",
                "key.parsed_scope.end" : 89,
                "key.parsed_scope.start" : 89,
                "key.typename" : "Data",
                "key.typeusr" : "$S10Foundation4DataVD",
                "key.usr" : "s:5Vapor6FileIOV4read4file3NIO15EventLoopFutureCy10Foundation4DataVGSS_tF4dataL_AKvp"
              }
            ],
            "key.typename" : "(FileIO) -> (String) -> EventLoopFuture<Data>",
            "key.typeusr" : "$S4file3NIO15EventLoopFutureCy10Foundation4DataVGSS_tcD",
            "key.usr" : "s:5Vapor6FileIOV4read4file3NIO15EventLoopFutureCy10Foundation4DataVGSS_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func readChunked(file: <Type usr=\"s:SS\">String<\/Type>, chunkSize: <Type usr=\"s:Si\">Int<\/Type> = default, onRead: @escaping (<Type usr=\"s:10Foundation4DataV\">Data<\/Type>) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3983
              }
            ],
            "key.bodylength" : 317,
            "key.bodyoffset" : 4125,
            "key.doc.column" : 17,
            "key.doc.comment" : "Reads the contents of a file at the supplied path in chunks.\n\n    try req.fileio().readChunked(file: \"\/path\/to\/file.txt\") { chunk in\n        print(\"chunk: \\(data)\")\n    }.wait()\n\n- parameters:\n    - file: Path to file on the disk.\n    - chunkSize: Maximum size for the file data chunks.\n    - onRead: Closure to be called sequentially for each file data chunk.\n- returns: `Future` that will complete when the file read is finished.",
            "key.doc.declaration" : "public func readChunked(file: String, chunkSize: Int = default, onRead: @escaping (Data) -> Void) -> Future<Void>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"104\" column=\"17\"><Name>readChunked(file:chunkSize:onRead:)<\/Name><USR>s:5Vapor6FileIOV11readChunked4file9chunkSize6onRead3NIO15EventLoopFutureCyytGSS_Siy10Foundation4DataVctF<\/USR><Declaration>public func readChunked(file: String, chunkSize: Int = default, onRead: @escaping (Data) -&gt; Void) -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Reads the contents of a file at the supplied path in chunks.<\/Para><\/Abstract><Parameters><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Path to file on the disk.<\/Para><\/Discussion><\/Parameter><Parameter><Name>chunkSize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Maximum size for the file data chunks.<\/Para><\/Discussion><\/Parameter><Parameter><Name>onRead<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Closure to be called sequentially for each file data chunk.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>Future<\/codeVoice> that will complete when the file read is finished.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try req.fileio().readChunked(file: \"\/path\/to\/file.txt\") { chunk in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"chunk: \\(data)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}.wait()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 104,
            "key.doc.name" : "readChunked(file:chunkSize:onRead:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Path to file on the disk."
                  }
                ],
                "name" : "file"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Maximum size for the file data chunks."
                  }
                ],
                "name" : "chunkSize"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Closure to be called sequentially for each file data chunk."
                  }
                ],
                "name" : "onRead"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`Future` that will complete when the file read is finished."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 514,
            "key.docoffset" : 3465,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>readChunked<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chunkSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>onRead<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 453,
            "key.name" : "readChunked(file:chunkSize:onRead:)",
            "key.namelength" : 112,
            "key.nameoffset" : 3995,
            "key.offset" : 3990,
            "key.parsed_declaration" : "public func readChunked(file: String, chunkSize: Int = NonBlockingFileIO.defaultChunkSize, onRead: @escaping (Data) -> Void) -> Future<Void>",
            "key.parsed_scope.end" : 112,
            "key.parsed_scope.start" : 104,
            "key.substructure" : [

            ],
            "key.typename" : "(FileIO) -> (String, Int, @escaping (Data) -> ()) -> EventLoopFuture<()>",
            "key.typeusr" : "$S4file9chunkSize6onRead3NIO15EventLoopFutureCyytGSS_Siy10Foundation4DataVctcD",
            "key.usr" : "s:5Vapor6FileIOV11readChunked4file9chunkSize6onRead3NIO15EventLoopFutureCyytGSS_Siy10Foundation4DataVctF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func chunkedResponse(file: <Type usr=\"s:SS\">String<\/Type>, for req: <Type usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/Type>, chunkSize: <Type usr=\"s:Si\">Int<\/Type> = default) -&gt; <Type usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5310
              }
            ],
            "key.bodylength" : 1424,
            "key.bodyoffset" : 5444,
            "key.doc.column" : 17,
            "key.doc.comment" : "Generates a chunked `HTTPResponse` for the specified file. This method respects values in\nthe `\"ETag\"` header and is capable of responding `304 Not Modified` if the file in question\nhas not been modified since last served. This method will also set the `\"Content-Type\"` header\nautomatically if an appropriate `MediaType` can be found for the file's suffix.\n\n    router.get(\"file-stream\") { req -> HTTPResponse in\n        return try req.fileio().chunkedResponse(file: \"\/path\/to\/file.txt\")\n    }\n\n- parameters:\n    - file: Path to file on the disk.\n    - req: `HTTPRequest` to parse `\"If-None-Match\"` header from.\n    - chunkSize: Maximum size for the file data chunks.\n- returns: A `200 OK` response containing the file stream and appropriate headers.",
            "key.doc.declaration" : "public func chunkedResponse(file: String, for req: HTTPRequest, chunkSize: Int = default) -> HTTPResponse",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"128\" column=\"17\"><Name>chunkedResponse(file:for:chunkSize:)<\/Name><USR>s:5Vapor6FileIOV15chunkedResponse4file3for9chunkSize4HTTP12HTTPResponseVSS_AH11HTTPRequestVSitF<\/USR><Declaration>public func chunkedResponse(file: String, for req: HTTPRequest, chunkSize: Int = default) -&gt; HTTPResponse<\/Declaration><CommentParts><Abstract><Para>Generates a chunked <codeVoice>HTTPResponse<\/codeVoice> for the specified file. This method respects values in the <codeVoice>&quot;ETag&quot;<\/codeVoice> header and is capable of responding <codeVoice>304 Not Modified<\/codeVoice> if the file in question has not been modified since last served. This method will also set the <codeVoice>&quot;Content-Type&quot;<\/codeVoice> header automatically if an appropriate <codeVoice>MediaType<\/codeVoice> can be found for the file’s suffix.<\/Para><\/Abstract><Parameters><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Path to file on the disk.<\/Para><\/Discussion><\/Parameter><Parameter><Name>req<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPRequest<\/codeVoice> to parse <codeVoice>&quot;If-None-Match&quot;<\/codeVoice> header from.<\/Para><\/Discussion><\/Parameter><Parameter><Name>chunkSize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Maximum size for the file data chunks.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>200 OK<\/codeVoice> response containing the file stream and appropriate headers.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"file-stream\") { req -> HTTPResponse in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return try req.fileio().chunkedResponse(file: \"\/path\/to\/file.txt\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 128,
            "key.doc.name" : "chunkedResponse(file:for:chunkSize:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Path to file on the disk."
                  }
                ],
                "name" : "file"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPRequest` to parse `\"If-None-Match\"` header from."
                  }
                ],
                "name" : "req"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Maximum size for the file data chunks."
                  }
                ],
                "name" : "chunkSize"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `200 OK` response containing the file stream and appropriate headers."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 857,
            "key.docoffset" : 4449,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>chunkedResponse<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>req<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4HTTP11HTTPRequestV\">HTTPRequest<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chunkSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1552,
            "key.name" : "chunkedResponse(file:for:chunkSize:)",
            "key.namelength" : 104,
            "key.nameoffset" : 5322,
            "key.offset" : 5317,
            "key.parsed_declaration" : "public func chunkedResponse(file: String, for req: HTTPRequest, chunkSize: Int = NonBlockingFileIO.defaultChunkSize) -> HTTPResponse",
            "key.parsed_scope.end" : 164,
            "key.parsed_scope.start" : 128,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>headers<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 30,
                "key.name" : "headers",
                "key.namelength" : 7,
                "key.nameoffset" : 5857,
                "key.offset" : 5853,
                "key.parsed_declaration" : "var headers: HTTPHeaders = [:]",
                "key.parsed_scope.end" : 139,
                "key.parsed_scope.start" : 139,
                "key.typename" : "HTTPHeaders",
                "key.typeusr" : "$S8NIOHTTP111HTTPHeadersVD",
                "key.usr" : "s:5Vapor6FileIOV15chunkedResponse4file3for9chunkSize4HTTP12HTTPResponseVSS_AH11HTTPRequestVSitF7headersL_8NIOHTTP111HTTPHeadersVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let fileETag: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fileETag<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 73,
                "key.name" : "fileETag",
                "key.namelength" : 8,
                "key.nameoffset" : 5983,
                "key.offset" : 5979,
                "key.parsed_declaration" : "let fileETag = \"\\(modifiedAt.timeIntervalSince1970)-\\(fileSize.intValue)\"",
                "key.parsed_scope.end" : 142,
                "key.parsed_scope.start" : 142,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:5Vapor6FileIOV15chunkedResponse4file3for9chunkSize4HTTP12HTTPResponseVSS_AH11HTTPRequestVSitF0F4ETagL_SSvp"
              },
              {
                "key.annotated_decl" : "<Declaration>var res: <Type usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>res<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4HTTP12HTTPResponseV\">HTTPResponse<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 53,
                "key.name" : "res",
                "key.namelength" : 3,
                "key.nameoffset" : 6395,
                "key.offset" : 6391,
                "key.parsed_declaration" : "var res = HTTPResponse(status: .ok, headers: headers)",
                "key.parsed_scope.end" : 151,
                "key.parsed_scope.start" : 151,
                "key.typename" : "HTTPResponse",
                "key.typeusr" : "$S4HTTP12HTTPResponseVD",
                "key.usr" : "s:5Vapor6FileIOV15chunkedResponse4file3for9chunkSize4HTTP12HTTPResponseVSS_AH11HTTPRequestVSitF3resL_AJvp"
              }
            ],
            "key.typename" : "(FileIO) -> (String, HTTPRequest, Int) -> HTTPResponse",
            "key.typeusr" : "$S4file3for9chunkSize4HTTP12HTTPResponseVSS_AD11HTTPRequestVSitcD",
            "key.usr" : "s:5Vapor6FileIOV15chunkedResponse4file3for9chunkSize4HTTP12HTTPResponseVSS_AH11HTTPRequestVSitF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func chunkedStream(file: <Type usr=\"s:SS\">String<\/Type>, chunkSize: <Type usr=\"s:Si\">Int<\/Type> = default) -&gt; <Type usr=\"s:4HTTP17HTTPChunkedStreamC\">HTTPChunkedStream<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7482
              }
            ],
            "key.bodylength" : 394,
            "key.bodyoffset" : 7597,
            "key.doc.column" : 17,
            "key.doc.comment" : "Reads the contents of a file at the supplied path into an `HTTPChunkedStream`.\n\n    router.get(\"file-stream\") { req -> HTTPResponse in\n        let stream = try req.fileio().chunkedStream(file: \"\/path\/to\/file.txt\")\n        var res = HTTPResponse(status: .ok, body: stream)\n        res.contentType = .plainText\n        return res\n    }\n\n- parameters:\n    - file: Path to file on the disk.\n    - chunkSize: Maximum size for the file data chunks.\n- returns: An `HTTPChunkedStream` containing the file stream.",
            "key.doc.declaration" : "public func chunkedStream(file: String, chunkSize: Int = default) -> HTTPChunkedStream",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"179\" column=\"17\"><Name>chunkedStream(file:chunkSize:)<\/Name><USR>s:5Vapor6FileIOV13chunkedStream4file9chunkSize4HTTP011HTTPChunkedE0CSS_SitF<\/USR><Declaration>public func chunkedStream(file: String, chunkSize: Int = default) -&gt; HTTPChunkedStream<\/Declaration><CommentParts><Abstract><Para>Reads the contents of a file at the supplied path into an <codeVoice>HTTPChunkedStream<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>file<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Path to file on the disk.<\/Para><\/Discussion><\/Parameter><Parameter><Name>chunkSize<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Maximum size for the file data chunks.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>An <codeVoice>HTTPChunkedStream<\/codeVoice> containing the file stream.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"file-stream\") { req -> HTTPResponse in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let stream = try req.fileio().chunkedStream(file: \"\/path\/to\/file.txt\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var res = HTTPResponse(status: .ok, body: stream)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    res.contentType = .plainText]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return res]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 179,
            "key.doc.name" : "chunkedStream(file:chunkSize:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Path to file on the disk."
                  }
                ],
                "name" : "file"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Maximum size for the file data chunks."
                  }
                ],
                "name" : "chunkSize"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "An `HTTPChunkedStream` containing the file stream."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 603,
            "key.docoffset" : 6875,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>chunkedStream<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chunkSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:4HTTP17HTTPChunkedStreamC\">HTTPChunkedStream<\/ref.class><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 503,
            "key.name" : "chunkedStream(file:chunkSize:)",
            "key.namelength" : 80,
            "key.nameoffset" : 7494,
            "key.offset" : 7489,
            "key.parsed_declaration" : "public func chunkedStream(file: String, chunkSize: Int = NonBlockingFileIO.defaultChunkSize) -> HTTPChunkedStream",
            "key.parsed_scope.end" : 190,
            "key.parsed_scope.start" : 179,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let chunkStream: <Type usr=\"s:4HTTP17HTTPChunkedStreamC\">HTTPChunkedStream<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>chunkStream<\/decl.name>: <decl.var.type><ref.class usr=\"s:4HTTP17HTTPChunkedStreamC\">HTTPChunkedStream<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 50,
                "key.name" : "chunkStream",
                "key.namelength" : 11,
                "key.nameoffset" : 7610,
                "key.offset" : 7606,
                "key.parsed_declaration" : "let chunkStream = HTTPChunkedStream(on: eventLoop)",
                "key.parsed_scope.end" : 180,
                "key.parsed_scope.start" : 180,
                "key.typename" : "HTTPChunkedStream",
                "key.typeusr" : "$S4HTTP17HTTPChunkedStreamCD",
                "key.usr" : "s:5Vapor6FileIOV13chunkedStream4file9chunkSize4HTTP011HTTPChunkedE0CSS_SitF0gE0L_AIvp"
              }
            ],
            "key.typename" : "(FileIO) -> (String, Int) -> HTTPChunkedStream",
            "key.typeusr" : "$S4file9chunkSize4HTTP17HTTPChunkedStreamCSS_SitcD",
            "key.usr" : "s:5Vapor6FileIOV13chunkedStream4file9chunkSize4HTTP011HTTPChunkedE0CSS_SitF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private func _read(file: <Type usr=\"s:SS\">String<\/Type>, chunkSize: <Type usr=\"s:Si\">Int<\/Type> = default, onRead: @escaping (<Type usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:s4Voida\">Void<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 8176
              }
            ],
            "key.bodylength" : 687,
            "key.bodyoffset" : 8327,
            "key.doc.column" : 18,
            "key.doc.comment" : "Private read method. `onRead` closure uses ByteBuffer and expects future return.\nThere may be use in publicizing this in the future for reads that must be async.",
            "key.doc.declaration" : "private func _read(file: String, chunkSize: Int = default, onRead: @escaping (ByteBuffer) -> Future<Void>) -> Future<Void>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"194\" column=\"18\"><Name>_read(file:chunkSize:onRead:)<\/Name><USR>s:5Vapor6FileIOV5_read33_39F4D7CAC418C4DB8EEEF88C5D53EC65LL4file9chunkSize6onRead3NIO15EventLoopFutureCyytGSS_SiAlI10ByteBufferVctF<\/USR><Declaration>private func _read(file: String, chunkSize: Int = default, onRead: @escaping (ByteBuffer) -&gt; Future&lt;Void&gt;) -&gt; Future&lt;Void&gt;<\/Declaration><CommentParts><Abstract><Para>Private read method. <codeVoice>onRead<\/codeVoice> closure uses ByteBuffer and expects future return. There may be use in publicizing this in the future for reads that must be async.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 194,
            "key.doc.name" : "_read(file:chunkSize:onRead:)",
            "key.doc.type" : "Function",
            "key.doclength" : 174,
            "key.docoffset" : 7998,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>_read<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>chunkSize<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>onRead<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:3NIO10ByteBufferV\">ByteBuffer<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 831,
            "key.name" : "_read(file:chunkSize:onRead:)",
            "key.namelength" : 120,
            "key.nameoffset" : 8189,
            "key.offset" : 8184,
            "key.parsed_declaration" : "private func _read(file: String, chunkSize: Int = NonBlockingFileIO.defaultChunkSize, onRead: @escaping (ByteBuffer) -> Future<Void>) -> Future<Void>",
            "key.parsed_scope.end" : 209,
            "key.parsed_scope.start" : 194,
            "key.substructure" : [

            ],
            "key.typename" : "(FileIO) -> (String, Int, @escaping (ByteBuffer) -> EventLoopFuture<()>) -> EventLoopFuture<()>",
            "key.typeusr" : "$S4file9chunkSize6onRead3NIO15EventLoopFutureCyytGSS_SiAgD10ByteBufferVctcD",
            "key.usr" : "s:5Vapor6FileIOV5_read33_39F4D7CAC418C4DB8EEEF88C5D53EC65LL4file9chunkSize6onRead3NIO15EventLoopFutureCyytGSS_SiAlI10ByteBufferVctF"
          }
        ],
        "key.typename" : "FileIO.Type",
        "key.typeusr" : "$S5Vapor6FileIOVmD",
        "key.usr" : "s:5Vapor6FileIOV"
      },
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 13,
        "key.name" : "MARK: Service",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 9022
      },
      {
        "key.annotated_decl" : "<Declaration>struct NonBlockingFileIO<\/Declaration>",
        "key.bodylength" : 192,
        "key.bodyoffset" : 9079,
        "key.doc.declaration" : "struct NonBlockingFileIO",
        "key.doc.discussion" : [
          {
            "Para" : "It is worth noting that `kqueue`, `epoll` or `poll` returning claiming a file is readable does not mean that the data is already available in the kernel’s memory. In other words, a `read` from a file can still block even if reported as readable. This behaviour is also documented behaviour:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "`NonBlockingFileIO` helps to work around this issue by maintaining its own thread pool that is used to read the data from the files into memory. It will then hand the (in-memory) data back which makes it available without the possibility of blocking."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>NonBlockingFileIO<\/Name><USR>s:3NIO17NonBlockingFileIOV<\/USR><Declaration>struct NonBlockingFileIO<\/Declaration><CommentParts><Abstract><Para><codeVoice>NonBlockingFileIO<\/codeVoice> is a helper that allows you to read files without blocking the calling thread.<\/Para><\/Abstract><Discussion><Para>It is worth noting that <codeVoice>kqueue<\/codeVoice>, <codeVoice>epoll<\/codeVoice> or <codeVoice>poll<\/codeVoice> returning claiming a file is readable does not mean that the data is already available in the kernel’s memory. In other words, a <codeVoice>read<\/codeVoice> from a file can still block even if reported as readable. This behaviour is also documented behaviour:<\/Para><List-Bullet><Item><Para><Link href=\"http:\/\/pubs.opengroup.org\/onlinepubs\/009695399\/functions\/poll.html\"><codeVoice>poll<\/codeVoice><\/Link>: “Regular files shall always poll TRUE for reading and writing.”<\/Para><\/Item><Item><Para><Link href=\"http:\/\/man7.org\/linux\/man-pages\/man7\/epoll.7.html\"><codeVoice>epoll<\/codeVoice><\/Link>: “epoll is simply a faster poll(2), and can be used wherever the latter is used since it shares the same semantics.”<\/Para><\/Item><Item><Para><Link href=\"https:\/\/www.freebsd.org\/cgi\/man.cgi?query=kqueue&amp;sektion=2\"><codeVoice>kqueue<\/codeVoice><\/Link>: “Returns when the file pointer is not at the end of file.”<\/Para><\/Item><\/List-Bullet><Para><codeVoice>NonBlockingFileIO<\/codeVoice> helps to work around this issue by maintaining its own thread pool that is used to read the data from the files into memory. It will then hand the (in-memory) data back which makes it available without the possibility of blocking.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "NonBlockingFileIO",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 9066
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>NonBlockingFileIO<\/decl.name><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 235,
        "key.modulename" : "NIO",
        "key.name" : "NonBlockingFileIO",
        "key.namelength" : 17,
        "key.nameoffset" : 9047,
        "key.offset" : 9037,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for container: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:3NIO17NonBlockingFileIOV\">NonBlockingFileIO<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9111
              }
            ],
            "key.bodylength" : 72,
            "key.bodyoffset" : 9197,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for container: Container) throws -> NonBlockingFileIO",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"216\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:3NIO17NonBlockingFileIOV5VaporE11makeService3forAC0H09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for container: Container) throws -&gt; NonBlockingFileIO<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 216,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 9084,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>container<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:3NIO17NonBlockingFileIOV\">NonBlockingFileIO<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 152,
            "key.name" : "makeService(for:)",
            "key.namelength" : 37,
            "key.nameoffset" : 9130,
            "key.offset" : 9118,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for container: Container) throws -> NonBlockingFileIO",
            "key.parsed_scope.end" : 218,
            "key.parsed_scope.start" : 216,
            "key.substructure" : [

            ],
            "key.typename" : "(NonBlockingFileIO.Type) -> (Container) throws -> NonBlockingFileIO",
            "key.typeusr" : "$S3for3NIO17NonBlockingFileIOV7Service9Container_p_tKcD",
            "key.usr" : "s:3NIO17NonBlockingFileIOV5VaporE11makeService3forAC0H09Container_p_tKFZ"
          }
        ],
        "key.typename" : "NonBlockingFileIO.Type",
        "key.typeusr" : "$S3NIO17NonBlockingFileIOVmD",
        "key.usr" : "s:3NIO17NonBlockingFileIOV"
      },
      {
        "key.annotated_decl" : "<Declaration>final class BlockingIOThreadPool<\/Declaration>",
        "key.bodylength" : 226,
        "key.bodyoffset" : 9319,
        "key.doc.declaration" : "final class BlockingIOThreadPool",
        "key.doc.discussion" : [
          {
            "Para" : "When using NIO it is crucial not to block any of the `EventLoop`s as that leads to slow downs or stalls of arbitrary other work. Unfortunately though there are tasks that applications need to achieve for which no non-blocking APIs exist. In those cases `BlockingIOThreadPool` can be used but should be treated as a last resort."
          },
          {
            "Note" : ""
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>BlockingIOThreadPool<\/Name><USR>s:3NIO20BlockingIOThreadPoolC<\/USR><Declaration>final class BlockingIOThreadPool<\/Declaration><CommentParts><Abstract><Para>A thread pool that should be used if some (kernel thread) blocking work needs to be performed for which no non-blocking API exists.<\/Para><\/Abstract><Discussion><Para>When using NIO it is crucial not to block any of the <codeVoice>EventLoop<\/codeVoice>s as that leads to slow downs or stalls of arbitrary other work. Unfortunately though there are tasks that applications need to achieve for which no non-blocking APIs exist. In those cases <codeVoice>BlockingIOThreadPool<\/codeVoice> can be used but should be treated as a last resort.<\/Para><Note><Para>The prime example for missing non-blocking APIs is file IO on UNIX. The OS does not provide a usable and truly non-blocking API but with <codeVoice>NonBlockingFileIO<\/codeVoice> NIO provides a high-level API for file IO that should be preferred to running blocking file IO system calls directly on <codeVoice>BlockingIOThreadPool<\/codeVoice>. Under the covers <codeVoice>NonBlockingFileIO<\/codeVoice> will use <codeVoice>BlockingIOThreadPool<\/codeVoice> on all currently supported platforms though.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "BlockingIOThreadPool",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 9306
          }
        ],
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>BlockingIOThreadPool<\/decl.name><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ServiceType"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 272,
        "key.modulename" : "NIO",
        "key.name" : "BlockingIOThreadPool",
        "key.namelength" : 20,
        "key.nameoffset" : 9284,
        "key.offset" : 9274,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:3NIO20BlockingIOThreadPoolC\">BlockingIOThreadPool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9351
              }
            ],
            "key.bodylength" : 106,
            "key.bodyoffset" : 9437,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> BlockingIOThreadPool",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift\" line=\"223\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:3NIO20BlockingIOThreadPoolC5VaporE11makeService3forAC0G09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; BlockingIOThreadPool<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 223,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 9324,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:3NIO20BlockingIOThreadPoolC\">BlockingIOThreadPool<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 186,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 9370,
            "key.offset" : 9358,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> BlockingIOThreadPool",
            "key.parsed_scope.end" : 227,
            "key.parsed_scope.start" : 223,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let pool: <Type usr=\"s:3NIO20BlockingIOThreadPoolC\">BlockingIOThreadPool<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/FileIO.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>pool<\/decl.name>: <decl.var.type><ref.class usr=\"s:3NIO20BlockingIOThreadPoolC\">BlockingIOThreadPool<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 51,
                "key.name" : "pool",
                "key.namelength" : 4,
                "key.nameoffset" : 9450,
                "key.offset" : 9446,
                "key.parsed_declaration" : "let pool = BlockingIOThreadPool(numberOfThreads: 2)",
                "key.parsed_scope.end" : 224,
                "key.parsed_scope.start" : 224,
                "key.typename" : "BlockingIOThreadPool",
                "key.typeusr" : "$S3NIO20BlockingIOThreadPoolCD",
                "key.usr" : "s:3NIO20BlockingIOThreadPoolC5VaporE11makeService3forAC0G09Container_p_tKFZ4poolL_ACvp"
              }
            ],
            "key.typename" : "(BlockingIOThreadPool.Type) -> (Container) throws -> BlockingIOThreadPool",
            "key.typeusr" : "$S3for3NIO20BlockingIOThreadPoolC7Service9Container_p_tKcD",
            "key.usr" : "s:3NIO20BlockingIOThreadPoolC5VaporE11makeService3forAC0G09Container_p_tKFZ"
          }
        ],
        "key.typename" : "BlockingIOThreadPool.Type",
        "key.typeusr" : "$S3NIO20BlockingIOThreadPoolCmD",
        "key.usr" : "s:3NIO20BlockingIOThreadPoolC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/Thread.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 352,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>class Thread : <Type usr=\"c:objc(cs)NSObject\">NSObject<\/Type><\/Declaration>",
        "key.bodylength" : 332,
        "key.bodyoffset" : 18,
        "key.filepath" : "\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX10.14.sdk\/System\/Library\/Frameworks\/Foundation.framework\/Headers\/NSThread.h",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Thread<\/decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject<\/ref.class><\/decl.class>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 351,
        "key.modulename" : "Foundation.NSThread",
        "key.name" : "Thread",
        "key.namelength" : 6,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func async(_ work: @escaping () -&gt; ())<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 84
              }
            ],
            "key.bodylength" : 210,
            "key.bodyoffset" : 138,
            "key.doc.column" : 24,
            "key.doc.comment" : "Convenience wrapper around `Thread.detachNewThread`.",
            "key.doc.declaration" : "public static func async(_ work: @escaping () -> ())",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/Thread.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/Thread.swift\" line=\"3\" column=\"24\"><Name>async(_:)<\/Name><USR>s:So8NSThreadC5VaporE5asyncyyyycFZ<\/USR><Declaration>public static func async(_ work: @escaping () -&gt; ())<\/Declaration><CommentParts><Abstract><Para>Convenience wrapper around <codeVoice>Thread.detachNewThread<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 3,
            "key.doc.name" : "async(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 57,
            "key.docoffset" : 23,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Utilities\/Thread.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>async<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>work<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 258,
            "key.name" : "async(_:)",
            "key.namelength" : 33,
            "key.nameoffset" : 103,
            "key.offset" : 91,
            "key.parsed_declaration" : "public static func async(_ work: @escaping () -> ())",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 3,
            "key.substructure" : [

            ],
            "key.typename" : "(Thread.Type) -> (@escaping () -> ()) -> ()",
            "key.typeusr" : "$SyyyyccD",
            "key.usr" : "s:So8NSThreadC5VaporE5asyncyyyycFZ"
          }
        ],
        "key.typename" : "Thread.Type",
        "key.typeusr" : "$SSo8NSThreadCmD",
        "key.usr" : "c:objc(cs)NSThread"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 939,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public final class Request : <Type usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/Type>, <Type usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/Type>, <Type usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/Type>, <Type usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/Type>, <Type usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/Type>, <Type usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/Type><\/Declaration>",
        "key.bodylength" : 301,
        "key.bodyoffset" : 19,
        "key.doc.column" : 20,
        "key.doc.declaration" : "public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible",
        "key.doc.discussion" : [
          {
            "Para" : "Use `Request` to access information about the `HTTPRequest` (`req.http`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can also use `Request` to create services you may need while generating a response (`req.make()`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` also carries a `ParametersContainer` for routing. Use `parameters` to fetch parameterized values."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "`Request` is `DatabaseConnectable`, meaning you can use it in-place of an actual `DatabaseConnection`. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "See `HTTPRequest`, `Container`, `ParameterContainer`, and `DatabaseConnectable` for more information."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift\" line=\"27\" column=\"20\"><Name>Request<\/Name><USR>s:5Vapor7RequestC<\/USR><Declaration>public final class Request : ContainerAlias, DatabaseConnectable, HTTPMessageContainer, RequestCodable, CustomStringConvertible, CustomDebugStringConvertible<\/Declaration><CommentParts><Abstract><Para><codeVoice>Request<\/codeVoice> is a service-container wrapper around an <codeVoice>HTTPRequest<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>Use <codeVoice>Request<\/codeVoice> to access information about the <codeVoice>HTTPRequest<\/codeVoice> (<codeVoice>req.http<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(req.http.url.path) \/\/ \"\/hello\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can also use <codeVoice>Request<\/codeVoice> to create services you may need while generating a response (<codeVoice>req.make()<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let client = try req.make(Client.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(client) \/\/ Client]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[client.get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> also carries a <codeVoice>ParametersContainer<\/codeVoice> for routing. Use <codeVoice>parameters<\/codeVoice> to fetch parameterized values.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"hello\", String.parameter) { req -> String in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let name = try req.parameters.next(String.self)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return \"Hello, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><codeVoice>Request<\/codeVoice> is <codeVoice>DatabaseConnectable<\/codeVoice>, meaning you can use it in-place of an actual <codeVoice>DatabaseConnection<\/codeVoice>. When used as a connection, the request will fetch a connection from the event loop’s connection pool and cache the connection for the lifetime of the request.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let users = User.query(on: req).all()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>See <codeVoice>HTTPRequest<\/codeVoice>, <codeVoice>Container<\/codeVoice>, <codeVoice>ParameterContainer<\/codeVoice>, and <codeVoice>DatabaseConnectable<\/codeVoice> for more information.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 27,
        "key.doc.name" : "Request",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Request\/Request.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Request<\/decl.name> : <ref.protocol usr=\"s:7Service14ContainerAliasP\">ContainerAlias<\/ref.protocol>, <ref.protocol usr=\"s:11DatabaseKit0A11ConnectableP\">DatabaseConnectable<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor20HTTPMessageContainerP\">HTTPMessageContainer<\/ref.protocol>, <ref.typealias usr=\"s:5Vapor14RequestCodablea\">RequestCodable<\/ref.typealias>, <ref.protocol usr=\"s:s23CustomStringConvertibleP\">CustomStringConvertible<\/ref.protocol>, <ref.protocol usr=\"s:s28CustomDebugStringConvertibleP\">CustomDebugStringConvertible<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 321,
        "key.name" : "Request",
        "key.namelength" : 7,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 10,
            "key.name" : "MARK: View",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 27
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func view() throws -&gt; <Type usr=\"s:11TemplateKit12ViewRendererP\">ViewRenderer<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 244
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 287,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates a `ViewRenderer`.\n\n    router.get(\"home\") { req -> Future<View> in\n        return try req.view().make(\"home\", [\"message\", \"Hello, world!\"])\n    }",
            "key.doc.declaration" : "public func view() throws -> ViewRenderer",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift\" line=\"10\" column=\"17\"><Name>view()<\/Name><USR>s:5Vapor7RequestC4view11TemplateKit12ViewRenderer_pyKF<\/USR><Declaration>public func view() throws -&gt; ViewRenderer<\/Declaration><CommentParts><Abstract><Para>Creates a <codeVoice>ViewRenderer<\/codeVoice>.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[router.get(\"home\") { req -> Future<View> in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    return try req.view().make(\"home\", [\"message\", \"Hello, world!\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 10,
            "key.doc.name" : "view()",
            "key.doc.type" : "Function",
            "key.doclength" : 197,
            "key.docoffset" : 43,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>view<\/decl.name>() <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"s:11TemplateKit12ViewRendererP\">ViewRenderer<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 68,
            "key.name" : "view()",
            "key.namelength" : 6,
            "key.nameoffset" : 256,
            "key.offset" : 251,
            "key.parsed_declaration" : "public func view() throws -> ViewRenderer",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 10,
            "key.substructure" : [

            ],
            "key.typename" : "(Request) -> () throws -> ViewRenderer",
            "key.typeusr" : "$S11TemplateKit12ViewRenderer_pyKcD",
            "key.usr" : "s:5Vapor7RequestC4view11TemplateKit12ViewRenderer_pyKF"
          }
        ],
        "key.typename" : "Request.Type",
        "key.typeusr" : "$S5Vapor7RequestCmD",
        "key.usr" : "s:5Vapor7RequestC"
      },
      {
        "key.annotated_decl" : "<Declaration>struct View : <Type usr=\"s:s7Codablea\">Codable<\/Type><\/Declaration>",
        "key.bodylength" : 131,
        "key.bodyoffset" : 348,
        "key.doc.declaration" : "struct View : Codable",
        "key.doc.full_as_xml" : "<Class><Name>View<\/Name><USR>s:11TemplateKit4ViewV<\/USR><Declaration>struct View : Codable<\/Declaration><CommentParts><Abstract><Para>A rendered template.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "View",
        "key.doc.type" : "Class",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 339
          }
        ],
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>View<\/decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Content"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 157,
        "key.modulename" : "TemplateKit",
        "key.name" : "View",
        "key.namelength" : 4,
        "key.nameoffset" : 333,
        "key.offset" : 323,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Content",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 356
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var defaultContentType: <Type usr=\"s:4Core9MediaTypeV\">MediaType<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 402
              }
            ],
            "key.bodylength" : 26,
            "key.bodyoffset" : 451,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `Content`.",
            "key.doc.declaration" : "public static var defaultContentType: MediaType { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift\" line=\"19\" column=\"23\"><Name>defaultContentType<\/Name><USR>s:11TemplateKit4ViewV5VaporE18defaultContentType4Core05MediaG0VvpZ<\/USR><Declaration>public static var defaultContentType: MediaType { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>Content<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 19,
            "key.doc.name" : "defaultContentType",
            "key.doc.type" : "Other",
            "key.doclength" : 19,
            "key.docoffset" : 379,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultContentType<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4Core9MediaTypeV\">MediaType<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 69,
            "key.name" : "defaultContentType",
            "key.namelength" : 18,
            "key.nameoffset" : 420,
            "key.offset" : 409,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor7ContentP07defaultB4Type4Core05MediaD0VvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var defaultContentType: MediaType",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 19,
            "key.typename" : "MediaType",
            "key.typeusr" : "$S4Core9MediaTypeVD",
            "key.usr" : "s:11TemplateKit4ViewV5VaporE18defaultContentType4Core05MediaG0VvpZ"
          }
        ],
        "key.typename" : "View.Type",
        "key.typeusr" : "$S11TemplateKit4ViewVmD",
        "key.usr" : "s:11TemplateKit4ViewV"
      },
      {
        "key.annotated_decl" : "<Declaration>protocol ViewRenderer : AnyObject<\/Declaration>",
        "key.bodylength" : 431,
        "key.bodyoffset" : 506,
        "key.doc.declaration" : "protocol ViewRenderer : AnyObject",
        "key.doc.full_as_xml" : "<Class><Name>ViewRenderer<\/Name><USR>s:11TemplateKit12ViewRendererP<\/USR><Declaration>protocol ViewRenderer : AnyObject<\/Declaration><CommentParts><Abstract><Para>Renders an Encodable object into a <codeVoice>View<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.name" : "ViewRenderer",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>ViewRenderer<\/decl.name> : AnyObject<\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 456,
        "key.modulename" : "TemplateKit",
        "key.name" : "ViewRenderer",
        "key.namelength" : 12,
        "key.nameoffset" : 492,
        "key.offset" : 482,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 12,
            "key.name" : "MARK: Render",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 514
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func render(_ path: <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:11TemplateKit4ViewV\">View<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 801
              }
            ],
            "key.bodylength" : 82,
            "key.bodyoffset" : 853,
            "key.doc.column" : 17,
            "key.doc.comment" : "Renders the template at the supplied path with an empty context.\n\n    try req.view().make(\"home\")\n\n- parameters:\n    - path: Path to file containing the template.\n- returns: `Future` containing the rendered `View`.",
            "key.doc.declaration" : "public func render(_ path: String) -> Future<View>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift\" line=\"34\" column=\"17\"><Name>render(_:)<\/Name><USR>s:11TemplateKit12ViewRendererP5VaporE6rendery3NIO15EventLoopFutureCyAA0C0VGSSF<\/USR><Declaration>public func render(_ path: String) -&gt; Future&lt;View&gt;<\/Declaration><CommentParts><Abstract><Para>Renders the template at the supplied path with an empty context.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Path to file containing the template.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para><codeVoice>Future<\/codeVoice> containing the rendered <codeVoice>View<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[try req.view().make(\"home\")]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 34,
            "key.doc.name" : "render(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Path to file containing the template."
                  }
                ],
                "name" : "path"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "`Future` containing the rendered `View`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 265,
            "key.docoffset" : 532,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>render<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.struct usr=\"s:11TemplateKit4ViewV\">View<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 128,
            "key.name" : "render(_:)",
            "key.namelength" : 22,
            "key.nameoffset" : 813,
            "key.offset" : 808,
            "key.parsed_declaration" : "public func render(_ path: String) -> Future<View>",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 34,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererP6render__8userInfo3NIO15EventLoopFutureCyAA0C0VGSS_qd__SDys11AnyHashableVypGtSERd__lF\">render(_:_:userInfo:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererPAAE6rendery3NIO15EventLoopFutureCyAA0C0VGSS_qd__tSERd__lF\">render(_:_:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:11TemplateKit12ViewRendererPAAE6render_8userInfo3NIO15EventLoopFutureCyAA0C0VGSS_SDys11AnyHashableVypGtF\">render(_:userInfo:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let empty: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/View\/Vapor+View.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>empty<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 33,
                "key.name" : "empty",
                "key.namelength" : 5,
                "key.nameoffset" : 866,
                "key.offset" : 862,
                "key.parsed_declaration" : "let empty: [String: String] = [:]",
                "key.parsed_scope.end" : 35,
                "key.parsed_scope.start" : 35,
                "key.typename" : "[String : String]",
                "key.typeusr" : "$SSDyS2SGD",
                "key.usr" : "s:11TemplateKit12ViewRendererP5VaporE6rendery3NIO15EventLoopFutureCyAA0C0VGSSF5emptyL_SDyS2SGvp"
              }
            ],
            "key.typename" : "<Self where Self : ViewRenderer> (Self) -> (String) -> EventLoopFuture<View>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCy11TemplateKit4ViewVGSScD",
            "key.usr" : "s:11TemplateKit12ViewRendererP5VaporE6rendery3NIO15EventLoopFutureCyAA0C0VGSSF"
          }
        ],
        "key.typename" : "ViewRenderer.Protocol",
        "key.typeusr" : "$S11TemplateKit12ViewRenderer_pmD",
        "key.usr" : "s:11TemplateKit12ViewRendererP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1645,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class NIOWebSocketClient : <Type usr=\"s:7Service0A4TypeP\">ServiceType<\/Type>, <Type usr=\"s:5Vapor15WebSocketClientP\">WebSocketClient<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 45
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 38
          }
        ],
        "key.bodylength" : 1536,
        "key.bodyoffset" : 107,
        "key.doc.column" : 20,
        "key.doc.comment" : "SwiftNIO based `WebSocketClient`.",
        "key.doc.declaration" : "public final class NIOWebSocketClient : ServiceType, WebSocketClient",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift\" line=\"2\" column=\"20\"><Name>NIOWebSocketClient<\/Name><USR>s:5Vapor18NIOWebSocketClientC<\/USR><Declaration>public final class NIOWebSocketClient : ServiceType, WebSocketClient<\/Declaration><CommentParts><Abstract><Para>SwiftNIO based <codeVoice>WebSocketClient<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 2,
        "key.doc.name" : "NIOWebSocketClient",
        "key.doc.type" : "Class",
        "key.doclength" : 38,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 77
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 90
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>NIOWebSocketClient<\/decl.name> : <ref.protocol usr=\"s:7Service0A4TypeP\">ServiceType<\/ref.protocol>, <ref.protocol usr=\"s:5Vapor15WebSocketClientP\">WebSocketClient<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ServiceType"
          },
          {
            "key.name" : "WebSocketClient"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 1593,
        "key.name" : "NIOWebSocketClient",
        "key.namelength" : 18,
        "key.nameoffset" : 57,
        "key.offset" : 51,
        "key.parsed_declaration" : "public final class NIOWebSocketClient: ServiceType, WebSocketClient",
        "key.parsed_scope.end" : 35,
        "key.parsed_scope.start" : 2,
        "key.runtime_name" : "_TtC4main18NIOWebSocketClient",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 139
              }
            ],
            "key.bodylength" : 31,
            "key.bodyoffset" : 186,
            "key.doc.column" : 23,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static var serviceSupports: [Any.Type] { get }",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift\" line=\"4\" column=\"23\"><Name>serviceSupports<\/Name><USR>s:5Vapor18NIOWebSocketClientC15serviceSupportsSayypXpGvpZ<\/USR><Declaration>public static var serviceSupports: [Any.Type] { get }<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 4,
            "key.doc.name" : "serviceSupports",
            "key.doc.type" : "Other",
            "key.doclength" : 23,
            "key.docoffset" : 112,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>serviceSupports<\/decl.name>: <decl.var.type>[Any.Type]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 72,
            "key.name" : "serviceSupports",
            "key.namelength" : 15,
            "key.nameoffset" : 157,
            "key.offset" : 146,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP15serviceSupportsSayypXpGvpZ"
              }
            ],
            "key.parsed_declaration" : "public static var serviceSupports: [Any.Type]",
            "key.parsed_scope.end" : 4,
            "key.parsed_scope.start" : 4,
            "key.typename" : "[Any.Type]",
            "key.typeusr" : "$SSayypXpGD",
            "key.usr" : "s:5Vapor18NIOWebSocketClientC15serviceSupportsSayypXpGvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func makeService(for worker: <Type usr=\"s:7Service9ContainerP\">Container<\/Type>) throws -&gt; <Type usr=\"s:5Vapor18NIOWebSocketClientC\">NIOWebSocketClient<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 251
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 335,
            "key.doc.column" : 24,
            "key.doc.comment" : "See `ServiceType`.",
            "key.doc.declaration" : "public static func makeService(for worker: Container) throws -> NIOWebSocketClient",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift\" line=\"7\" column=\"24\"><Name>makeService(for:)<\/Name><USR>s:5Vapor18NIOWebSocketClientC11makeService3forAC0F09Container_p_tKFZ<\/USR><Declaration>public static func makeService(for worker: Container) throws -&gt; NIOWebSocketClient<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>ServiceType<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 7,
            "key.doc.name" : "makeService(for:)",
            "key.doc.type" : "Function",
            "key.doclength" : 23,
            "key.docoffset" : 224,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>makeService<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>worker<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Service9ContainerP\">Container<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor18NIOWebSocketClientC\">NIOWebSocketClient<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 106,
            "key.name" : "makeService(for:)",
            "key.namelength" : 34,
            "key.nameoffset" : 270,
            "key.offset" : 258,
            "key.overrides" : [
              {
                "key.usr" : "s:7Service0A4TypeP04makeA03forxAA9Container_p_tKFZ"
              }
            ],
            "key.parsed_declaration" : "public static func makeService(for worker: Container) throws -> NIOWebSocketClient",
            "key.parsed_scope.end" : 9,
            "key.parsed_scope.start" : 7,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOWebSocketClient.Type) -> (Container) throws -> NIOWebSocketClient",
            "key.typeusr" : "$S3for5Vapor18NIOWebSocketClientC7Service9Container_p_tKcD",
            "key.usr" : "s:5Vapor18NIOWebSocketClientC11makeService3forAC0F09Container_p_tKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 414
              }
            ],
            "key.bodylength" : 1,
            "key.bodyoffset" : 429,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `NIOWebSocketClient`.",
            "key.doc.declaration" : "public init()",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift\" line=\"12\" column=\"12\"><Name>init()<\/Name><USR>s:5Vapor18NIOWebSocketClientCACycfc<\/USR><Declaration>public init()<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>NIOWebSocketClient<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 12,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 40,
            "key.docoffset" : 370,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 10,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 421,
            "key.offset" : 421,
            "key.parsed_declaration" : "public init()",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.typename" : "(NIOWebSocketClient.Type) -> () -> NIOWebSocketClient",
            "key.typeusr" : "$S5Vapor18NIOWebSocketClientCycD",
            "key.usr" : "s:5Vapor18NIOWebSocketClientCACycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func webSocketConnect(_ request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 468
              }
            ],
            "key.bodylength" : 1102,
            "key.bodyoffset" : 539,
            "key.doc.column" : 17,
            "key.doc.comment" : "See `WebSocketClient`.",
            "key.doc.declaration" : "public func webSocketConnect(_ request: Request) -> Future<WebSocket>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift\" line=\"15\" column=\"17\"><Name>webSocketConnect(_:)<\/Name><USR>s:5Vapor18NIOWebSocketClientC03webC7Connecty3NIO15EventLoopFutureCy03WebC0AHCGAA7RequestCF<\/USR><Declaration>public func webSocketConnect(_ request: Request) -&gt; Future&lt;WebSocket&gt;<\/Declaration><CommentParts><Abstract><Para>See <codeVoice>WebSocketClient<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 15,
            "key.doc.name" : "webSocketConnect(_:)",
            "key.doc.type" : "Function",
            "key.doclength" : 27,
            "key.docoffset" : 437,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>webSocketConnect<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1167,
            "key.name" : "webSocketConnect(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 480,
            "key.offset" : 475,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor15WebSocketClientP03webC7Connecty3NIO15EventLoopFutureCy0bC0AHCGAA7RequestCF"
              }
            ],
            "key.parsed_declaration" : "public func webSocketConnect(_ request: Request) -> Future<WebSocket>",
            "key.parsed_scope.end" : 34,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let httpScheme: <Type usr=\"s:4HTTP10HTTPSchemeV\">HTTPScheme<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>httpScheme<\/decl.name>: <decl.var.type><ref.struct usr=\"s:4HTTP10HTTPSchemeV\">HTTPScheme<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 26,
                "key.name" : "httpScheme",
                "key.namelength" : 10,
                "key.nameoffset" : 1074,
                "key.offset" : 1070,
                "key.parsed_declaration" : "let httpScheme: HTTPScheme",
                "key.parsed_scope.end" : 24,
                "key.parsed_scope.start" : 24,
                "key.typename" : "HTTPScheme",
                "key.typeusr" : "$S4HTTP10HTTPSchemeVD",
                "key.usr" : "s:5Vapor18NIOWebSocketClientC03webC7Connecty3NIO15EventLoopFutureCy03WebC0AHCGAA7RequestCF10httpSchemeL_4HTTP10HTTPSchemeVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let path: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketClient.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 70,
                "key.name" : "path",
                "key.namelength" : 4,
                "key.nameoffset" : 1440,
                "key.offset" : 1436,
                "key.parsed_declaration" : "let path = request.http.url.path.isEmpty ? \"\/\" : request.http.url.path",
                "key.parsed_scope.end" : 32,
                "key.parsed_scope.start" : 32,
                "key.typename" : "String",
                "key.typeusr" : "$SSSD",
                "key.usr" : "s:5Vapor18NIOWebSocketClientC03webC7Connecty3NIO15EventLoopFutureCy03WebC0AHCGAA7RequestCF4pathL_SSvp"
              }
            ],
            "key.typename" : "(NIOWebSocketClient) -> (Request) -> EventLoopFuture<WebSocket>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCy9WebSocketADCG5Vapor7RequestCcD",
            "key.usr" : "s:5Vapor18NIOWebSocketClientC03webC7Connecty3NIO15EventLoopFutureCy03WebC0AHCGAA7RequestCF"
          }
        ],
        "key.typename" : "NIOWebSocketClient.Type",
        "key.typeusr" : "$S5Vapor18NIOWebSocketClientCmD",
        "key.usr" : "s:5Vapor18NIOWebSocketClientC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 7097,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public final class NIOWebSocketServer : <Type usr=\"s:5Vapor15WebSocketServerP\">WebSocketServer<\/Type>, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.final",
            "key.length" : 5,
            "key.offset" : 1043
          },
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1036
          }
        ],
        "key.bodylength" : 2964,
        "key.bodyoffset" : 1101,
        "key.doc.column" : 20,
        "key.doc.comment" : "Vapor's default `WebSocketServer` implementation. Includes conformance to `WebSocketServer`\nthat is backed by a `TrieRouter` for registering multiple different websocket handlers.\n\nA `WebSocketServer` determines whether HTTP requests requesting upgrade to the websocket protocol should\nbe approved or denied. If approved, additional headers can be returned in the 101 switching protocols response.\n\nWhen HTTP upgrade requests are approved, the `WebSocketServer` will handle the newly connected websocket clients.\n\nHTTP upgrade requests will be handled by the `WebSocketServer` before invoking Vapor's normal HTTP request pipeline\n(including middleware). Should an HTTP upgrade request be accepted, no other parts of Vapor's pipeline will be invoked.\nShould the HTTP upgrade request be denied, the request will continue through Vapor's HTTP pipeline normally.\n\nNote: The `WebSocketServer` _always_ runs behind an HTTP server and will only be invoked when HTTP requests request an upgrade.",
        "key.doc.declaration" : "public final class NIOWebSocketServer : WebSocketServer, Service",
        "key.doc.discussion" : [
          {
            "Para" : "A `WebSocketServer` determines whether HTTP requests requesting upgrade to the websocket protocol should be approved or denied. If approved, additional headers can be returned in the 101 switching protocols response."
          },
          {
            "Para" : "When HTTP upgrade requests are approved, the `WebSocketServer` will handle the newly connected websocket clients."
          },
          {
            "Para" : "HTTP upgrade requests will be handled by the `WebSocketServer` before invoking Vapor’s normal HTTP request pipeline (including middleware). Should an HTTP upgrade request be accepted, no other parts of Vapor’s pipeline will be invoked. Should the HTTP upgrade request be denied, the request will continue through Vapor’s HTTP pipeline normally."
          },
          {
            "Para" : "Note: The `WebSocketServer`  runs behind an HTTP server and will only be invoked when HTTP requests request an upgrade."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"14\" column=\"20\"><Name>NIOWebSocketServer<\/Name><USR>s:5Vapor18NIOWebSocketServerC<\/USR><Declaration>public final class NIOWebSocketServer : WebSocketServer, Service<\/Declaration><CommentParts><Abstract><Para>Vapor’s default <codeVoice>WebSocketServer<\/codeVoice> implementation. Includes conformance to <codeVoice>WebSocketServer<\/codeVoice> that is backed by a <codeVoice>TrieRouter<\/codeVoice> for registering multiple different websocket handlers.<\/Para><\/Abstract><Discussion><Para>A <codeVoice>WebSocketServer<\/codeVoice> determines whether HTTP requests requesting upgrade to the websocket protocol should be approved or denied. If approved, additional headers can be returned in the 101 switching protocols response.<\/Para><Para>When HTTP upgrade requests are approved, the <codeVoice>WebSocketServer<\/codeVoice> will handle the newly connected websocket clients.<\/Para><Para>HTTP upgrade requests will be handled by the <codeVoice>WebSocketServer<\/codeVoice> before invoking Vapor’s normal HTTP request pipeline (including middleware). Should an HTTP upgrade request be accepted, no other parts of Vapor’s pipeline will be invoked. Should the HTTP upgrade request be denied, the request will continue through Vapor’s HTTP pipeline normally.<\/Para><Para>Note: The <codeVoice>WebSocketServer<\/codeVoice> <emphasis>always<\/emphasis> runs behind an HTTP server and will only be invoked when HTTP requests request an upgrade.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 14,
        "key.doc.name" : "NIOWebSocketServer",
        "key.doc.type" : "Class",
        "key.doclength" : 1036,
        "key.docoffset" : 0,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 15,
            "key.offset" : 1075
          },
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 1092
          }
        ],
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>NIOWebSocketServer<\/decl.name> : <ref.protocol usr=\"s:5Vapor15WebSocketServerP\">WebSocketServer<\/ref.protocol>, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "WebSocketServer"
          },
          {
            "key.name" : "Service"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 3017,
        "key.name" : "NIOWebSocketServer",
        "key.namelength" : 18,
        "key.nameoffset" : 1055,
        "key.offset" : 1049,
        "key.parsed_declaration" : "public final class NIOWebSocketServer: WebSocketServer, Service",
        "key.parsed_scope.end" : 79,
        "key.parsed_scope.start" : 14,
        "key.runtime_name" : "_TtC4main18NIOWebSocketServer",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private let router: <Type usr=\"s:7Routing10TrieRouterC\">TrieRouter<\/Type>&lt;<Type usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 1249
              }
            ],
            "key.doc.column" : 17,
            "key.doc.comment" : "The internal trie-node router backing this server.\nThis will be used to register and retrieve all websocket responding routes.",
            "key.doc.declaration" : "private let router: TrieRouter<WebSocketResponder>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"17\" column=\"17\"><Name>router<\/Name><USR>s:5Vapor18NIOWebSocketServerC6router33_8F18ED0B45B72D9A72D34ACD1B6D99D6LL7Routing10TrieRouterCyAA03WebC9ResponderVGvp<\/USR><Declaration>private let router: TrieRouter&lt;WebSocketResponder&gt;<\/Declaration><CommentParts><Abstract><Para>The internal trie-node router backing this server. This will be used to register and retrieve all websocket responding routes.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 17,
            "key.doc.name" : "router",
            "key.doc.type" : "Other",
            "key.doclength" : 139,
            "key.docoffset" : 1106,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>router<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Routing10TrieRouterC\">TrieRouter<\/ref.class>&lt;<ref.struct usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 42,
            "key.name" : "router",
            "key.namelength" : 6,
            "key.nameoffset" : 1261,
            "key.offset" : 1257,
            "key.parsed_declaration" : "private let router: TrieRouter<WebSocketResponder>",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.typename" : "TrieRouter<WebSocketResponder>",
            "key.typeusr" : "$S7Routing10TrieRouterCy5Vapor18WebSocketResponderVGD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerC6router33_8F18ED0B45B72D9A72D34ACD1B6D99D6LL7Routing10TrieRouterCyAA03WebC9ResponderVGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var routes: [<Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/Type>&gt;]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1395
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "All websocket responder routes that have been added to this `NIOWebSocketServer`.",
            "key.doc.declaration" : "public var routes: [Route<WebSocketResponder>]",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"20\" column=\"16\"><Name>routes<\/Name><USR>s:5Vapor18NIOWebSocketServerC6routesSay7Routing5RouteCyAA03WebC9ResponderVGGvp<\/USR><Declaration>public var routes: [Route&lt;WebSocketResponder&gt;]<\/Declaration><CommentParts><Abstract><Para>All websocket responder routes that have been added to this <codeVoice>NIOWebSocketServer<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 20,
            "key.doc.name" : "routes",
            "key.doc.type" : "Other",
            "key.doclength" : 86,
            "key.docoffset" : 1305,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>routes<\/decl.name>: <decl.var.type>[<ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.struct usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/ref.struct>&gt;]<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 39,
            "key.name" : "routes",
            "key.namelength" : 6,
            "key.nameoffset" : 1406,
            "key.offset" : 1402,
            "key.parsed_declaration" : "public var routes: [Route<WebSocketResponder>]",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[Route<WebSocketResponder>]",
            "key.typeusr" : "$SSay7Routing5RouteCy5Vapor18WebSocketResponderVGGD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerC6routesSay7Routing5RouteCyAA03WebC9ResponderVGGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func `default`() -&gt; <Type usr=\"s:5Vapor18NIOWebSocketServerC\">NIOWebSocketServer<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1513
              }
            ],
            "key.bodylength" : 28,
            "key.bodyoffset" : 1567,
            "key.doc.column" : 24,
            "key.doc.comment" : "Creates a new `NIOWebSocketServer` with default settings.",
            "key.doc.declaration" : "public static func `default`() -> NIOWebSocketServer",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"23\" column=\"24\"><Name>default()<\/Name><USR>s:5Vapor18NIOWebSocketServerC7defaultACyFZ<\/USR><Declaration>public static func `default`() -&gt; NIOWebSocketServer<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>NIOWebSocketServer<\/codeVoice> with default settings.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 23,
            "key.doc.name" : "default()",
            "key.doc.type" : "Function",
            "key.doclength" : 62,
            "key.docoffset" : 1447,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>`default`<\/decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:5Vapor18NIOWebSocketServerC\">NIOWebSocketServer<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 76,
            "key.name" : "default()",
            "key.namelength" : 11,
            "key.nameoffset" : 1532,
            "key.offset" : 1520,
            "key.parsed_declaration" : "public static func `default`() -> NIOWebSocketServer",
            "key.parsed_scope.end" : 25,
            "key.parsed_scope.start" : 23,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOWebSocketServer.Type) -> () -> NIOWebSocketServer",
            "key.typeusr" : "$S5Vapor18NIOWebSocketServerCycD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerC7defaultACyFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal init()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 1702
              }
            ],
            "key.bodylength" : 55,
            "key.bodyoffset" : 1719,
            "key.doc.column" : 14,
            "key.doc.comment" : "Creates a new `NIOWebSocketServer`. Use the `.default()` static method to do this publicly.",
            "key.doc.declaration" : "internal init()",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"28\" column=\"14\"><Name>init()<\/Name><USR>s:5Vapor18NIOWebSocketServerCACycfc<\/USR><Declaration>internal init()<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>NIOWebSocketServer<\/codeVoice>. Use the <codeVoice>.default()<\/codeVoice> static method to do this publicly.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 28,
            "key.doc.name" : "init()",
            "key.doc.type" : "Function",
            "key.doclength" : 96,
            "key.docoffset" : 1602,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>()<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 64,
            "key.name" : "init()",
            "key.namelength" : 6,
            "key.nameoffset" : 1711,
            "key.offset" : 1711,
            "key.parsed_declaration" : "internal init()",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 28,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOWebSocketServer.Type) -> () -> NIOWebSocketServer",
            "key.typeusr" : "$S5Vapor18NIOWebSocketServerCycD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerCACycfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func register(route: <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/Type>&gt;)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2128
              }
            ],
            "key.bodylength" : 72,
            "key.bodyoffset" : 2184,
            "key.doc.column" : 17,
            "key.doc.comment" : "Registers a new `Route<WebSocketResponder>` to this `NIOWebSocketServer`.\n\nThis is normally done using the convenience `.get(...)` methods. However, this method is\nuseful for registering custom routes.\n\n- parameters:\n    - route: The websocket responder route to add to this websocket server.",
            "key.doc.declaration" : "public func register(route: Route<WebSocketResponder>)",
            "key.doc.discussion" : [
              {
                "Para" : "This is normally done using the convenience `.get(...)` methods. However, this method is useful for registering custom routes."
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"40\" column=\"17\"><Name>register(route:)<\/Name><USR>s:5Vapor18NIOWebSocketServerC8register5routey7Routing5RouteCyAA03WebC9ResponderVG_tF<\/USR><Declaration>public func register(route: Route&lt;WebSocketResponder&gt;)<\/Declaration><CommentParts><Abstract><Para>Registers a new <codeVoice>Route&lt;WebSocketResponder&gt;<\/codeVoice> to this <codeVoice>NIOWebSocketServer<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>route<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The websocket responder route to add to this websocket server.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This is normally done using the convenience <codeVoice>.get(...)<\/codeVoice> methods. However, this method is useful for registering custom routes.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 40,
            "key.doc.name" : "register(route:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The websocket responder route to add to this websocket server."
                  }
                ],
                "name" : "route"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 343,
            "key.docoffset" : 1781,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>register<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>route<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.struct usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/ref.struct>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 122,
            "key.name" : "register(route:)",
            "key.namelength" : 42,
            "key.nameoffset" : 2140,
            "key.offset" : 2135,
            "key.parsed_declaration" : "public func register(route: Route<WebSocketResponder>)",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 40,
            "key.substructure" : [

            ],
            "key.typename" : "(NIOWebSocketServer) -> (Route<WebSocketResponder>) -> ()",
            "key.typeusr" : "$S5routey7Routing5RouteCy5Vapor18WebSocketResponderVG_tcD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerC8register5routey7Routing5RouteCyAA03WebC9ResponderVG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func webSocketShouldUpgrade(for request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2711
              }
            ],
            "key.bodylength" : 307,
            "key.bodyoffset" : 2785,
            "key.doc.column" : 17,
            "key.doc.comment" : "Determines whether the HTTP request should be upgraded or not.\nOnly HTTP requests that have requested websocket protocol upgrade will be supplied to this method.\n\n- parameters:\n    - request: The HTTP request requesting upgrade to websocket protocol.\n- returns: HTTPHeaders to include in the 101 switching protocols HTTP response.\n           If `nil`, the HTTP upgrade request will be denied.",
            "key.doc.declaration" : "public func webSocketShouldUpgrade(for request: Request) -> HTTPHeaders?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"52\" column=\"17\"><Name>webSocketShouldUpgrade(for:)<\/Name><USR>s:5Vapor18NIOWebSocketServerC03webC13ShouldUpgrade3for8NIOHTTP111HTTPHeadersVSgAA7RequestC_tF<\/USR><Declaration>public func webSocketShouldUpgrade(for request: Request) -&gt; HTTPHeaders?<\/Declaration><CommentParts><Abstract><Para>Determines whether the HTTP request should be upgraded or not. Only HTTP requests that have requested websocket protocol upgrade will be supplied to this method.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The HTTP request requesting upgrade to websocket protocol.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>HTTPHeaders to include in the 101 switching protocols HTTP response. If <codeVoice>nil<\/codeVoice>, the HTTP upgrade request will be denied.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 52,
            "key.doc.name" : "webSocketShouldUpgrade(for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The HTTP request requesting upgrade to websocket protocol."
                  }
                ],
                "name" : "request"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "HTTPHeaders to include in the 101 switching protocols HTTP response. If `nil`, the HTTP upgrade request will be denied."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 444,
            "key.docoffset" : 2263,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>webSocketShouldUpgrade<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 375,
            "key.name" : "webSocketShouldUpgrade(for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 2723,
            "key.offset" : 2718,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor15WebSocketServerP03webC13ShouldUpgrade3for8NIOHTTP111HTTPHeadersVSgAA7RequestC_tF"
              }
            ],
            "key.parsed_declaration" : "public func webSocketShouldUpgrade(for request: Request) -> HTTPHeaders?",
            "key.parsed_scope.end" : 59,
            "key.parsed_scope.start" : 52,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 44,
                "key.name" : "FIXME: move to using uri bytes when possible",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2797
              },
              {
                "key.annotated_decl" : "<Declaration>let path: [<Type usr=\"s:Ss\">Substring<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:Ss\">Substring<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 68,
                "key.name" : "path",
                "key.namelength" : 4,
                "key.nameoffset" : 2854,
                "key.offset" : 2850,
                "key.parsed_declaration" : "let path: [Substring] = request.http.urlString.split(separator: \"\/\")",
                "key.parsed_scope.end" : 54,
                "key.parsed_scope.start" : 54,
                "key.typename" : "[Substring]",
                "key.typeusr" : "$SSaySsGD",
                "key.usr" : "s:5Vapor18NIOWebSocketServerC03webC13ShouldUpgrade3for8NIOHTTP111HTTPHeadersVSgAA7RequestC_tF4pathL_SaySsGvp"
              }
            ],
            "key.typename" : "(NIOWebSocketServer) -> (Request) -> HTTPHeaders?",
            "key.typeusr" : "$S3for8NIOHTTP111HTTPHeadersVSg5Vapor7RequestC_tcD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerC03webC13ShouldUpgrade3for8NIOHTTP111HTTPHeadersVSgAA7RequestC_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func webSocketOnUpgrade(_ webSocket: <Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>, for request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3490
              }
            ],
            "key.bodylength" : 495,
            "key.bodyoffset" : 3568,
            "key.doc.column" : 17,
            "key.doc.comment" : "Handles newly connected websocket clients. This method will only be called if `webSocketShouldUpgrade(for:)` returned\nnon-nil HTTP headers.\n\n- parameters:\n    - webSocket: The newly connected websocket client. Use this to send and receive messages from the client.\n    - request: The HTTP request that initiated the websocket protocol upgrade.",
            "key.doc.declaration" : "public func webSocketOnUpgrade(_ webSocket: WebSocket, for request: Request)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"67\" column=\"17\"><Name>webSocketOnUpgrade(_:for:)<\/Name><USR>s:5Vapor18NIOWebSocketServerC03webC9OnUpgrade_3fory03WebC0AFC_AA7RequestCtF<\/USR><Declaration>public func webSocketOnUpgrade(_ webSocket: WebSocket, for request: Request)<\/Declaration><CommentParts><Abstract><Para>Handles newly connected websocket clients. This method will only be called if <codeVoice>webSocketShouldUpgrade(for:)<\/codeVoice> returned non-nil HTTP headers.<\/Para><\/Abstract><Parameters><Parameter><Name>webSocket<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The newly connected websocket client. Use this to send and receive messages from the client.<\/Para><\/Discussion><\/Parameter><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The HTTP request that initiated the websocket protocol upgrade.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 67,
            "key.doc.name" : "webSocketOnUpgrade(_:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The newly connected websocket client. Use this to send and receive messages from the client."
                  }
                ],
                "name" : "webSocket"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The HTTP request that initiated the websocket protocol upgrade."
                  }
                ],
                "name" : "request"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 387,
            "key.docoffset" : 3099,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>webSocketOnUpgrade<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>webSocket<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 567,
            "key.name" : "webSocketOnUpgrade(_:for:)",
            "key.namelength" : 64,
            "key.nameoffset" : 3502,
            "key.offset" : 3497,
            "key.overrides" : [
              {
                "key.usr" : "s:5Vapor15WebSocketServerP03webC9OnUpgrade_3fory0bC0AFC_AA7RequestCtF"
              }
            ],
            "key.parsed_declaration" : "public func webSocketOnUpgrade(_ webSocket: WebSocket, for request: Request)",
            "key.parsed_scope.end" : 78,
            "key.parsed_scope.start" : 67,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let path: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 84,
                "key.name" : "path",
                "key.namelength" : 4,
                "key.nameoffset" : 3581,
                "key.offset" : 3577,
                "key.parsed_declaration" : "let path: [String] = request.http.urlString.split(separator: \"\/\").map { String($0) }",
                "key.parsed_scope.end" : 68,
                "key.parsed_scope.start" : 68,
                "key.typename" : "[String]",
                "key.typeusr" : "$SSaySSGD",
                "key.usr" : "s:5Vapor18NIOWebSocketServerC03webC9OnUpgrade_3fory03WebC0AFC_AA7RequestCtF4pathL_SaySSGvp"
              }
            ],
            "key.typename" : "(NIOWebSocketServer) -> (WebSocket, Request) -> ()",
            "key.typeusr" : "$S_3fory9WebSocketABC_5Vapor7RequestCtcD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerC03webC9OnUpgrade_3fory03WebC0AFC_AA7RequestCtF"
          }
        ],
        "key.typename" : "NIOWebSocketServer.Type",
        "key.typeusr" : "$S5Vapor18NIOWebSocketServerCmD",
        "key.usr" : "s:5Vapor18NIOWebSocketServerC"
      },
      {
        "key.annotated_decl" : "<Declaration>public final class NIOWebSocketServer : <Type usr=\"s:5Vapor15WebSocketServerP\">WebSocketServer<\/Type>, <Type usr=\"s:7ServiceAAP\">Service<\/Type><\/Declaration>",
        "key.bodylength" : 2968,
        "key.bodyoffset" : 4127,
        "key.doc.column" : 20,
        "key.doc.comment" : "MARK: Convenience `get`",
        "key.doc.declaration" : "public final class NIOWebSocketServer : WebSocketServer, Service",
        "key.doc.discussion" : [
          {
            "Para" : "A `WebSocketServer` determines whether HTTP requests requesting upgrade to the websocket protocol should be approved or denied. If approved, additional headers can be returned in the 101 switching protocols response."
          },
          {
            "Para" : "When HTTP upgrade requests are approved, the `WebSocketServer` will handle the newly connected websocket clients."
          },
          {
            "Para" : "HTTP upgrade requests will be handled by the `WebSocketServer` before invoking Vapor’s normal HTTP request pipeline (including middleware). Should an HTTP upgrade request be accepted, no other parts of Vapor’s pipeline will be invoked. Should the HTTP upgrade request be denied, the request will continue through Vapor’s HTTP pipeline normally."
          },
          {
            "Para" : "Note: The `WebSocketServer`  runs behind an HTTP server and will only be invoked when HTTP requests request an upgrade."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"14\" column=\"20\"><Name>NIOWebSocketServer<\/Name><USR>s:5Vapor18NIOWebSocketServerC<\/USR><Declaration>public final class NIOWebSocketServer : WebSocketServer, Service<\/Declaration><CommentParts><Abstract><Para>Vapor’s default <codeVoice>WebSocketServer<\/codeVoice> implementation. Includes conformance to <codeVoice>WebSocketServer<\/codeVoice> that is backed by a <codeVoice>TrieRouter<\/codeVoice> for registering multiple different websocket handlers.<\/Para><\/Abstract><Discussion><Para>A <codeVoice>WebSocketServer<\/codeVoice> determines whether HTTP requests requesting upgrade to the websocket protocol should be approved or denied. If approved, additional headers can be returned in the 101 switching protocols response.<\/Para><Para>When HTTP upgrade requests are approved, the <codeVoice>WebSocketServer<\/codeVoice> will handle the newly connected websocket clients.<\/Para><Para>HTTP upgrade requests will be handled by the <codeVoice>WebSocketServer<\/codeVoice> before invoking Vapor’s normal HTTP request pipeline (including middleware). Should an HTTP upgrade request be accepted, no other parts of Vapor’s pipeline will be invoked. Should the HTTP upgrade request be denied, the request will continue through Vapor’s HTTP pipeline normally.<\/Para><Para>Note: The <codeVoice>WebSocketServer<\/codeVoice> <emphasis>always<\/emphasis> runs behind an HTTP server and will only be invoked when HTTP requests request an upgrade.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 14,
        "key.doc.name" : "NIOWebSocketServer",
        "key.doc.type" : "Class",
        "key.doclength" : 28,
        "key.docoffset" : 4068,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>NIOWebSocketServer<\/decl.name> : <ref.protocol usr=\"s:5Vapor15WebSocketServerP\">WebSocketServer<\/ref.protocol>, <ref.protocol usr=\"s:7ServiceAAP\">Service<\/ref.protocol><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2999,
        "key.name" : "NIOWebSocketServer",
        "key.namelength" : 18,
        "key.nameoffset" : 4107,
        "key.offset" : 4097,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func get(at path: [<Type usr=\"s:7Routing13PathComponentO\">PathComponent<\/Type>], use closure: @escaping (<Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>, <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; ()) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4850
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 4827
              }
            ],
            "key.bodylength" : 267,
            "key.bodyoffset" : 4980,
            "key.doc.column" : 17,
            "key.doc.comment" : "Registers a new websocket handling route at the supplied dynamic path.\n\n- parameters:\n    - path: Dynamic path to associate with this websocket upgrade closure.\n            HTTP upgrade requests that contain a matching path will invoke the supplied on upgrade\n            closure when the websocket client connects.\n            Any parameterized values can be retrieved from the HTTP request supplied to the closure.\n    - closure: Websocket on upgrade closure. Accepts newly upgraded websocket connections.\n\n- returns: Discardable websocket responder route. Use this route reference to append metadata to the route.",
            "key.doc.declaration" : "public func get(at path: [PathComponent], use closure: @escaping (WebSocket, Request) throws -> ()) -> Route<WebSocketResponder>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"95\" column=\"17\"><Name>get(at:use:)<\/Name><USR>s:5Vapor18NIOWebSocketServerC3get2at3use7Routing5RouteCyAA03WebC9ResponderVGSayAG13PathComponentOG_y0jC0APC_AA7RequestCtKctF<\/USR><Declaration>public func get(at path: [PathComponent], use closure: @escaping (WebSocket, Request) throws -&gt; ()) -&gt; Route&lt;WebSocketResponder&gt;<\/Declaration><CommentParts><Abstract><Para>Registers a new websocket handling route at the supplied dynamic path.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dynamic path to associate with this websocket upgrade closure. HTTP upgrade requests that contain a matching path will invoke the supplied on upgrade closure when the websocket client connects. Any parameterized values can be retrieved from the HTTP request supplied to the closure.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Websocket on upgrade closure. Accepts newly upgraded websocket connections.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable websocket responder route. Use this route reference to append metadata to the route.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 95,
            "key.doc.name" : "get(at:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Dynamic path to associate with this websocket upgrade closure. HTTP upgrade requests that contain a matching path will invoke the supplied on upgrade closure when the websocket client connects. Any parameterized values can be retrieved from the HTTP request supplied to the closure."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Websocket on upgrade closure. Accepts newly upgraded websocket connections."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable websocket responder route. Use this route reference to append metadata to the route."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 691,
            "key.docoffset" : 4132,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type>[<ref.enum usr=\"s:7Routing13PathComponentO\">PathComponent<\/ref.enum>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.struct usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 391,
            "key.name" : "get(at:use:)",
            "key.namelength" : 87,
            "key.nameoffset" : 4862,
            "key.offset" : 4857,
            "key.parsed_declaration" : "public func get(at path: [PathComponent], use closure: @escaping (WebSocket, Request) throws -> ()) -> Route<WebSocketResponder>",
            "key.parsed_scope.end" : 103,
            "key.parsed_scope.start" : 95,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor18NIOWebSocketServerC3get_3use7Routing5RouteCyAA03WebC9ResponderVGAF13PathComponentOd_y0iC0ANC_AA7RequestCtKctF\">get(_: PathComponent..., use: @escaping (WebSocket, Request) throws -&gt; ()) -&gt; Route&lt;WebSocketResponder&gt;<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor18NIOWebSocketServerC3get_3use7Routing5RouteCyAA03WebC9ResponderVGAF27PathComponentsRepresentable_pd_y0iC0AMC_AA7RequestCtKctF\">get(_: PathComponentsRepresentable..., use: @escaping (WebSocket, Request) throws -&gt; ()) -&gt; Route&lt;WebSocketResponder&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let responder: <Type usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>responder<\/decl.name>: <decl.var.type><ref.struct usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 117,
                "key.name" : "responder",
                "key.namelength" : 9,
                "key.nameoffset" : 4993,
                "key.offset" : 4989,
                "key.parsed_declaration" : "let responder = WebSocketResponder(",
                "key.parsed_scope.end" : 96,
                "key.parsed_scope.start" : 96,
                "key.typename" : "WebSocketResponder",
                "key.typeusr" : "$S5Vapor18WebSocketResponderVD",
                "key.usr" : "s:5Vapor18NIOWebSocketServerC3get2at3use7Routing5RouteCyAA03WebC9ResponderVGSayAG13PathComponentOG_y0jC0APC_AA7RequestCtKctF9responderL_AKvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let route: <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/Type>&gt;<\/Declaration>",
                "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>route<\/decl.name>: <decl.var.type><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.struct usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/ref.struct>&gt;<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 75,
                "key.name" : "route",
                "key.namelength" : 5,
                "key.nameoffset" : 5119,
                "key.offset" : 5115,
                "key.parsed_declaration" : "let route: Route<WebSocketResponder> = .init(path: path, output: responder)",
                "key.parsed_scope.end" : 100,
                "key.parsed_scope.start" : 100,
                "key.typename" : "Route<WebSocketResponder>",
                "key.typeusr" : "$S7Routing5RouteCy5Vapor18WebSocketResponderVGD",
                "key.usr" : "s:5Vapor18NIOWebSocketServerC3get2at3use7Routing5RouteCyAA03WebC9ResponderVGSayAG13PathComponentOG_y0jC0APC_AA7RequestCtKctF5routeL_ALvp"
              }
            ],
            "key.typename" : "(NIOWebSocketServer) -> ([PathComponent], @escaping (WebSocket, Request) throws -> ()) -> Route<WebSocketResponder>",
            "key.typeusr" : "$S2at3use7Routing5RouteCy5Vapor18WebSocketResponderVGSayAC13PathComponentOG_y0fG0AMC_AF7RequestCtKctcD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerC3get2at3use7Routing5RouteCyAA03WebC9ResponderVGSayAG13PathComponentOG_y0jC0APC_AA7RequestCtKctF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func get(_ path: <Type usr=\"s:7Routing13PathComponentO\">PathComponent<\/Type>..., use closure: @escaping (<Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>, <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; ()) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5972
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 5949
              }
            ],
            "key.bodylength" : 48,
            "key.bodyoffset" : 6102,
            "key.doc.column" : 17,
            "key.doc.comment" : "Registers a new websocket handling route at the supplied dynamic path.\n\n- parameters:\n    - path: Dynamic path to associate with this websocket upgrade closure.\n            HTTP upgrade requests that contain a matching path will invoke the supplied on upgrade\n            closure when the websocket client connects.\n            Any parameterized values can be retrieved from the HTTP request supplied to the closure.\n    - closure: Websocket on upgrade closure. Accepts newly upgraded websocket connections.\n\n- returns: Discardable websocket responder route. Use this route reference to append metadata to the route.",
            "key.doc.declaration" : "public func get(_ path: PathComponent..., use closure: @escaping (WebSocket, Request) throws -> ()) -> Route<WebSocketResponder>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"116\" column=\"17\"><Name>get(_:use:)<\/Name><USR>s:5Vapor18NIOWebSocketServerC3get_3use7Routing5RouteCyAA03WebC9ResponderVGAF13PathComponentOd_y0iC0ANC_AA7RequestCtKctF<\/USR><Declaration>public func get(_ path: PathComponent..., use closure: @escaping (WebSocket, Request) throws -&gt; ()) -&gt; Route&lt;WebSocketResponder&gt;<\/Declaration><CommentParts><Abstract><Para>Registers a new websocket handling route at the supplied dynamic path.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dynamic path to associate with this websocket upgrade closure. HTTP upgrade requests that contain a matching path will invoke the supplied on upgrade closure when the websocket client connects. Any parameterized values can be retrieved from the HTTP request supplied to the closure.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Websocket on upgrade closure. Accepts newly upgraded websocket connections.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable websocket responder route. Use this route reference to append metadata to the route.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 116,
            "key.doc.name" : "get(_:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Dynamic path to associate with this websocket upgrade closure. HTTP upgrade requests that contain a matching path will invoke the supplied on upgrade closure when the websocket client connects. Any parameterized values can be retrieved from the HTTP request supplied to the closure."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Websocket on upgrade closure. Accepts newly upgraded websocket connections."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable websocket responder route. Use this route reference to append metadata to the route."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 691,
            "key.docoffset" : 5254,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:7Routing13PathComponentO\">PathComponent<\/ref.enum><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.struct usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 172,
            "key.name" : "get(_:use:)",
            "key.namelength" : 87,
            "key.nameoffset" : 5984,
            "key.offset" : 5979,
            "key.parsed_declaration" : "public func get(_ path: PathComponent..., use closure: @escaping (WebSocket, Request) throws -> ()) -> Route<WebSocketResponder>",
            "key.parsed_scope.end" : 118,
            "key.parsed_scope.start" : 116,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor18NIOWebSocketServerC3get2at3use7Routing5RouteCyAA03WebC9ResponderVGSayAG13PathComponentOG_y0jC0APC_AA7RequestCtKctF\">get(at:use:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor18NIOWebSocketServerC3get_3use7Routing5RouteCyAA03WebC9ResponderVGAF27PathComponentsRepresentable_pd_y0iC0AMC_AA7RequestCtKctF\">get(_: PathComponentsRepresentable..., use: @escaping (WebSocket, Request) throws -&gt; ()) -&gt; Route&lt;WebSocketResponder&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(NIOWebSocketServer) -> (PathComponent..., @escaping (WebSocket, Request) throws -> ()) -> Route<WebSocketResponder>",
            "key.typeusr" : "$S_3use7Routing5RouteCy5Vapor18WebSocketResponderVGAB13PathComponentOd_y0eF0AKC_AE7RequestCtKctcD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerC3get_3use7Routing5RouteCyAA03WebC9ResponderVGAF13PathComponentOd_y0iC0ANC_AA7RequestCtKctF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public func get(_ path: <Type usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/Type>..., use closure: @escaping (<Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>, <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; ()) -&gt; <Type usr=\"s:7Routing5RouteC\">Route<\/Type>&lt;<Type usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6875
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 6852
              }
            ],
            "key.bodylength" : 74,
            "key.bodyoffset" : 7019,
            "key.doc.column" : 17,
            "key.doc.comment" : "Registers a new websocket handling route at the supplied dynamic path.\n\n- parameters:\n    - path: Dynamic path to associate with this websocket upgrade closure.\n            HTTP upgrade requests that contain a matching path will invoke the supplied on upgrade\n            closure when the websocket client connects.\n            Any parameterized values can be retrieved from the HTTP request supplied to the closure.\n    - closure: Websocket on upgrade closure. Accepts newly upgraded websocket connections.\n\n- returns: Discardable websocket responder route. Use this route reference to append metadata to the route.",
            "key.doc.declaration" : "public func get(_ path: PathComponentsRepresentable..., use closure: @escaping (WebSocket, Request) throws -> ()) -> Route<WebSocketResponder>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift\" line=\"131\" column=\"17\"><Name>get(_:use:)<\/Name><USR>s:5Vapor18NIOWebSocketServerC3get_3use7Routing5RouteCyAA03WebC9ResponderVGAF27PathComponentsRepresentable_pd_y0iC0AMC_AA7RequestCtKctF<\/USR><Declaration>public func get(_ path: PathComponentsRepresentable..., use closure: @escaping (WebSocket, Request) throws -&gt; ()) -&gt; Route&lt;WebSocketResponder&gt;<\/Declaration><CommentParts><Abstract><Para>Registers a new websocket handling route at the supplied dynamic path.<\/Para><\/Abstract><Parameters><Parameter><Name>path<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Dynamic path to associate with this websocket upgrade closure. HTTP upgrade requests that contain a matching path will invoke the supplied on upgrade closure when the websocket client connects. Any parameterized values can be retrieved from the HTTP request supplied to the closure.<\/Para><\/Discussion><\/Parameter><Parameter><Name>closure<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Websocket on upgrade closure. Accepts newly upgraded websocket connections.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>Discardable websocket responder route. Use this route reference to append metadata to the route.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 131,
            "key.doc.name" : "get(_:use:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Dynamic path to associate with this websocket upgrade closure. HTTP upgrade requests that contain a matching path will invoke the supplied on upgrade closure when the websocket client connects. Any parameterized values can be retrieved from the HTTP request supplied to the closure."
                  }
                ],
                "name" : "path"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Websocket on upgrade closure. Accepts newly upgraded websocket connections."
                  }
                ],
                "name" : "closure"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "Discardable websocket responder route. Use this route reference to append metadata to the route."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 691,
            "key.docoffset" : 6157,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/NIOWebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>get<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:7Routing27PathComponentsRepresentableP\">PathComponentsRepresentable<\/ref.protocol><\/decl.var.parameter.type>...<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>use<\/decl.var.parameter.argument_label> <decl.var.parameter.name>closure<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:7Routing5RouteC\">Route<\/ref.class>&lt;<ref.struct usr=\"s:5Vapor18WebSocketResponderV\">WebSocketResponder<\/ref.struct>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 212,
            "key.name" : "get(_:use:)",
            "key.namelength" : 101,
            "key.nameoffset" : 6887,
            "key.offset" : 6882,
            "key.parsed_declaration" : "public func get(_ path: PathComponentsRepresentable..., use closure: @escaping (WebSocket, Request) throws -> ()) -> Route<WebSocketResponder>",
            "key.parsed_scope.end" : 133,
            "key.parsed_scope.start" : 131,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor18NIOWebSocketServerC3get2at3use7Routing5RouteCyAA03WebC9ResponderVGSayAG13PathComponentOG_y0jC0APC_AA7RequestCtKctF\">get(at:use:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:5Vapor18NIOWebSocketServerC3get_3use7Routing5RouteCyAA03WebC9ResponderVGAF13PathComponentOd_y0iC0ANC_AA7RequestCtKctF\">get(_: PathComponent..., use: @escaping (WebSocket, Request) throws -&gt; ()) -&gt; Route&lt;WebSocketResponder&gt;<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(NIOWebSocketServer) -> (PathComponentsRepresentable..., @escaping (WebSocket, Request) throws -> ()) -> Route<WebSocketResponder>",
            "key.typeusr" : "$S_3use7Routing5RouteCy5Vapor18WebSocketResponderVGAB27PathComponentsRepresentable_pd_y0eF0AJC_AE7RequestCtKctcD",
            "key.usr" : "s:5Vapor18NIOWebSocketServerC3get_3use7Routing5RouteCyAA03WebC9ResponderVGAF27PathComponentsRepresentable_pd_y0iC0AMC_AA7RequestCtKctF"
          }
        ],
        "key.typename" : "NIOWebSocketServer.Type",
        "key.typeusr" : "$S5Vapor18NIOWebSocketServerCmD",
        "key.usr" : "s:5Vapor18NIOWebSocketServerC"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2082,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>public protocol Client<\/Declaration>",
        "key.bodylength" : 1647,
        "key.bodyoffset" : 18,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol Client",
        "key.doc.discussion" : [
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift\" line=\"18\" column=\"17\"><Name>Client<\/Name><USR>s:5Vapor6ClientP<\/USR><Declaration>public protocol Client<\/Declaration><CommentParts><Abstract><Para>Connects to remote HTTP servers and sends HTTP requests receiving HTTP responses.<\/Para><\/Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try req.client().get(\"http:\/\/vapor.codes\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 18,
        "key.doc.name" : "Client",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/Client\/Client.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Client<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1666,
        "key.name" : "Client",
        "key.namelength" : 6,
        "key.nameoffset" : 10,
        "key.offset" : 0,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func webSocket(_ url: <Type usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/Type>, headers: <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type> = default, beforeSend: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; () = default) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1187
              }
            ],
            "key.bodylength" : 332,
            "key.bodyoffset" : 1331,
            "key.doc.column" : 17,
            "key.doc.comment" : "Sends an HTTP `GET` `Request` to a server with an optional configuration closure that will run before sending.\nThis `Request` will ask for upgrade to `WebSocket` protocol.\n\n    let res = try client.webSocket(\"http:\/\/api.vapor.codes\/users\")\n    print(res) \/\/ Future<WebSocket>\n\nHTTP `GET` requests are typically used for fetching information and do not have bodies.\nHowever, the `beforeSend` closure is a great place for encoding query string parameters.\n\n    let res = try client.get(\"http:\/\/api.vapor.codes\/users\") { get in\n        try get.query.encode([\"name\": \"vapor\"])\n    }\n    print(res) \/\/ Future<Response>\n\n- parameters:\n    - url: Something `URLRepresentable` that will be converted to a `URL`.\n           This `URL` should contain a scheme, hostname, and port.\n    - headers: `HTTPHeaders` to add to the request. Empty by default.\n    - beforeSend: An optional closure that can mutate the `Request` before it is sent.\n- returns: A `Future` containing the newly connected `WebSocket` or an `Error`.",
            "key.doc.declaration" : "public func webSocket(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -> () = default) -> Future<WebSocket>",
            "key.doc.discussion" : [
              {
                "CodeListing" : ""
              },
              {
                "Para" : "HTTP `GET` requests are typically used for fetching information and do not have bodies. However, the `beforeSend` closure is a great place for encoding query string parameters."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift\" line=\"22\" column=\"17\"><Name>webSocket(_:headers:beforeSend:)<\/Name><USR>s:5Vapor6ClientPAAE9webSocket_7headers10beforeSend3NIO15EventLoopFutureCy03WebD0AJCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF<\/USR><Declaration>public func webSocket(_ url: URLRepresentable, headers: HTTPHeaders = default, beforeSend: (Request) throws -&gt; () = default) -&gt; Future&lt;WebSocket&gt;<\/Declaration><CommentParts><Abstract><Para>Sends an HTTP <codeVoice>GET<\/codeVoice> <codeVoice>Request<\/codeVoice> to a server with an optional configuration closure that will run before sending. This <codeVoice>Request<\/codeVoice> will ask for upgrade to <codeVoice>WebSocket<\/codeVoice> protocol.<\/Para><\/Abstract><Parameters><Parameter><Name>url<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Something <codeVoice>URLRepresentable<\/codeVoice> that will be converted to a <codeVoice>URL<\/codeVoice>. This <codeVoice>URL<\/codeVoice> should contain a scheme, hostname, and port.<\/Para><\/Discussion><\/Parameter><Parameter><Name>headers<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para><codeVoice>HTTPHeaders<\/codeVoice> to add to the request. Empty by default.<\/Para><\/Discussion><\/Parameter><Parameter><Name>beforeSend<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>An optional closure that can mutate the <codeVoice>Request<\/codeVoice> before it is sent.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the newly connected <codeVoice>WebSocket<\/codeVoice> or an <codeVoice>Error<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try client.webSocket(\"http:\/\/api.vapor.codes\/users\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<WebSocket>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>HTTP <codeVoice>GET<\/codeVoice> requests are typically used for fetching information and do not have bodies. However, the <codeVoice>beforeSend<\/codeVoice> closure is a great place for encoding query string parameters.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let res = try client.get(\"http:\/\/api.vapor.codes\/users\") { get in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    try get.query.encode([\"name\": \"vapor\"])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(res) \/\/ Future<Response>]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 22,
            "key.doc.name" : "webSocket(_:headers:beforeSend:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Something `URLRepresentable` that will be converted to a `URL`. This `URL` should contain a scheme, hostname, and port."
                  }
                ],
                "name" : "url"
              },
              {
                "discussion" : [
                  {
                    "Para" : "`HTTPHeaders` to add to the request. Empty by default."
                  }
                ],
                "name" : "headers"
              },
              {
                "discussion" : [
                  {
                    "Para" : "An optional closure that can mutate the `Request` before it is sent."
                  }
                ],
                "name" : "beforeSend"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the newly connected `WebSocket` or an `Error`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 1160,
            "key.docoffset" : 23,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>webSocket<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>url<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:4HTTP16URLRepresentableP\">URLRepresentable<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beforeSend<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = <syntaxtype.keyword>default<\/syntaxtype.keyword><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 470,
            "key.name" : "webSocket(_:headers:beforeSend:)",
            "key.namelength" : 109,
            "key.nameoffset" : 1199,
            "key.offset" : 1194,
            "key.parsed_declaration" : "public func webSocket(_ url: URLRepresentable, headers: HTTPHeaders = [:], beforeSend: (Request) throws -> () = { _ in }) -> Future<WebSocket>",
            "key.parsed_scope.end" : 30,
            "key.parsed_scope.start" : 22,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Client> (Self) -> (URLRepresentable, HTTPHeaders, (Request) throws -> ()) -> EventLoopFuture<WebSocket>",
            "key.typeusr" : "$S_7headers10beforeSend3NIO15EventLoopFutureCy9WebSocketAFCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVy5Vapor7RequestCKXEtcD",
            "key.usr" : "s:5Vapor6ClientPAAE9webSocket_7headers10beforeSend3NIO15EventLoopFutureCy03WebD0AJCG4HTTP16URLRepresentable_p_8NIOHTTP111HTTPHeadersVyAA7RequestCKXEtF"
          }
        ],
        "key.typename" : "Client.Protocol",
        "key.typeusr" : "$S5Vapor6Client_pmD",
        "key.usr" : "s:5Vapor6ClientP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol WebSocketClient<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1739
          }
        ],
        "key.bodylength" : 308,
        "key.bodyoffset" : 1772,
        "key.doc.column" : 17,
        "key.doc.comment" : "Capable of connecting to an WebSocket server based on a `Request`.",
        "key.doc.declaration" : "public protocol WebSocketClient",
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift\" line=\"34\" column=\"17\"><Name>WebSocketClient<\/Name><USR>s:5Vapor15WebSocketClientP<\/USR><Declaration>public protocol WebSocketClient<\/Declaration><CommentParts><Abstract><Para>Capable of connecting to an WebSocket server based on a <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 34,
        "key.doc.name" : "WebSocketClient",
        "key.doc.type" : "Class",
        "key.doclength" : 71,
        "key.docoffset" : 1668,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>WebSocketClient<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 335,
        "key.name" : "WebSocketClient",
        "key.namelength" : 15,
        "key.nameoffset" : 1755,
        "key.offset" : 1746,
        "key.parsed_declaration" : "public protocol WebSocketClient",
        "key.parsed_scope.end" : 41,
        "key.parsed_scope.start" : 34,
        "key.runtime_name" : "_TtP4main15WebSocketClient_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func webSocketConnect(_ request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:5Async6Futurea\">Future<\/Type>&lt;<Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>&gt;<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Connects to a WebSocket server using the supplied `Request`.\n\n- parameters:\n    - request: HTTP upgrade request to send.\n- returns: A `Future` containing the newly connected `WebSocket` or an `Error`.",
            "key.doc.declaration" : "func webSocketConnect(_ request: Request) -> Future<WebSocket>",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift\" line=\"40\" column=\"10\"><Name>webSocketConnect(_:)<\/Name><USR>s:5Vapor15WebSocketClientP03webC7Connecty3NIO15EventLoopFutureCy0bC0AHCGAA7RequestCF<\/USR><Declaration>func webSocketConnect(_ request: Request) -&gt; Future&lt;WebSocket&gt;<\/Declaration><CommentParts><Abstract><Para>Connects to a WebSocket server using the supplied <codeVoice>Request<\/codeVoice>.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>HTTP upgrade request to send.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>A <codeVoice>Future<\/codeVoice> containing the newly connected <codeVoice>WebSocket<\/codeVoice> or an <codeVoice>Error<\/codeVoice>.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 40,
            "key.doc.name" : "webSocketConnect(_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "HTTP upgrade request to send."
                  }
                ],
                "name" : "request"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "A `Future` containing the newly connected `WebSocket` or an `Error`."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 236,
            "key.docoffset" : 1777,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketClient.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>webSocketConnect<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:5Async6Futurea\">Future<\/ref.typealias>&lt;<ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class>&gt;<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 62,
            "key.name" : "webSocketConnect(_:)",
            "key.namelength" : 36,
            "key.nameoffset" : 2022,
            "key.offset" : 2017,
            "key.parsed_declaration" : "func webSocketConnect(_ request: Request) -> Future<WebSocket>",
            "key.parsed_scope.end" : 40,
            "key.parsed_scope.start" : 40,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : WebSocketClient> (Self) -> (Request) -> EventLoopFuture<WebSocket>",
            "key.typeusr" : "$Sy3NIO15EventLoopFutureCy9WebSocketADCG5Vapor7RequestCcD",
            "key.usr" : "s:5Vapor15WebSocketClientP03webC7Connecty3NIO15EventLoopFutureCy0bC0AHCGAA7RequestCF"
          }
        ],
        "key.typename" : "WebSocketClient.Protocol",
        "key.typeusr" : "$S5Vapor15WebSocketClient_pmD",
        "key.usr" : "s:5Vapor15WebSocketClientP"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1776,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct WebSocketResponder<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 416
          }
        ],
        "key.bodylength" : 1324,
        "key.bodyoffset" : 450,
        "key.doc.column" : 15,
        "key.doc.comment" : "Handles an `HTTPRequest` requesting to upgrade to the websocket protocol.\n\nThe `WebSocketResponder` can decide to deny the upgrade by returning `nil` on `shouldUpgrade`.\nIn this case, the HTTP request will continue to Vapor's normal request\/response chain (invoking middleware).\n\nIf the HTTP request is approved to upgrade, the `onUpgrade` callback will receive the connected websocket client.",
        "key.doc.declaration" : "public struct WebSocketResponder",
        "key.doc.discussion" : [
          {
            "Para" : "The `WebSocketResponder` can decide to deny the upgrade by returning `nil` on `shouldUpgrade`. In this case, the HTTP request will continue to Vapor’s normal request\/response chain (invoking middleware)."
          },
          {
            "Para" : "If the HTTP request is approved to upgrade, the `onUpgrade` callback will receive the connected websocket client."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift\" line=\"7\" column=\"15\"><Name>WebSocketResponder<\/Name><USR>s:5Vapor18WebSocketResponderV<\/USR><Declaration>public struct WebSocketResponder<\/Declaration><CommentParts><Abstract><Para>Handles an <codeVoice>HTTPRequest<\/codeVoice> requesting to upgrade to the websocket protocol.<\/Para><\/Abstract><Discussion><Para>The <codeVoice>WebSocketResponder<\/codeVoice> can decide to deny the upgrade by returning <codeVoice>nil<\/codeVoice> on <codeVoice>shouldUpgrade<\/codeVoice>. In this case, the HTTP request will continue to Vapor’s normal request\/response chain (invoking middleware).<\/Para><Para>If the HTTP request is approved to upgrade, the <codeVoice>onUpgrade<\/codeVoice> callback will receive the connected websocket client.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 7,
        "key.doc.name" : "WebSocketResponder",
        "key.doc.type" : "Class",
        "key.doclength" : 416,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>WebSocketResponder<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1352,
        "key.name" : "WebSocketResponder",
        "key.namelength" : 18,
        "key.nameoffset" : 430,
        "key.offset" : 423,
        "key.parsed_declaration" : "public struct WebSocketResponder",
        "key.parsed_scope.end" : 29,
        "key.parsed_scope.start" : 7,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal let shouldUpgrade: (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 674
              }
            ],
            "key.doc.column" : 18,
            "key.doc.comment" : "Used to determine whether to upgrade the HTTP request or not.\nIf the `HTTPHeaders` returned are not nil, the upgrade request is accepted and\n`onUpgrade` will be called with the accepted clients.",
            "key.doc.declaration" : "internal let shouldUpgrade: (Request) -> HTTPHeaders?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift\" line=\"11\" column=\"18\"><Name>shouldUpgrade<\/Name><USR>s:5Vapor18WebSocketResponderV13shouldUpgradey8NIOHTTP111HTTPHeadersVSgAA7RequestCcvp<\/USR><Declaration>internal let shouldUpgrade: (Request) -&gt; HTTPHeaders?<\/Declaration><CommentParts><Abstract><Para>Used to determine whether to upgrade the HTTP request or not. If the <codeVoice>HTTPHeaders<\/codeVoice> returned are not nil, the upgrade request is accepted and <codeVoice>onUpgrade<\/codeVoice> will be called with the accepted clients.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 11,
            "key.doc.name" : "shouldUpgrade",
            "key.doc.type" : "Other",
            "key.doclength" : 215,
            "key.docoffset" : 455,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>shouldUpgrade<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct>?<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.name" : "shouldUpgrade",
            "key.namelength" : 13,
            "key.nameoffset" : 687,
            "key.offset" : 683,
            "key.parsed_declaration" : "internal let shouldUpgrade: (Request) -> HTTPHeaders?",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "(Request) -> HTTPHeaders?",
            "key.typeusr" : "$Sy8NIOHTTP111HTTPHeadersVSg5Vapor7RequestCcD",
            "key.usr" : "s:5Vapor18WebSocketResponderV13shouldUpgradey8NIOHTTP111HTTPHeadersVSgAA7RequestCcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal let onUpgrade: (<Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>, <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; ()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 876
              }
            ],
            "key.doc.column" : 18,
            "key.doc.comment" : "Handles the newly connected websocket client.\nThis closure is also supplied with the HTTP request that created the connection.",
            "key.doc.declaration" : "internal let onUpgrade: (WebSocket, Request) throws -> ()",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift\" line=\"15\" column=\"18\"><Name>onUpgrade<\/Name><USR>s:5Vapor18WebSocketResponderV9onUpgradeyy0bC0AEC_AA7RequestCtKcvp<\/USR><Declaration>internal let onUpgrade: (WebSocket, Request) throws -&gt; ()<\/Declaration><CommentParts><Abstract><Para>Handles the newly connected websocket client. This closure is also supplied with the HTTP request that created the connection.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 15,
            "key.doc.name" : "onUpgrade",
            "key.doc.type" : "Other",
            "key.doclength" : 139,
            "key.docoffset" : 733,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>onUpgrade<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 48,
            "key.name" : "onUpgrade",
            "key.namelength" : 9,
            "key.nameoffset" : 889,
            "key.offset" : 885,
            "key.parsed_declaration" : "internal let onUpgrade: (WebSocket, Request) throws -> ()",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.typename" : "(WebSocket, Request) throws -> ()",
            "key.typeusr" : "$Syy9WebSocketAAC_5Vapor7RequestCtKcD",
            "key.usr" : "s:5Vapor18WebSocketResponderV9onUpgradeyy0bC0AEC_AA7RequestCtKcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(shouldUpgrade: @escaping (<Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type>?, onUpgrade: @escaping (<Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>, <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) throws -&gt; ())<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1568
              }
            ],
            "key.bodylength" : 83,
            "key.bodyoffset" : 1689,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new `WebSocketResponder` with closures for handling websocket upgrade events.\n\n- parameters:\n    - shouldUpgrade: Determines whether to upgrade the HTTP request or not.\n                     Headers returned by this parameter will be returned with the 101 switching protocols response.\n                     If `nil` is returned, the upgrade request will be denied.\n    - onUpgrade: Handles the newly connected websocket client when `shouldUpgrade` approves the upgrade request.\n                 The HTTP request that initiated the upgrade is also supplied.",
            "key.doc.declaration" : "public init(shouldUpgrade: @escaping (Request) -> HTTPHeaders?, onUpgrade: @escaping (WebSocket, Request) throws -> ())",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift\" line=\"25\" column=\"12\"><Name>init(shouldUpgrade:onUpgrade:)<\/Name><USR>s:5Vapor18WebSocketResponderV13shouldUpgrade02onF0AC8NIOHTTP111HTTPHeadersVSgAA7RequestCc_y0bC0ALC_AKtKctcfc<\/USR><Declaration>public init(shouldUpgrade: @escaping (Request) -&gt; HTTPHeaders?, onUpgrade: @escaping (WebSocket, Request) throws -&gt; ())<\/Declaration><CommentParts><Abstract><Para>Creates a new <codeVoice>WebSocketResponder<\/codeVoice> with closures for handling websocket upgrade events.<\/Para><\/Abstract><Parameters><Parameter><Name>shouldUpgrade<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Determines whether to upgrade the HTTP request or not. Headers returned by this parameter will be returned with the 101 switching protocols response. If <codeVoice>nil<\/codeVoice> is returned, the upgrade request will be denied.<\/Para><\/Discussion><\/Parameter><Parameter><Name>onUpgrade<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Handles the newly connected websocket client when <codeVoice>shouldUpgrade<\/codeVoice> approves the upgrade request. The HTTP request that initiated the upgrade is also supplied.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 25,
            "key.doc.name" : "init(shouldUpgrade:onUpgrade:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "Determines whether to upgrade the HTTP request or not. Headers returned by this parameter will be returned with the 101 switching protocols response. If `nil` is returned, the upgrade request will be denied."
                  }
                ],
                "name" : "shouldUpgrade"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Handles the newly connected websocket client when `shouldUpgrade` approves the upgrade request. The HTTP request that initiated the upgrade is also supplied."
                  }
                ],
                "name" : "onUpgrade"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 625,
            "key.docoffset" : 939,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketResponder.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>shouldUpgrade<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct>?<\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>onUpgrade<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 198,
            "key.name" : "init(shouldUpgrade:onUpgrade:)",
            "key.namelength" : 112,
            "key.nameoffset" : 1575,
            "key.offset" : 1575,
            "key.parsed_declaration" : "public init(shouldUpgrade: @escaping (Request) -> HTTPHeaders?, onUpgrade: @escaping (WebSocket, Request) throws -> ())",
            "key.parsed_scope.end" : 28,
            "key.parsed_scope.start" : 25,
            "key.substructure" : [

            ],
            "key.typename" : "(WebSocketResponder.Type) -> (@escaping (Request) -> HTTPHeaders?, @escaping (WebSocket, Request) throws -> ()) -> WebSocketResponder",
            "key.typeusr" : "$S13shouldUpgrade02onB05Vapor18WebSocketResponderV8NIOHTTP111HTTPHeadersVSgAC7RequestCc_y0eF0ALC_AKtKctcD",
            "key.usr" : "s:5Vapor18WebSocketResponderV13shouldUpgrade02onF0AC8NIOHTTP111HTTPHeadersVSgAA7RequestCc_y0bC0ALC_AKtKctcfc"
          }
        ],
        "key.typename" : "WebSocketResponder.Type",
        "key.typeusr" : "$S5Vapor18WebSocketResponderVmD",
        "key.usr" : "s:5Vapor18WebSocketResponderV"
      }
    ]
  }
}, {
  "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1864,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol WebSocketServer<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 844
          }
        ],
        "key.bodylength" : 985,
        "key.bodyoffset" : 877,
        "key.doc.column" : 17,
        "key.doc.comment" : "A `WebSocketServer` determines whether HTTP requests requesting upgrade to the websocket protocol should\nbe approved or denied. If approved, additional headers can be returned in the 101 switching protocols response.\n\nWhen HTTP upgrade requests are approved, the `WebSocketServer` will handle the newly connected websocket clients.\n\nHTTP upgrade requests will be handled by the `WebSocketServer` before invoking Vapor's normal HTTP request pipeline\n(including middleware). Should an HTTP upgrade request be accepted, no other parts of Vapor's pipeline will be invoked.\nShould the HTTP upgrade request be denied, the request will continue through Vapor's HTTP pipeline normally.\n\nNote: The `WebSocketServer` _always_ runs behind an HTTP server and will only be invoked when HTTP requests request an upgrade.",
        "key.doc.declaration" : "public protocol WebSocketServer",
        "key.doc.discussion" : [
          {
            "Para" : "When HTTP upgrade requests are approved, the `WebSocketServer` will handle the newly connected websocket clients."
          },
          {
            "Para" : "HTTP upgrade requests will be handled by the `WebSocketServer` before invoking Vapor’s normal HTTP request pipeline (including middleware). Should an HTTP upgrade request be accepted, no other parts of Vapor’s pipeline will be invoked. Should the HTTP upgrade request be denied, the request will continue through Vapor’s HTTP pipeline normally."
          },
          {
            "Para" : "Note: The `WebSocketServer`  runs behind an HTTP server and will only be invoked when HTTP requests request an upgrade."
          }
        ],
        "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift\" line=\"11\" column=\"17\"><Name>WebSocketServer<\/Name><USR>s:5Vapor15WebSocketServerP<\/USR><Declaration>public protocol WebSocketServer<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>WebSocketServer<\/codeVoice> determines whether HTTP requests requesting upgrade to the websocket protocol should be approved or denied. If approved, additional headers can be returned in the 101 switching protocols response.<\/Para><\/Abstract><Discussion><Para>When HTTP upgrade requests are approved, the <codeVoice>WebSocketServer<\/codeVoice> will handle the newly connected websocket clients.<\/Para><Para>HTTP upgrade requests will be handled by the <codeVoice>WebSocketServer<\/codeVoice> before invoking Vapor’s normal HTTP request pipeline (including middleware). Should an HTTP upgrade request be accepted, no other parts of Vapor’s pipeline will be invoked. Should the HTTP upgrade request be denied, the request will continue through Vapor’s HTTP pipeline normally.<\/Para><Para>Note: The <codeVoice>WebSocketServer<\/codeVoice> <emphasis>always<\/emphasis> runs behind an HTTP server and will only be invoked when HTTP requests request an upgrade.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 11,
        "key.doc.name" : "WebSocketServer",
        "key.doc.type" : "Class",
        "key.doclength" : 844,
        "key.docoffset" : 0,
        "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>WebSocketServer<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 1012,
        "key.name" : "WebSocketServer",
        "key.namelength" : 15,
        "key.nameoffset" : 860,
        "key.offset" : 851,
        "key.parsed_declaration" : "public protocol WebSocketServer",
        "key.parsed_scope.end" : 28,
        "key.parsed_scope.start" : 11,
        "key.runtime_name" : "_TtP4main15WebSocketServer_",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func webSocketShouldUpgrade(for request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>) -&gt; <Type usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/Type>?<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Determines whether the HTTP request should be upgraded or not.\nOnly HTTP requests that have requested websocket protocol upgrade will be supplied to this method.\n\n- parameters:\n    - request: The HTTP request requesting upgrade to websocket protocol.\n- returns: HTTPHeaders to include in the 101 switching protocols HTTP response.\n           If `nil`, the HTTP upgrade request will be denied.",
            "key.doc.declaration" : "func webSocketShouldUpgrade(for request: Request) -> HTTPHeaders?",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift\" line=\"19\" column=\"10\"><Name>webSocketShouldUpgrade(for:)<\/Name><USR>s:5Vapor15WebSocketServerP03webC13ShouldUpgrade3for8NIOHTTP111HTTPHeadersVSgAA7RequestC_tF<\/USR><Declaration>func webSocketShouldUpgrade(for request: Request) -&gt; HTTPHeaders?<\/Declaration><CommentParts><Abstract><Para>Determines whether the HTTP request should be upgraded or not. Only HTTP requests that have requested websocket protocol upgrade will be supplied to this method.<\/Para><\/Abstract><Parameters><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The HTTP request requesting upgrade to websocket protocol.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>HTTPHeaders to include in the 101 switching protocols HTTP response. If <codeVoice>nil<\/codeVoice>, the HTTP upgrade request will be denied.<\/Para><\/ResultDiscussion><\/CommentParts><\/Function>",
            "key.doc.line" : 19,
            "key.doc.name" : "webSocketShouldUpgrade(for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The HTTP request requesting upgrade to websocket protocol."
                  }
                ],
                "name" : "request"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "HTTPHeaders to include in the 101 switching protocols HTTP response. If `nil`, the HTTP upgrade request will be denied."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 444,
            "key.docoffset" : 882,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>webSocketShouldUpgrade<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:8NIOHTTP111HTTPHeadersV\">HTTPHeaders<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 65,
            "key.name" : "webSocketShouldUpgrade(for:)",
            "key.namelength" : 44,
            "key.nameoffset" : 1335,
            "key.offset" : 1330,
            "key.parsed_declaration" : "func webSocketShouldUpgrade(for request: Request) -> HTTPHeaders?",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : WebSocketServer> (Self) -> (Request) -> HTTPHeaders?",
            "key.typeusr" : "$S3for8NIOHTTP111HTTPHeadersVSg5Vapor7RequestC_tcD",
            "key.usr" : "s:5Vapor15WebSocketServerP03webC13ShouldUpgrade3for8NIOHTTP111HTTPHeadersVSgAA7RequestC_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func webSocketOnUpgrade(_ webSocket: <Type usr=\"s:9WebSocketAAC\">WebSocket<\/Type>, for request: <Type usr=\"s:5Vapor7RequestC\">Request<\/Type>)<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Handles newly connected websocket clients. This method will only be called if `webSocketShouldUpgrade(for:)` returned\nnon-nil HTTP headers.\n\n- parameters:\n    - webSocket: The newly connected websocket client. Use this to send and receive messages from the client.\n    - request: The HTTP request that initiated the websocket protocol upgrade.",
            "key.doc.declaration" : "func webSocketOnUpgrade(_ webSocket: WebSocket, for request: Request)",
            "key.doc.file" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift\" line=\"27\" column=\"10\"><Name>webSocketOnUpgrade(_:for:)<\/Name><USR>s:5Vapor15WebSocketServerP03webC9OnUpgrade_3fory0bC0AFC_AA7RequestCtF<\/USR><Declaration>func webSocketOnUpgrade(_ webSocket: WebSocket, for request: Request)<\/Declaration><CommentParts><Abstract><Para>Handles newly connected websocket clients. This method will only be called if <codeVoice>webSocketShouldUpgrade(for:)<\/codeVoice> returned non-nil HTTP headers.<\/Para><\/Abstract><Parameters><Parameter><Name>webSocket<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The newly connected websocket client. Use this to send and receive messages from the client.<\/Para><\/Discussion><\/Parameter><Parameter><Name>request<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The HTTP request that initiated the websocket protocol upgrade.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 27,
            "key.doc.name" : "webSocketOnUpgrade(_:for:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The newly connected websocket client. Use this to send and receive messages from the client."
                  }
                ],
                "name" : "webSocket"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The HTTP request that initiated the websocket protocol upgrade."
                  }
                ],
                "name" : "request"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 387,
            "key.docoffset" : 1401,
            "key.filepath" : "\/Users\/salesawagner\/Documents\/Projects\/WAS\/was-commerce\/.build\/checkouts\/vapor.git-5492988889259800272\/Sources\/Vapor\/WebSocket\/WebSocketServer.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>webSocketOnUpgrade<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>webSocket<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:9WebSocketAAC\">WebSocket<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>request<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:5Vapor7RequestC\">Request<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 69,
            "key.name" : "webSocketOnUpgrade(_:for:)",
            "key.namelength" : 64,
            "key.nameoffset" : 1797,
            "key.offset" : 1792,
            "key.parsed_declaration" : "func webSocketOnUpgrade(_ webSocket: WebSocket, for request: Request)",
            "key.parsed_scope.end" : 27,
            "key.parsed_scope.start" : 27,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : WebSocketServer> (Self) -> (WebSocket, Request) -> ()",
            "key.typeusr" : "$S_3fory9WebSocketABC_5Vapor7RequestCtcD",
            "key.usr" : "s:5Vapor15WebSocketServerP03webC9OnUpgrade_3fory0bC0AFC_AA7RequestCtF"
          }
        ],
        "key.typename" : "WebSocketServer.Protocol",
        "key.typeusr" : "$S5Vapor15WebSocketServer_pmD",
        "key.usr" : "s:5Vapor15WebSocketServerP"
      }
    ]
  }
}]
